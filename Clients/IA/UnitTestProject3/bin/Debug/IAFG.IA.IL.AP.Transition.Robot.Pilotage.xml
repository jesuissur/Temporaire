<?xml version="1.0"?>
<doc>
<assembly>
<name>
IAFG.IA.IL.AP.Transition.Robot.Pilotage
</name>
</assembly>
<members>
<member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirCleIllustration.Executer(System.String)">
	<summary>
	</summary>
	<param name="CodePlan">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirCleIllustration">
	<summary>
 Classe de requete pour la requête ObtenirCleIllustration.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ObtenirDescriptionProtection.DescriptionAbregee">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ObtenirDescriptionProtection.DescriptionProtection">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ConversionPlanExcelMRK.Executer(System.String)">
	<summary>
	</summary>
	<param name="PlanExcelMarketing">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ConversionPlanExcelMRK">
	<summary>
 Classe de requete pour la requête ConversionPlanExcelMRK.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ObtenirDescriptionProtection_Base.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirDescriptionProtection_Base)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirDescriptionProtection_Base à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirDescriptionProtection_Base.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirCategorieIllustration.Executer(IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration)">
	<summary>
	</summary>
	<param name="PlanIllustration">Ce paramètre est de type <code>IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirCategorieIllustration">
	<summary>
 Classe de requete pour la requête ObtenirCategorieIllustration.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Base.KeyAccessor.ApplyCriteriaMatchEqualOrDefault(IAFG.IA.IL.AP.Transition.Robot.Base.KeyAccessor)">
	<summary>
  Subfunction use by ApplyCriteria that tries to match criteria value by equality or match the default value define for the criteria.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Base.KeyAccessor.ApplyCriteriaMatchGreatestValueLessOrEqual(IAFG.IA.IL.AP.Transition.Robot.Base.KeyAccessor)">
	<summary>
  Subfunction use by ApplyCriteria that trys to select the value whose key matches the greatest value less than or equal to the criterisValue parameter
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Base.KeyAccessor.ApplyCriteriaMatchEqual(IAFG.IA.IL.AP.Transition.Robot.Base.KeyAccessor)">
	<summary>
  Subfunction use by ApplyCriteria that tries to match criteria value by equality.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Base.PDFException.#ctor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Base.PDFException.#ctor(System.String)">
	<summary>
	</summary>
	<param name="message"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Base.PDFException.#ctor(System.String,System.Exception)">
	<summary>
	</summary>
	<param name="message"></param>
	<param name="inner"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Base.PDFException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
	</summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Base.PDFException">
	<summary>
 Exception qui est levee par les objets du PDF.
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.My.Resources.Resources.ResourceManager">
	<summary>
  Retourne l'instance ResourceManager mise en cache utilisee par cette classe.
</summary>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.My.Resources.Resources.Culture">
	<summary>
  Remplace la propriete CurrentUICulture du thread actuel pour toutes
  les recherches de ressources � l'aide de cette classe de ressource fortement typee.
</summary>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.My.Resources.Resources">
	<summary>
  Une classe de ressource fortement typee destinee, entre autres, a� la consultation des chaines localisees.
</summary>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.GroupeTraitementRobot.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.GroupeTraitementRobot)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.GroupeTraitementRobot à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetGroupeTraitementRobot.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.PlanBaseRobot.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.PlanBaseRobot)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PlanBaseRobot à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPlanBaseRobot.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.GroupeTraitementRobotCodePlan.Executer(System.String)">
	<summary>
	</summary>
	<param name="CodePlan">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.GroupeTraitementRobotCodePlan">
	<summary>
 Classe de requete pour la requête GroupeTraitementRobotCodePlan.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ObtenirCategorieIllustration.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirCategorieIllustration)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirCategorieIllustration à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirCategorieIllustration.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.GroupeTraitementRobot.Executer(IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration)">
	<summary>
	</summary>
	<param name="PlanIllustration">Ce paramètre est de type <code>IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.GroupeTraitementRobot">
	<summary>
 Classe de requete pour la requête GroupeTraitementRobot.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirBanniere.Executer(System.String)">
	<summary>
	</summary>
	<param name="NoContrat">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirBanniere">
	<summary>
 Classe de requete pour la requête ObtenirBanniere.
 </summary>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.AccesPilotage.Schemas">
	<summary>
 enumeration contenant les differents schemas a charger
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.AccesPilotage.DescriptionTable.NomTable">
	<summary>
 Nom de la table
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.AccesPilotage.DescriptionTable.NomAttache">
	<summary>
 Nom de l'attache (Link Table)
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.AccesPilotage.DescriptionTable.#ctor(System.String,System.String)">
	<summary>
 Constructeur de la structure
 </summary>
	<param name="nomTable">Nom de la table</param>
	<param name="nomAttache">Nom de l'attache (Link Table)</param>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.AccesPilotage.Langue">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.AccesPilotage.Banniere">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.AccesPilotage.ContexteApplicatif">
	<summary>
 Indique le context applicatif qui sera utilise lors de l'excution d'une requete sql.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.AccesPilotage.ObtenirListesChoix">
	<summary>
 Permet d'acceder les listes de choix autres que XML a travers le PDF via l'interface IListesChoix
 </summary>
	<returns>Interface des listes de choix</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.AccesPilotage">
	<summary>
 Classe servant a etablir les connexions aux bases de donnees necessaires au
 fonctionnement d'une application
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.DictionnaireDonnees">
	<summary>
 Dictionnaire de donnees contenant des objets qui implements l'interface IPDFDataTable.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFException.#ctor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFException.#ctor(System.String)">
	<summary>
	</summary>
	<param name="message"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFException.#ctor(System.String,System.Exception)">
	<summary>
	</summary>
	<param name="message"></param>
	<param name="inner"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
	</summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFException">
	<summary>
 Exception qui est levee par les objets du PDF.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.ListesChoix">
	<summary>
 Permet d'instancier les interfaces de listes de choix et sert de point d'entree pour avoir acces a une instance de IListesChoix 
 </summary>
	<remarks>Subterfuge pour pouvoir utiliser des listes de choix generees par le PDF a travers une interface</remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.IPDFDataTable">
	<summary>
 Interface qui permet aux methodes de passer un instance qui implemente cette interface.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.IListesChoix">
	<summary>
 Interface qui permet aux methodes de passer un instance qui implemente cette interface.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRows">
	<summary>
 Represente une collection de lignes de donnees.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow">
	<summary>
 Represente une ligne de donnees
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine">
	<summary>
 enumeration des racines de la base de registre.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.EstCeClefExiste(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String)">
	<summary>
 Valide l'existance de la clef passee en parametre.
 </summary>
	<param name="registreRacine">La racine ou l'on doit valider l'existance de la clef.</param>
	<param name="clef">La clef dont on veut valider son existance.</param>
	<returns>Retourne la valeur True si la clef existe. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.CreerClef(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String)">
	<summary>
 Cree la clef dans la racine passee en parametre.
 </summary>
	<param name="registreRacine">La racine ou l'on veut creer la clef.</param>
	<param name="clef">La clef a creer.</param>
	<returns>Retourne la valeur True si la clef a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.SupprimerClef(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String)">
	<summary>
 Supprime la clef a partir de la racine passee en parametre
 </summary>
	<param name="registreRacine">La racine a partir de laquelle la clef sera supprimee.</param>
	<param name="clef">La clef que l'on veut supprimer.</param>
	<returns>Retourne la valeur True si la clef a ete supprimee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.SupprimerClef(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String,System.Boolean)">
	<summary>
 Supprime la clef a partir de la racine passee en parametre.. Si la clef contient des sous-clefs, en fonction du parametre recursive, l'ensemble de l'arbre sera supprime.
 </summary>
	<param name="registreRacine">La racine a partir de lqeuelle la clef sera supprimee.</param>
	<param name="clef">La clef que l'on veut supprimer.</param>
	<param name="recursive">Indique s'il faut supprimer les sous-clefs de la clef.</param>
	<returns>Retourne la valeur True si la clef a ete supprimee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.ObtenirValeur(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String,System.String,System.String)">
	<summary>
 Obtenir la valeur de la clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on doit lire la valeur de la clef.</param>
	<param name="clef">La clef d'ou l'on veut lire la valeur.</param>
	<param name="nomValeur">le nom de la valeur.</param>
	<param name="valeurDefaut">Si la valeur n'existe pas, cette valeur sera utilisee.</param>
	<returns>La valeur de type String.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.ObtenirValeur(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String,System.String,System.Byte[])">
	<summary>
 Obtenir la valeur de la clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on doit lire la valeur de la clef.</param>
	<param name="clef">La clef d'ou l'on veut lire la valeur.</param>
	<param name="nomValeur">le nom de la valeur.</param>
	<param name="valeurDefaut">Si la valeur n'existe pas, cette valeur sera utilisee.</param>
	<returns>La valeur de type Byte().</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.ObtenirValeur(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String,System.String,System.Int32)">
	<summary>
 Obtenir la valeur de la clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on doit lire la valeur de la clef.</param>
	<param name="clef">La clef d'ou l'on veut lire la valeur.</param>
	<param name="nomValeur">le nom de la valeur.</param>
	<param name="valeurDefaut">Si la valeur n'existe pas, cette valeur sera utilisee.</param>
	<returns>La valeur de type Integer.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.ObtenirValeurs(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String)">
	<summary>
	</summary>
	<param name="registreRacine"></param>
	<param name="clef"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.CreerValeur(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String,System.String,System.String)">
	<summary>
 Creer une valeur pour une clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on veyt creer une valeur.</param>
	<param name="clef">La clef ou la valeur sera creee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<param name="valeur">La valeur a conserver.</param>
	<returns>Retourne la valeur True si la valeur a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.CreerValeur(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String,System.String,System.Byte[])">
	<summary>
 Creer une valeur pour une clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on veyt creer une valeur.</param>
	<param name="clef">La clef ou la valeur sera creee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<param name="valeur">La valeur a conserver.</param>
	<returns>Retourne la valeur True si la valeur a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.CreerValeur(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String,System.String,System.Int32)">
	<summary>
 Creer une valeur pour une clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on veyt creer une valeur.</param>
	<param name="clef">La clef ou la valeur sera creee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<param name="valeur">La valeur a conserver.</param>
	<returns>Retourne la valeur True si la valeur a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.SupprimerValeur(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine,System.String,System.String)">
	<summary>
 Supprimer une valeur a partir de la clef pour la racine demandee.
 </summary>
	<param name="registreRacine">La racine d'ou l'on veut supprimer une valeur.</param>
	<param name="clef">La clef d'ou la valeur sera supprimee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<returns>Retourne la valeur True si la valeur a ete supprimee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.ObtenirClefRegistre(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.RegistreRacine)">
	<summary>
 Permet d'obtenir un objet RegistryKey representant la racine demandee par le parametre registreRacine.
 </summary>
	<param name="registreRacine">La racine de la base de regsitre demandee.</param>
	<returns>Une instance de RegistryKey</returns>
	<remarks>Si la valeur de l'enumeration n'existe pas, la valeur nul (Nothing) est retournee.</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre.EffacerRegistryKey(Microsoft.Win32.RegistryKey@)">
	<summary>
 Effacer l'instance a l'objet RegistryKey.
 </summary>
	<param name="registryKey">L'instance de l'objet RegistryKey.</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Registre">
	<summary>
 Cette classe est une classe de facade pour l'utilisation de la base de registre.
 </summary>
	<remarks>Cette classe est statique(Shared). Cette classe est non heritable(NotInheritable).</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ConversionCodeTabac.Executer(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac)">
	<summary>
	</summary>
	<param name="CodeTabac">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ConversionCodeTabac">
	<summary>
 Classe de requete pour la requête ConversionCodeTabac.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ObtenirCleIllustration.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirCleIllustration)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirCleIllustration à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirCleIllustration.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ConversionPlanExcelMRK.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ConversionPlanExcelMRK)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ConversionPlanExcelMRK à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetConversionPlanExcelMRK.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.PlanProtectionAddRobot.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.PlanProtectionAddRobot)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PlanProtectionAddRobot à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPlanProtectionAddRobot.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirDescriptionProtection_Base.Executer(System.Byte)">
	<summary>
	</summary>
	<param name="CleDescIllustration">Ce paramètre est de type <code>Byte</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirDescriptionProtection_Base">
	<summary>
 Classe de requete pour la requête ObtenirDescriptionProtection_Base.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ConversionTypeAssurance.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ConversionTypeAssurance)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ConversionTypeAssurance à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetConversionTypeAssurance.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ObtenirBanniere.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirBanniere)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirBanniere à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirBanniere.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ObtenirValeurEnum.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirValeurEnum)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirValeurEnum à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirValeurEnum.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ConversionTypeAssurance.Executer(System.String)">
	<summary>
	</summary>
	<param name="TypeAssuranceRobot">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ConversionTypeAssurance">
	<summary>
 Classe de requete pour la requête ConversionTypeAssurance.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotFonctions.#ctor">
	<summary>
 Constructeur de classe
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotFonctions.ObtenirPlanIllustration(System.String)">
	<summary>
 Obtenir le code de plan format Illustration
 </summary>
	<param name="codePlan">Code de plan</param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotFonctions.ObtenirDescriptionPlanIllustration(System.String)">
	<summary>
 Obtenir la description du plan illustration
 </summary>
	<param name="planIllustration"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotFonctions.ObtenirConvertionMRK(System.String)">
	<summary>
	</summary>
	<param name="codeMRK"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotFonctions.ObtenirGroupeTraitement(System.String)">
	<summary>
	</summary>
	<param name="planIllustration"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotFonctions.ObtenirGroupeTraitementCodePlan(System.String)">
	<summary>
	</summary>
	<param name="codePlan"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotFonctions.ObtenirConvertionCodeTabac(System.String)">
	<summary>
	</summary>
	<param name="codeTabac"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotFonctions.ObtenirConvertionTypeAssurance(System.String)">
	<summary>
	</summary>
	<param name="typeAssurance"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotFonctions.ObtenirCategorieIllustration(System.String)">
	<summary>
	</summary>
	<param name="planIllustration"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotFonctions.ObtenirValeurEnum(System.String,System.String)">
	<summary>
	</summary>
	<param name="nomMembre"></param>
	<param name="typeTransformation"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirDescriptionProtection.Executer(System.Byte)">
	<summary>
	</summary>
	<param name="CleDescIllustration">Ce paramètre est de type <code>Byte</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirDescriptionProtection">
	<summary>
 Classe de requete pour la requête ObtenirDescriptionProtection.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.GenerationPlan.GenererCodePlanProtectionBaseNonTrad(System.Int32,System.String,System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="planMRK"></param>
	<param name="choixBoni"></param>
	<param name="choixConcept"></param>
	<param name="choixTaxePrimeExcedentaire"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.GenerationPlan.GenererCodePlanProtectionBaseTrad(System.Int32,System.String)">
	<summary>
	</summary>
	<param name="planMRK"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.GenerationPlan.GenererCodePlanProtectionAdd(System.String,System.String)">
	<summary>
	</summary>
	<param name="codePlan"></param>
	<param name="planMRK"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.GroupeTraitementRobotCodePlan.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.GroupeTraitementRobotCodePlan)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.GroupeTraitementRobotCodePlan à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetGroupeTraitementRobotCodePlan.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ConversionCodeTabac.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ConversionCodeTabac)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ConversionCodeTabac à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetConversionCodeTabac.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.PlanBaseRobot.Executer(IAFG.IA.VI.AF.PDF.ENUMs.Banniere,IAFG.IA.VI.AF.PDF.ENUMs.TypeProduit,System.String,System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="Banniere">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.Banniere</code>.</param>
	<param name="TypeProduit">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.TypeProduit</code>.</param>
	<param name="PlanRobot">Ce paramètre est de type <code>String</code>.</param>
	<param name="ChoixBoni">Ce paramètre est de type <code>String</code>.</param>
	<param name="ChoixConcept">Ce paramètre est de type <code>String</code>.</param>
	<param name="ChoixTaxePrimeExcedentaire">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.PlanBaseRobot">
	<summary>
 Classe de requete pour la requête PlanBaseRobot.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.ObtenirPlanIllustration(System.String)">
	<summary>
 Appel de la requête pour obtenir le code de plan illustration
 </summary>
	<param name="codePlan">Code de plan</param>
	<returns>code de plan illustration</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.ObtenirDescriptionPlanIllustration(System.String)">
	<summary>
 Obtenir la description d'un plan illustration
 </summary>
	<param name="planIllustration">plan Illustration</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.ObtenirCategorieIllustration(System.String)">
	<summary>
 Obtenir la catégorie d'un plan Illustration. Utile seulement dans le cas de produit TRAD
 </summary>
	<param name="planIllustration">plan Illustration</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.ObtenirConvertionMRK(System.String)">
	<summary>
 Obtenir un planIllustration équivalent à un code Marketing
 </summary>
	<param name="code"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.ObtenirGroupeTraitement(System.String)">
	<summary>
 Obtenir le groupe de traitement pour un planIllustration
 </summary>
	<param name="planIllustration"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.ObtenirGroupeTraitementCodePlan(System.String)">
	<summary>
	</summary>
	<param name="codePlan"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.ObtenirConvertionCodeTabac(System.String)">
	<summary>
 Obtenir le code tabac format robot
 </summary>
	<param name="codeTabac"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.ObtenirConvertionTypeAssurance(System.String)">
	<summary>
 Obtenir le type d'assurance format robot
 </summary>
	<param name="typeAssurance"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.GenererCodePlanProtectionBaseTrad(System.Int32,System.String)">
	<summary>
	</summary>
	<param name="planMRK"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.GenererCodePlanProtectionBaseNonTrad(System.Int32,System.String,System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="planMRK"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.GenererCodePlanProtectionAdd(System.String,System.String)">
	<summary>
	</summary>
	<param name="planMRK"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Fonctions.ObtenirValeurEnum(System.String,System.String)">
	<summary>
 Obtenir la valeur numérique d'un enum selon le type de transformation demandé
 </summary>
	<param name="nomMembre">Nom du membre de l'énumération</param>
	<param name="typeTransformation">Indique quelle transformation est effectué</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Donnees.ObtenirDescriptionProtection.#ctor(IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.PDFDataRow,IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirDescriptionProtection)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirDescriptionProtection à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirDescriptionProtection.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirValeurEnum.Executer(IAFG.IA.VI.AP.RobotIA.ENUMs.TransformationEnum)">
	<summary>
	</summary>
	<param name="TransformationEnum">Ce paramètre est de type <code>IAFG.IA.VI.AP.RobotIA.ENUMs.TransformationEnum</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.ObtenirValeurEnum">
	<summary>
 Classe de requete pour la requête ObtenirValeurEnum.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.PlanProtectionAddRobot.Executer(System.String,System.String)">
	<summary>
	</summary>
	<param name="PlanBase">Ce paramètre est de type <code>String</code>.</param>
	<param name="PlanRobot">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.Requetes.PlanProtectionAddRobot">
	<summary>
 Classe de requete pour la requête PlanProtectionAddRobot.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotAccesPilotage.ObtenirLangueApplication(System.String)">
	<summary>
 Obtenir la langue de l'application
 </summary>
	<param name="nomApplication"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Robot.Robot.Pilotage.RobotAccesPilotage.Initialiser(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
	<summary>
 Initialiser l'accès au pilotage
 </summary>
	<param name="param"></param>
	<remarks></remarks>
</member>
</members>
</doc>