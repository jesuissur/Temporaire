<?xml version="1.0"?>
<doc>
<assembly>
<name>
IAFG.IA.VI.AccesValidation
</name>
</assembly>
<members>
<member name="P:IAFG.IA.VI.AccesValidation.My.Resources.Resources.ResourceManager">
	<summary>
  Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
</summary>
</member><member name="P:IAFG.IA.VI.AccesValidation.My.Resources.Resources.Culture">
	<summary>
  Remplace la propriété CurrentUICulture du thread actuel pour toutes
  les recherches de ressources à l'aide de cette classe de ressource fortement typée.
</summary>
</member><member name="T:IAFG.IA.VI.AccesValidation.My.Resources.Resources">
	<summary>
  Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
</summary>
</member><member name="P:IAFG.IA.VI.AccesValidation.MoteurValidation.InitialiseSeulement">
	<summary>
 Indique si on veut faire la validation lors de l'appel des méthodes InitialiserValider.
 Vrai si le champ est Initialisé sans faire de validation. Faux si le champ est validé avant de l'initialiser.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.ObtenirInstanceValidateur(System.Object)">
	<summary>
 Cree la classe de validation qui correspond au à l'objet passé en paramètres
 </summary>
	<param name="ObjetAValider">objet qui subira la validation</param>
	<returns>Une instance de la classe de validation</returns>
	<remarks>Cette méthode nécéssite que le projet ait une référence sur tous les assemblys contenus dans le fichier de config.</remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.#ctor(IAFG.IA.VI.AF.ENUMs.TypeValidation,IAFG.IA.VI.AP.Commun.Services.GestionPilotage)">
	<summary>
 Lis le fichier de configuration et initiales les variables locales
 </summary>
	<param name="validationActive">Le type de validation que les objets doivent suivre</param>
	<param name="registre">Un pointeur sur les clés de registre, nécessaire pour les valeurs par défaut, validation</param>
	<remarks>Le fichier doit se nommer config.xml et doit être dans le même répertoire que la librairie</remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.#ctor(IAFG.IA.VI.AF.ENUMs.TypeValidation)">
	<summary>
 Lis le fichier de configuration et initiales les variables locales
 </summary>
	<param name="validationActive">Le type de validation que les objets doivent suivre</param>
	<remarks>Le fichier doit se nommer config.xml et doit être dans le même répertoire que la librairie</remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.PushMessage(IAFG.IA.VI.ValidationTypes.MessageValidation)">
	<summary>
 Ajoute un message à la pile des messages d'erreur.
 </summary>
	<param name="messageAjouter">Le message à ajouter.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.PopMessage">
	<summary>
 Pop un message de la pile des erreurs et le retourne.
 </summary>
	<returns>Message poper de la pile des erreurs.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.PopAllMessages">
	<summary>
 Pop tous les messages de la pile d'erreur et nous les retourne.
 </summary>
	<returns>Une liste contenant tous les messages d'erreur.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.PeekMessage">
	<summary>
 Sort un message de la pile des erreurs et le retourne sans le supprimer
 </summary>
	<returns>Message de la pile des erreurs</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.LireAttributs(System.Object[],IAFG.IA.VI.ValidationTypes.Ordre@,IAFG.IA.VI.ValidationTypes.GroupeValidation@,IAFG.IA.VI.ValidationTypes.Application@)">
	<summary>
 Décode les attributs d'une méthode.
 </summary>
	<param name="unArray">Liste des attributs</param>
	<param name="unOrdre">L'ordre d'exécution</param>
	<param name="unGroupe">Un groupe de validation</param>
	<param name="uneApp">Le contexte applicatif</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.Valider(System.Object)">
	<summary>
 Valide l'objet passé en parametre avec la classe de validation reliée
 </summary>
	<param name="ObjetAValider">l'objet qui sera validé</param>
	<returns>Vrai si l'objet est valide, sinon faux</returns>
	<remarks>
 Les messages d'erreurs sont dans CollectionMessages. 
 Exécute toutes les méthodes qui sont dans le bon contexte applicatif et qui ont un ordre défini. 
 N'exécute pas les méthodes qui font partie d'un groupe de validation.
 </remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.Valider(System.Object,IAFG.IA.VI.ValidationTypes.GroupeValidation)">
	<summary>
 Valide l'objet passé en parametre avec la classe de validation reliée
 </summary>
	<param name="ObjetAValider">l'objet qui sera validé</param>
	<param name="unGroupeValidation">regroupe les validation</param>
	<returns>Vrai si l'objet est valide, sinon faux</returns>
	<remarks>
 Les messages d'erreurs sont dans CollectionMessages. 
 Exécute toutes les méthodes qui sont dans le bon contexte applicatif et qui ont un ordre défini et le même groupe de validation. 
 </remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.Valider(System.Object,System.Enum,System.Collections.ArrayList)">
	<summary>
 Valide l'objet passé en parametre avec la classe de validation reliée
 </summary>
	<param name="ObjetAValider">l'objet qui sera validé</param>
	<param name="unePropriete">le nom de la méthode à exécuter</param>
	<returns>Vrai si l'objet est valide, sinon faux</returns>
	<remarks>
 Les messages d'erreurs sont dans CollectionMessages. 
 Exécute une seule méthode qui est dans le bon contexte applicatif et qui se nomme champ. 
 Ne tiens pas compte du groupe de validation.
 </remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.Valider(System.String)">
	<summary>
 Valide l'objet passé en parametre avec la classe de validation reliée
 </summary>
	<param name="IdObjetAValider">l'Id de l'objet qui sera validé</param>
	<returns>Vrai si l'objet est valide, sinon faux</returns>
	<remarks>
 Les messages d'erreurs sont dans CollectionMessages. 
 Exécute une seule méthode qui est dans le bon contexte applicatif et qui se nomme champ. 
 Tiens compte du groupe de validation.
 </remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.Valider(System.String,IAFG.IA.VI.ValidationTypes.GroupeValidation)">
	<summary>
 Valide l'objet passé en parametre avec la classe de validation reliée
 </summary>
	<param name="IdObjetAValider">l'Id de l'objet qui sera validé</param>
	<param name="unGroupeValidation">moyen de regrouper les validations en bloc</param>
	<returns>Vrai si l'objet est valide, sinon faux</returns>
	<remarks>
 Les messages d'erreurs sont dans CollectionMessages. 
 Exécute une seule méthode qui est dans le bon contexte applicatif et qui se nomme champ. 
 Tiens compte du groupe de validation.
 </remarks>
</member><member name="P:IAFG.IA.VI.AccesValidation.MoteurValidation.EmpilerMessages">
	<summary>
 Défini si on empile les messages d'erreur ou si on retourne à la première erreur
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AccesValidation.MoteurValidation.Application">
	<summary>
 Le contexte applicatif
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Obligatoire, si rien n'est spécifié, aucune validation de se déroulera</remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.Finalize">
	<summary>
 Nettoie les collections
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AccesValidation.MoteurValidation.GroupeValidation">
	<summary>
 Le groupe de validation actuel
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Peut être nul</remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.InitialiserValider(System.Object,System.Object,System.Enum)">
	<summary>
	</summary>
	<param name="ObjetAValider"></param>
	<param name="nouvelleValeur"></param>
	<param name="unePropriete"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.OuvrirValidationLog(System.String)">
	<summary>
	</summary>
	<param name="pathFichier">Paramètre nécessaire même si FXCOP dit qu'il ne sert pas. Lorsqu'on
 vérifie avec FXCOP, le contexte ValidLog est à faux</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.GererErreurDonnee(IAFG.IA.VI.AF.Base.IAErreurDonneesException,System.String,IAFG.IA.VI.AF.Base.Base)">
	<summary>
 Fonction qui reçoit l'erreur levé par les objets de propo fait le message qui doit être utilisé par l'application.
 </summary>
	<param name="err">L'erreur lev</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AccesValidation.MoteurValidation.AppliquerModificationSub(System.Object,IAFG.IA.VI.ValidationTypes.ValidationEventArgs@)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AccesValidation.MoteurValidation">
	<summary>
 Cette classe effectue la validation d'un objet en appelant une classe équivalente selon le fichier config.xml
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AccesValidation.RedirectionAssembly.Assembly">
	<summary>
 Pointeur vers l'assembly lorsqu'elle sera chargée
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AccesValidation.RedirectionAssembly.Ns">
	<summary>
 Le namespace de l'assembly de validation
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AccesValidation.RedirectionAssembly.Id">
	<summary>
 Le nom de l'assembly de données
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AccesValidation.RedirectionAssembly">
	<summary>
 Structure qui contient le lien entre les objets de données et les objets de validation
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>