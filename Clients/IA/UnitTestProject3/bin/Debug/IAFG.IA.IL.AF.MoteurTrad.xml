<?xml version="1.0"?>
<doc>
<assembly>
<name>
IAFG.IA.IL.AF.MoteurTrad
</name>
</assembly>
<members>
<member name="P:IAFG.IA.IL.AF.MoteurTrad.Colonne.Item(System.Int32)">
	<summary>
 Donne la valeur à la position annee.
 </summary>
	<param name="annee">Index de l'année.</param>
	<value>Valeur à la position annee.</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonne.Incremente(System.Int32,System.Double)">
	<summary>
 Incrémente une valeur, à la position annee, d'une autre valeur.
 </summary>
	<param name="annee">Index(année) qui permet d'accéder à une valeur.</param>
	<param name="valeur">Valeur à ajouter.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonne.SetValeur(System.Int32,System.Double)">
	<summary>
 Remplace une valeur par une nouvelle valeur à la position annee.
 </summary>
	<param name="annee">Index(année) qui permet d'Accéder à une valeur.</param>
	<param name="valeur">Nouvelle valeur.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonne.getData(System.Double[]@)">
	<summary>
 Affecte les valeurs du vecteur interne au vecteur passé par référence.
 </summary>
	<param name="vecData">Vecteur qui va contenir les valeurs du vecteur interne.</param>
	<remarks>Le vecteur passé par référence va perdre l'ensemble des valeurs qu'il contient déjà. Aussi,
  si le vecteur n'a pas la bonne dimension, elle va être corrigée.</remarks>
</member><member name="T:IAFG.IA.IL.AF.MoteurTrad.Colonne">
	<summary>
 Contient les valeurs d'une colonne dans un vecteur de valeurs.
 </summary>
	<remarks>Le vecteur peut contenir 105 informations maximum.</remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.InitialiserContexte(IAFG.IA.VI.ENUMs.ContexteApplicatif)">
	<summary>
 Initialise l'objet de contexte en début de traitement.
 </summary>
	<remarks>
 L'initialisation doit être TOUJOURS faite dans le SetUp d'une classe!!!!
 </remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.RelacherContexte">
	<summary>
 Destruction de l'objet de contexte en fin de traitement.
 </summary>
	<remarks>
 La destruction doit être TOUJOURS faite dans le TearDown d'une classe!!!!
 </remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.ComparerFichiers(System.String,System.String)">
	<summary>
 Cette méthode sert à comparer deux fichiers csv
 </summary>
	<param name="fichier1">Nom et path du premier fichier à utiliser lors de la comparaison</param>
	<param name="fichier2">Nom et path du deuxième fichier à utiliser lors de la comparaison</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.ObtenirListeCasALire(System.String)">
	<summary>
 Cette méthode sert à obtenir la liste des cas à lire
 </summary>
	<param name="extension">L'extension (en majuscule) des fichiers à obtenir</param>
	<returns>Liste des fichiers à lire</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.ObtenirNomFichier(System.String)">
	<summary>
 Retourne le nom du fichier lorsque l'on a un fichier avec un path
 </summary>
	<param name="fichier">La "string" contenant le path et le nom du fichier</param>
	<returns>Le nom du fichier</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.ObtenirPathFichier(System.String)">
	<summary>
 Retourne le path du fichier 
 </summary>
	<param name="fichier">La string contenant le path et le nom du fichier</param>
	<returns>Retourne le path du fichier</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.ObtenirRepertoireResultatsNunit">
	<summary>
 Méthode qui retourne le répertoire ou se trouve le base qui sera utilisé pour faire la comparaison
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.CopierCsv(System.String)">
	<summary>
 Méthode qui permet de copier les fichiers csv de comparaison dans le repertoire des résultats Nunit
 </summary>
	<param name="fichier">Le path et le nom du fichier à copier</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.ObtenirDebutPath">
	<summary>
 Fonction qui retourne le path de l'environnement actuel
 </summary>
	<returns>Le path de l'environnement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.InitialiserListeCasALire">
	<summary>
 Methode qui sert à setter la liste des cas à rouler en test
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.CreateNewReproRep">
	<summary>
 Méthode qui crée un nouveau répertoire pour la repro
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.ManageReproRep">
	<summary>
 Méthode qui gère les répertoires de repro
 </summary>
	<remarks>Cette méthode s'arrange pour qu'il n'y ait pas plus de 10 répertoire de repro
 Elle supprime le répertoire le plus vieu</remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.GetLastReproDirectory">
	<summary>
 Méthode qui retourne le dernier répertoire de repro créé
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.ObtenirEnviroDev(System.String)">
	<summary>
 Fonction qui retourne l'environnement de développement
 </summary>
	<param name="path">path vers le dossier d'environnement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.Utilitaires.ObtenirDateEmission(System.String)">
	<summary>
 Cette fonction permet d'otenir la date à laquelle les cas robots ont été roulés
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AF.MoteurTrad.ApplicationBase.pctBoniCommission">
	<summary>
 Pourcentage de boni de protection
 </summary>
</member><member name="P:IAFG.IA.IL.AF.MoteurTrad.ApplicationBase.typeCommission">
	<summary>
 Type de commission
 </summary>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ApplicationBase.SetVecteurs(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<param name="scenario">Numéro de scénario</param>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ApplicationBase.#ctor(IAFG.IA.IL.AF.MoteurTrad.CalculTrad)">
	<summary>
 Constructeur de la classe
 </summary>
	<param name="objectCalcul">Instance de la classe CalculTrad</param>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ApplicationBase.AjustementAvantCalculs(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Fonction appelée avant de faire les calculs, permet de faire des ajustements sur les données si nécessaire.
 </summary>
	<remarks></remarks>
	<param name="scenario">Numéro du scénario</param>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ApplicationBase.AjustementApresCalculs(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Fonction appelée après les calculs, permet de faire des ajustements sur les données si nécessaire.
 </summary>
	<remarks></remarks>
	<param name="scenario">Numéro du scénario</param>
</member><member name="P:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.FilePathList">
	<summary>
 La liste des répertoires à utiliser pour charger les colonnes"
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.#ctor(System.String,System.String,System.String,System.String)">
	<summary>
 Constructeur
 </summary>
	<param name="PathBinaireTaux">Emplacement des taux binaires</param>
	<param name="NomBinaireTaux">Nom des taux binaires</param>
	<param name="FichierEnregistrement">Emplacement et nom du fichier de sauvegarde (sans extension) des logs des calls au moteur de calcul </param>
	<param name="FichierLecture">Emplacement et nom du fichier de lecture (avec extension) pour reproduire les logs</param>
	<remarks>Ce constructeur est le même que l'autre sauf que celui-ci va permettre de faire le logs des calls au moteur</remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.Initialiser_donnees(IAFG.IA.VI.AF.Illustration.Illustration@,System.String)">
	<summary>
 Fonction d'initialisation de l'objet de dossier
 </summary>
	<param name="illustration">l'objet Illustration qui contient les données</param>
	<param name="application">Nom de l'application.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.Calcul(System.Int32,System.Double,System.String)">
	<summary>
 Fonction de calcul des résultats a afficher dans Assurance crédit
 </summary>
	<param name="NoScenario">Le numéro de scénario sur lequel nous calculons.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.CalculEmprunt(System.Int32)">
	<summary>
 Fonction de calcul de l'écran d'emprunt bancaire
 </summary>
	<param name="NoScenario">Le scénario sur lequel faire les calculs.</param>
	<returns>Un code de retour en tant que CodeErreurs.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetColonneEmprunt(System.Int32,System.String,System.Double[]@)">
	<summary>
 obtient des données de l'objet d'emprunt
 </summary>
	<param name="NoScenario"></param>
	<param name="nomChamp">identifiant de la colonne voulue : ex: "Interets"</param>
	<param name="vecDonnee">le vecteur retourné en ref.</param>
	<returns>Un code de retour en tant que CodeErreurs.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.CalculPrimes(System.Int32,System.Int32)">
	<summary>
 Fonction de calcul des primes dans Assurance crédit
 </summary>
	<param name="noScenario">Le numero de scénario sur lequel calculer les primes.</param>
	<returns>Le statut du traitement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetAgeIllus(System.Int32)">
	<summary>
 Fonction qui récupère l'âge de l'illustration.
 </summary>
	<param name="noScenario">Le numéro du scénario avec lequel on récupère le scénario d'où l'on récupère l'âge de l'illustration.</param>
	<returns>L'âge de l'illustration.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureePrimeFixe(System.Int32,System.Int32@)">
	<summary>
 Retourne la duree pour laquelle la prime ne bougera pas
 </summary>
	<param name="noScenario">Le no de scenario</param>
	<param name="dureeMin">La duree retourné en ref</param>
	<returns>Code d'erreurs</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetValeur(System.Int32,System.String,System.Double@)">
	<summary>
 Accesseur pour les valeurs du moteur de calcul.
 </summary>
	<param name="NoScenario">La no de scenario</param>
	<param name="sNomValeur">LA nom de la valeur que l'on veut obtenir</param>
	<param name="dValeur">La valeur retourné byref</param>
	<returns>code d'erreurs.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetColonne(System.Int32,System.Int16,System.Double[]@)">
	<summary>
 Sert a aller chercher la colonne voulue dans les résultats
 </summary>
	<param name="NoScenario">Le no de scenario</param>
	<param name="IdMoteur">Le id de la colonne que l'on veut</param>
	<param name="vecDonnee">Byref, le tableau des valeurs pour la colonne demandée.</param>
	<returns>Code d'erreurs.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureePrimes(System.Int32,System.String,System.Int32@)">
	<summary>
 Fonction qui retourne la duree pour laquelle une prime ne bougera pas pour uen protection donné.
 </summary>
	<param name="NoScenario">Le no de scenario</param>
	<param name="planId">Le ID du plan pour lequel obetnir la duree de prime</param>
	<param name="duree">La duree de prime retourné.</param>
	<returns>code d'erreurs.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureeProtection(System.Int32,System.String,System.Int32@)">
	<summary>
 fonction pour trouver la durée d'une protection.
 </summary>
	<param name="NoScenario">Le no de scenario</param>
	<param name="planId">L'id du plan pour lequel on veut la duree de la protection.</param>
	<param name="duree">La duree retournée byref</param>
	<returns>Code d'erreur.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureePlan(System.Int32,System.String,System.String@)">
	<summary>
 fonction pour trouver la durée de la protection courante.
 </summary>
	<param name="NoScenario">Le numero de scenario</param>
	<param name="type">Le type de durée</param>
	<param name="protection">Le plan en parametre</param>
	<returns>La duree demandé.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureePlan(System.Int32,System.String,IAFG.IA.VI.AF.Proposition.Protection@)">
	<summary>
 fonction pour trouver la durée de la protection courante.
 </summary>
	<param name="NoScenario">Le numero de scenario</param>
	<param name="type">Le type de durée</param>
	<param name="protection">Le plan en parametre</param>
	<returns>La duree demandé.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.CacheDureeTempFlexMax(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Création d'une cache de la valeur DureeTempFlexMax utilisé énormément lors des calculs.
 </summary>
	<param name="scenario"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetVecteurPrime(System.Int32,System.String,System.Collections.Generic.List{System.Double}@,System.Collections.Generic.List{System.Double}@)">
	<summary>
 Fonction qui retourne les primes d'une protection pour tous les années
 À utiliser pour les primes de renouvellement comme les frais de policene sont pas inclus.
 </summary>
	<param name="NoScenario">Le no du scenario</param>
	<param name="idProt">L'id de la protection pour laquelle l'on veut les primes.</param>
	<param name="listePrimeCourant">Liste byref des primes.</param>
	<param name="listePrimeGarantie"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.InitialiserComparatif">
	<summary>
 Fonction créé pour des raison de performances, il était trop lent de recréer le cas bidon à chaque fois.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.CalculerComparatif(IAFG.IA.IL.AF.MoteurTrad.CalculTrad.TypeComparatif,System.Int32,IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration,System.Double,System.String,IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration,System.Boolean,System.Boolean,System.Boolean,System.String)">
	<summary>
 Fonction servant à calculer les valeurs nécessaire par le comparatif d'assurance vie.
 </summary>
	<param name="TypeComparatif">Le type de comparatif, soit prime ou soit capital</param>
	<param name="noScenario">Le numéro du scénario sur lequel l'On veut comparer</param>
	<param name="planIllus">Le code de plan illustration de la protection que l'on recherche</param>
	<param name="objectif">Soit le capital ou la prime dependant du type de comparaison</param>
	<param name="idPlanBase">Le ID du plan auquel nous nous comparons</param>
	<param name="codeRembFlexible">Le code du remboursement flexible des primes.</param>
	<param name="inclureDeces">Faut-il inclure le remboursement au décès?</param>
	<param name="inclureRFP">Faut-il inclure le RFP?</param>
	<param name="inclureAPM">Faut-il inclure l'APM?</param>
	<returns>Structure infoComparatif contenant toutes les informations pertinentes.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ReadLog(System.String,System.String)">
	<summary>
 Fonction qui lit le fichier de log et qui appelle les fonctions du fichier de log
 </summary>
	<param name="file"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ProduireOutputColonneV2(System.Int32,System.String)">
	<summary>
 Méthode qui sert à produire le fichier d'output avec les colonnes du moteur
 </summary>
	<param name="scenario">Le numéro du scénario</param>
	<param name="fichierEnCours">Le fichier dans lequel on écrit le contenu des colonens moteur</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ProduireOutputQANonTrad(System.Int32,System.Text.StringBuilder,System.IO.StreamWriter)">
	<summary>
 Méthode qui crée les Output QA pour NONTRAD
 </summary>
	<param name="scenario"></param>
	<param name="output"></param>
	<param name="sw"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetAgeIllus(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Fonction qui récupère l'âge de l'illustration.
 </summary>
	<param name="scenario">Le scénario d'où l'on récupère l'âge de l'illustration.</param>
	<returns>L'âge de l'illustration.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.IsPlanBase(IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration)">
	<summary>
 Fonctione permettant de savoir si le plan passé est un plan de base, utilisé dans plusieurs fonctions.
 </summary>
	<param name="planIllus">Le planIllus pour lequel l'on veut savoir</param>
	<returns>True si c'est un plan de base, false sinon</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.RoundUp(System.Double,System.Int16)">
	<summary>
 Arrondit au nombre plus haut.
 </summary>
	<param name="Valeur">Le nombre à arrondir.</param>
	<param name="nbdigits">Le nombre de décimal.</param>
	<returns>Le nombre arrondi.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ObtenirPrime(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.VI.AF.Proposition.Protection@,System.Int32,IAFG.IA.IL.AF.MoteurTrad.CalculTrad.FraisPolice@,IAFG.IA.IL.AF.MoteurTrad.CalculTrad.FraisPolice@)">
	<summary>
 Obtenir la prime d'un plan, sauf l'EPIC, pour une année
 </summary>
	<param name="scenario"></param>
	<param name="protection">Le plan pour lequel obtenir la prime.</param>
	<param name="annee">L'année pour laquelle obtenir la prime</param>
	<param name="fraisPoliceAss1">Les frais de polices sur le contrat.</param>
	<param name="fraisPoliceAss2">Les frais de polices sur le contrat.</param>
	<returns>La prime de la protection.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ObtenirTauxPrime(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.VI.AF.Proposition.Protection,System.Int32,System.Int32)">
	<summary>
 Fonction de calcul des primes dans Assurance crédit
 </summary>
	<param name="scenario">le no de scénario</param>
	<param name="protection">le plan pour lequel on veut le vecteur de prime</param>
	<param name="annee">l'année</param>
	<param name="duree">Durée de la protection. Toujours zéro excepté lors d'un DA/DMA/GA</param>
	<returns>le taux pour l'année choisie.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.AllocationFraisPolice(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.IL.AF.MoteurTrad.CalculTrad.FraisPolice[]@,IAFG.IA.IL.AF.MoteurTrad.CalculTrad.FraisPolice[]@)">
	<summary>
 Détermine quelle à quelle protection on doit assigner les frais de police.
 </summary>
	<param name="scenario">Le scénario</param>
	<param name="fraisPolice1">Les frais de police primaires</param>
	<param name="fraisPolice2">Les frais de police secondaires</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.CalculePrimeEpic(IAFG.IA.VI.AF.Illustration.Scenario,System.Double,IAFG.IA.VI.AF.Proposition.Protection,System.Double,System.Double@,System.Double@)">
	<summary>
 Calcule la prime annuelle de l'EPIC
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="TauxEpic">Le taux de prime pour l'EPIC</param>
	<param name="aoPlanEpic">Le lien vers la protection EPIC</param>
	<param name="dTotalPrimesSansEpic">Le total des primes sans l'EPIC.</param>
	<param name="PrimeEpic">Retourne la prime de l'EPIC</param>
	<param name="VolumeEpic">Retourne le volume de l'EPIC</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetAgeAssure1(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Fonction qui récupère l'age de l'assure 1.
 </summary>
	<param name="scenario">Le no de scenario</param>
	<returns>L'age</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDiminutionDADMA(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.VI.AF.Proposition.Protection,System.Int32@,System.Double@)">
	<summary>
 fonction calculer quand on va diminuer le montant de la DMA si
 on ne renouvelle pas le temporaire dans le cas ou le dma
 </summary>
	<param name="scenario">le # de scenario</param>
	<param name="protectionDMA">le plan du DMA</param>
	<param name="anneeDebut">l'annee de début de la réduction</param>
	<param name="montantDiminue">le montant de la dma diminuée</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetValeurRachatGarantie(IAFG.IA.VI.AF.Proposition.Protection,System.Int32)">
	<summary>
 Obtient les valeurs à afficher dans le tableau pour les valeurs de rachat par protection
 </summary>
	<param name="protection">Protection dont on veut la valeur de rachat.</param>
	<param name="anneeDemandee">L'année demandée. Représente la bande pour les V autre que V15.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetValeurLibereeGarantie(IAFG.IA.VI.AF.Proposition.Protection,System.Int32,System.Int32)">
	<summary>
 Obtient les valeurs à afficher dans le tableau pour les valeurs libérées garanties par protection
 </summary>
	<param name="protection">Protection pour laquelle on veut le vecteur des valeurs libérées garanties.</param>
	<param name="duree">La duree de la protection.</param>
	<param name="age">L'âge de l'assuré.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetValeurLibereeGarantieFicTaux(IAFG.IA.VI.AF.Proposition.Protection,System.Int32,System.Int32)">
	<summary>
 Obtient les valeurs à afficher dans le tableau pour les valeurs libérées garanties par protection à partir du fichier de taux.
 </summary>
	<param name="protection">Protection pour laquelle on veut le vecteur des valeurs libérées garanties.</param>
	<param name="duree">La duree de la protection.</param>
	<param name="age">L'âge de l'assuré.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetValeurRPDG(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Retourne le vecteur de remboursement des primes au décès garanti en fonction de la protection et l'assuré 0.
 </summary>
	<param name="protection">Protection duquel on veut le vecteur du RPDG.</param>
	<returns>Vecteur contenant les valeurs du remboursement des primes au décès garanti.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ConstVcAssrnLibrGarnt(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Cette méthode construit les vecteurs pour le calcul de la colonne
 d'assurance libérée garantie.
 </summary>
	<param name="protection">La protection servant à déterminer quel vecteur sera contruit </param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.AllocationFraisPoliceParAn(IAFG.IA.VI.AF.Illustration.Scenario,System.Int32,IAFG.IA.IL.AF.MoteurTrad.CalculTrad.FraisPolice@,IAFG.IA.IL.AF.MoteurTrad.CalculTrad.FraisPolice@)">
	<summary>
 Détermine quelle à quelle protection on doit assigner les frais de police pour une année donnée
 </summary>
	<param name="scenario">Le no de scénario</param>
	<param name="annee">L'année pour laquelle obtenir les frais.</param>
	<param name="fraisPolice1">Les frais de police primaires</param>
	<param name="fraisPolice2">Les frais de police secondaires</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ConstruireVecteurRPDG(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Contruit le vecteur du RPDG
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ConstruireVecteurCNAP(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Construit le vecteur du coût net d'assurance pure
 </summary>
	<param name="scenario"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ObtenirPrimeRenouvellement(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.VI.AF.Proposition.Protection,System.Int32,IAFG.IA.VI.AF.Proposition.ENUMs.TypeRenouvellement)">
	<summary>
 Calcule et renvoit le montant de la prime d'une protection pour l'année spécifiée.
 </summary>
	<param name="scenario">Le scénario sur lequel on demande le calcul.</param>
	<param name="protection">La protection sur pour laquelle on veut la surprime.</param>
	<param name="annee">L'année pour laquelle on veut calculer la surprime.</param>
	<param name="typeRenouvellement">Le type de renouvellement considéré dans les calculs.</param>
	<remarks>La prime de renouvellement inclue les surprimes applicables.</remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ObtenirMontantSurprime(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.VI.AF.Proposition.Protection,System.Int32,System.Double,IAFG.IA.VI.AF.Proposition.ENUMs.TypeRenouvellement)">
	<summary>
 Calcule et renvoit le montant de la surprime d'une protection pour l'année spécifiée.
 </summary>
	<param name="scenario">Le scénario sur lequel on demande le calcul.</param>
	<param name="protection">La protection sur pour laquelle on veut la surprime.</param>
	<param name="annee">L'année pour laquelle on veut calculer la surprime.</param>
	<param name="taux">Le taux de surprime à appliquer dans les calculs.</param>
	<param name="typeRenouvellement">Le type de renouvellement considéré dans les calculs.</param>
	<returns>Le montant de la surprime.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.DeterminerOrdreProtection(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Place les protections dans un ordre précis dans une liste en fonction de PlanIllustration et de la durée.
 </summary>
	<param name="scenario"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ConstruireClefOrdonnance">
	<summary>
 Contruit un vecteur de caractères de 101 éléments pour permettre l'ordonnancement des protections
 </summary>
	<returns>Un vecteur de type String.</returns>
	<remarks>Les valeurs dans le vecteur ont cette aspect.
 AA
 AB
 AC
 AD
 AE
 Etc.
 C'est la durée de la protection qui va déterminer l'index de lecture dans le vecteur. 
 Cette valeur sera précédée d'un catactère qui est déterminé par le plan d'illustration de la protection.</remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.MemeAssure(IAFG.IA.VI.AF.Proposition.Protection,IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Valide si l'assuré de la protection DA/DMA est le même assuré de l'autre protection.
 </summary>
	<param name="protectionDADMA"></param>
	<param name="protection"></param>
	<returns>Vrai si les assurés sont identiques. Faux dans l'autre cas.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureePrimesGA(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Permet de retourner la duree sur laquelle un GA va payer des primes, c'est équivalent à la prmeière couverture de l'assuré.
 </summary>
	<param name="protectionGA"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureeDADMA(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Retourne la durée de la protection.
 </summary>
	<param name="protection"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.DeterminerStatut(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac,IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Fonction qui détermine le statut selon le volume et le produit.
 </summary>
	<param name="statut">Le code de tabac actuelle.</param>
	<param name="protection">la protection avec laquelle on va déterminer le code de tabac.</param>
	<returns>Le nouveau statut déterminer.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.DeterminerStatut(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac,IAFG.IA.VI.AF.Proposition.Protection,System.Boolean)">
	<summary>
 Fonction qui détermine le statut selon le volume et le produit.
 </summary>
	<param name="statut">Le code de tabac actuelle.</param>
	<param name="protection">la protection avec laquelle on va déterminer le code de tabac.</param>
	<returns>Le nouveau statut déterminer.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.DeterminerStatut(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac,IAFG.IA.VI.AF.Proposition.Protection,System.String)">
	<summary>
 Fonction qui détermine le statut selon le volume et le produit.
 </summary>
	<param name="statut">Le code de tabac actuelle.</param>
	<param name="protection">la protection avec laquelle on va déterminer le code de tabac.</param>
	<returns>Le nouveau statut déterminer.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.DeterminerStatut(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac,IAFG.IA.VI.AF.Proposition.Protection,System.String,System.Boolean)">
	<summary>
 Fonction qui détermine le statut selon le volume et le produit.
 </summary>
	<param name="statut">Le code de tabac actuelle.</param>
	<param name="protection">la protection avec laquelle on va déterminer le code de tabac.</param>
	<returns>Le nouveau statut déterminer.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.DeterminerStatut(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac,System.Boolean)">
	<summary>
 Fonction qui détermine le statut selon le volume et le produit.
 </summary>
	<param name="statut">Le code de tabac actuelle.</param>
	<param name="UtiliserPreferentiel">Est-ce que l'on supporte les statuts préférentiels ou pas.</param>
	<returns>Le nouveau statut déterminer.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.CalculIllus(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Fait les calculs pour l'illustration.
 </summary>
	<param name="scenario">Le numéro du scénario.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetRabaisCj(IAFG.IA.VI.AF.Proposition.Protection@)">
	<summary>
 fonction qui retourne le taux de rabais pour les conjoint ou multivies
 </summary>
	<param name="protection">le plan de la protection</param>
	<returns>le taux de rabais ( 1 pour aucun rabais, 0.9 pour 10% , 0.95 pour 5% )</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.DeterminerSexe(IAFG.IA.VI.ENUMs.Sexe)">
	<summary>
 Fonction qui transforme une valeur de l'énum de type de sexe en une valeur texte d'un caractère de long.
 </summary>
	<param name="sexe">Le sexe sous forme d'énumération de type Sexe</param>
	<returns></returns>
	<remarks>Si la valeur est Inconnu ou une valeur en dehors des valeurs de l'énumération, la fonction retourne une chaîne vide.</remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.RoundGood(System.Double,System.Int16)">
	<summary>
  Arrondit une valeur en fonction d'un nombre de décimal.
 </summary>
	<param name="Valeur">Le nombre à arrondir.</param>
	<param name="nbdigits">Le nombre de décimal.</param>
	<returns>Le nombre arrondit.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureeTempFlexMax(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.VI.AF.Proposition.Protection@)">
	<summary>
 trouver la durée Maximale des protection tempoFlex
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="protectionRecherche">Plan pour lequel on recherche</param>
	<returns>DureeMax des tempoflex</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ValiderNomChamp(System.String)">
	<summary>
	</summary>
	<param name="nomChamp"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ObtenirSurprime(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.VI.AF.Proposition.Protection@,System.Int32,System.Double)">
	<summary>
 Fonction qui retourne le vecteur de surprime
 </summary>
	<param name="scenario">le no de scénario</param>
	<param name="protection">le plan pour lequel on veut le vecteur de prime</param>
	<param name="annee">L'année pour lauelle on veut obtenir la suprime.</param>
	<param name="tauxPrime">Le taux de prime</param>
	<returns>Retourne le taux de surprime</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureeMinContrat(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 trouver la durée minimale du contrat pour la duree de l'EPIC
 </summary>
	<param name="scenario">Le no de scenario</param>
	<returns>DureeMin des protections</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetIdVies(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable@)">
	<summary>
 fonction qui Scan les protection et receuille les ids des personnes
 correspondants aux assurés
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictVies">le dictionnaire a remplir avec les ids</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureePrimeBase(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Retourne la duree de l'option pour un assure
 </summary>
	<param name="scenario">Le numero de scenario</param>
	<returns>La duree de l'option si elle existe, -1 s'il n'y a pas d'option</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetDureeGarantieContractantPrime(IAFG.IA.VI.AF.Illustration.Scenario,IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration)">
	<summary>
 Retourne la duree à utiliser pour le calcul des primes d'une garantie du contractant
 </summary>
	<param name="scenario">Le numero de scenario</param>
	<param name="typeDuree">Le plan illus pour lequel obtenir la duree</param>
	<returns>La duree de la garantie du contractant, 105 si c'est à vie</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.GetPrimePlusLongue(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Retourne la duree de la prime la plus longue de notre illustration
 </summary>
	<param name="scenario">Le numero de scenario</param>
	<returns>La duree de la prime la plus longue, excluant l'EPIC</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ConstruireVecteurV10">
	<summary>
 Cette méthode construit le vecteur V10 pour le calcul de la colonne
 d'assurance libérée garantie et l'ajoute au dictionnaire de vecteurs.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ConstruireVecteurV15">
	<summary>
 Cette méthode construit le vecteur V15 pour le calcul de la colonne
 d'assurance libérée garantie et l'ajoute au dictionnaire de vecteurs.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ConstruireVecteurV20">
	<summary>
 Cette méthode construit le vecteur V20 et V20S pour le calcul de la colonne
 d'assurance libérée garantie et l'ajoute au dictionnaire de vecteurs.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ConstruireVecteurV30">
	<summary>
 Cette méthode contruit les vecteurs V30 et V30S pour le calcul de la colonne d'assurance libérés garantie
 et l'ajoute au dictionnaire de vecteurs.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ConstruireVecteurV65">
	<summary>
 Cette méthode construit les vecteurs V65 pour le calcul de la colonne
 d'assurance libérée garantie et l'ajoute au dictionnaire de vecteurs.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ConstruireVecteurV100">
	<summary>
 Cette méthode construit les vecteurs V100 et V100S pour le calcul de la colonne
 d'assurance libérée garantie et l'ajoute au dictionnaire de vecteurs.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.InterpolationLineaire(System.Double,System.Double,System.Double,System.Double)">
	<summary>
	</summary>
	<param name="X1"></param>
	<param name="X2"></param>
	<param name="Y1"></param>
	<param name="Y2"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.DureePlusLongueBase(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Retourne la duree de la protection de base la plus longue du contrat.
 </summary>
	<param name="scenario">Le scenario sur lequel recherché</param>
	<returns>La durée de cet protection la plus longue.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ObtenirAgePlusVieux(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Obtient l'âge de l'assuré le plus âgé sur la protection.
 </summary>
	<param name="protection">La protection pour laquelle on veut l'assuré le plus âgé.</param>
	<returns>l'âge de l'assuré le plus âgé.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.WriteLog(System.String,System.Object[])">
	<summary>
 Prépare le texte à écrire dans le fichier de log
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.WriteLog(System.String)">
	<summary>
 Écrit le texte dans le fichier de log
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.SortColonneTable(System.Collections.Hashtable)">
	<summary>
 Fonction qui transfert les données d'un hashtable dans une List Trié par value
 </summary>
	<param name="columns"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ObtenirNomFichierSauvegarde">
	<summary>
 Fonction qui retourne le nom et le path du fichier de sortie qui va contenir tous les calls au moteur de calcul.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.EstEnDebug">
	<summary>
 Fonction pour savoir si l'on doit écrire les logs des méthodes qui sont appelées
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.AppelerFonction(System.Object,System.String,System.Collections.ArrayList)">
	<summary>
 Fonction qui est utilisée pour appeler d'autre méthode du moteur lors de la lecture du log
 </summary>
	<param name="ObjetAppele">Le moteur</param>
	<param name="NomFonction">Nom de la fonction à appeler</param>
	<param name="parametres">Paramètre pour la fonction à appeler</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.RobotEnExecution">
	<summary>
 fonction qui détermine si on robot est en train de rouler
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.CalculTrad.ObtenirNomFichier(System.String)">
	<summary>
 Retourne le nom du fichier lorsque l'on a un fichier avec un path
 </summary>
	<param name="fichier">La "string" contenant le path et le nom du fichier</param>
	<returns>Le nom du fichier</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AF.MoteurTrad.CalculTrad">
	<summary>
 Moteur de calcul.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetVecteurs(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 Fonction qui remplit les colonnes avec les données voulues
 </summary>
	<param name="scenario">Le no de scenario</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesPrimesCumulees(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes de primes cumulées
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesAges(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les ages dans les colonnes de résultats
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesCapitalTransiT10(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au capital assuré des transition T10
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesCapitalTransiT20(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au capital assuré des transition T20
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesCapitalTransiT75(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au capital assurédes transition T75
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesCapitalTransiT100(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au capital assuré des transition T100
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesPrimesAnnuellesTransiT10(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au prime des transition T10
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesPrimesAnnuellesTransiT20(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au prime des transition T20
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesPrimesAnnuellesTransiT75(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au prime des transition T75
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesPrimesAnnuellesTransiT100(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au prime des transition T100
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesPrimesCumulesTransiT10(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Calculé les primes cumulés payées pour les transition T10.
 </summary>
	<param name="scenario">Le no de scenario</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesPrimesCumulesTransiT20(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Calculé les primes cumulés payées pour les transition T10.
 </summary>
	<param name="scenario">Le no de scenario</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesPrimesCumulesTransiT75(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Calculé les primes cumulés payées pour les transition T75.
 </summary>
	<param name="scenario">Le no de scenario</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesPrimesCumulesTransiT100(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Calculé les primes cumulés payées pour les transition T100.
 </summary>
	<param name="scenario">Le no de scenario</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesRembDeces(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au prime des remboursements au décès.
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesRetourFlexible(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au prime des retour flexible des primes.
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesPrimesAnnuellesGaranties(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au prime des garanties.
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesEvolution(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Function pour setter les colonnes reliées à une protection transtion évolution
 </summary>
	<param name="scenario">Le no de scenario</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesProprietePartage(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Function pour setter les colonnes reliées au concept de propriété partagé.
 </summary>
	<param name="scenario">Le no de scenario</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.SetColonnesComission(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Fait les colonnes pour la commission/rénumération de l'agent
 </summary>
	<param name="scenario">Le scénario pour lequel calculer les colonnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.AjustementAvantCalculs(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Détecte s'il y a des avenants de prestation majorée et ajuste le cas en conséquence en ajoutant les protections et avenant nécessaire.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.AjustementApresCalculs(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Supprime toutes les protections ajoutées pour les APM.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Transition.AffectationColonnesID">
	<summary>
 Set les colonnes ID avec les Engine ID
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Calc_Emprunt.CalculPret">
	<summary>
 fonction principale de calcul des données du pret
 </summary>
	<returns>CalculTrad.CodeErreurs</returns>
	<remarks>La fonction retourne CalculTrad.CodeErreurs.ok, sinon elle retourne CalculTrad.CodeErreurs.Erreur en cas d'une erreur.</remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Calc_Emprunt.SetParams(System.Int32,System.Double,System.Int32,System.Double[]@,System.Int32,Microsoft.VisualBasic.DueDate)">
	<summary>
 Initialise la classe.
 </summary>
	<param name="duree">Indique la durée en année</param>
	<param name="Solde">Solde initial</param>
	<param name="Frequence">Nombre de paiements par année</param>
	<param name="VecInteret">Vecteur d'intéret</param>
	<param name="FreqComp">Fréquence de composition des intérets</param>
	<param name="DebutouFin">Indique le début ou la fin de période.</param>
	<returns>CalculTrad.CodeErreurs</returns>
	<remarks>La fonction retourne CalculTrad.CodeErreurs.ok, sinon elle retourne CalculTrad.CodeErreurs.Erreur en cas d'une erreur.</remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Calc_Emprunt.GetResultat(IAFG.IA.IL.AF.MoteurTrad.Calc_Emprunt.NomChamp,System.Collections.Generic.List{System.Double}@)">
	<summary>
 Retourne les résultats des calculs de prêt.
 </summary>
	<param name="nomChamp">Le nom du résultat voulu</param>
	<param name="Donnee">Le vecteur retourné par référence.</param>
	<returns>CalculTrad.CodeErreurs</returns>
	<remarks>La fonction retourne CalculTrad.CodeErreurs.ok, sinon elle retourne CalculTrad.CodeErreurs.Erreur en cas d'une erreur.</remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Calc_Emprunt.CalculSoldeRestant(System.Double,System.Double,System.Int32)">
	<summary>
 On calcul le solde de fin d'année en calculant ce qui reste à payer sans les paiements qu'on vient d'effectuer durant l'année où
 la période en cours.
 </summary>
	<param name="paiement">Le paiement payé par période durant l'année.</param>
	<param name="tauxInteret">Le taux d'intéret en vigueur durant la période.</param>
	<param name="nbPaimenentRestant">Le nombre de paiement restant sur la durée totale.</param>
	<returns>Double</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AF.MoteurTrad.Calc_Emprunt">
	<summary>
 Classe qui effectue le calcul sur les emprunts bancaires
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Utils.ObtenirDiffDateEmissionProposition(IAFG.IA.VI.AF.Proposition.Proposition,System.DateTime)">
	<summary>
 Permet d'obtenir la différence d'année entre la date d'emission d'une proposition et une date
 </summary>
	<param name="propo"></param>
	<param name="date1"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ValeursIllus.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ValeursIllus.Finalize">
	<summary>
 Destructeur de la classe.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ValeursIllus.IncrementeValeur(System.Int32,System.String,System.Double)">
	<summary>
 Permet d'additionner la valeur passée en paramètre avec la valeur recherchée. Cette valeur est trouvée avec un numéro de scénario et 
 et un nom de colonne dans le tableau. La nouvelle valeur est placée dans le tableau. Elle remplace l'ancienne valeur.
 </summary>
	<param name="noScenario">Numéro de scénario recherché.</param>
	<param name="nom">Nom de la colonne recherchée.</param>
	<param name="valeur">Valeur à additionner.</param>
	<remarks>Si la colonne n'existe pas, la valeur est simplement placée dans le tableau.</remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ValeursIllus.ResetValeurs(System.Int32)">
	<summary>
 Effacer toutes les valeurs d'un tableau.
 </summary>
	<param name="noScenario">Numéro de scénario dont les valeurs vont être effacées.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ValeursIllus.GetValeur(System.Int32,System.String,System.Double@)">
	<summary>
 Permet d'obtenir une valeur en fonction d'un numéro de scénario et d'un nom de colonne.
 </summary>
	<param name="noScenario">Numéro du scénario.</param>
	<param name="nom">Nom de la colonne.</param>
	<param name="valeur">Valeur à obtenir.</param>
	<returns>Retourne un code d'erreur.</returns>
	<remarks>La valeur recherchée est retournée par l'argument valeur. Si la valeur est trouvée, le code de retour est CalculTrad.CodeErreurs.ok, sinon le code de retour est CalculTrad.CodeErreurs.Warning.</remarks>
</member><member name="T:IAFG.IA.IL.AF.MoteurTrad.ValeursIllus">
	<summary>
 Cette classe permet la gestion d'un ensemble de 5 tables de hachage de données. Pour accéder à l'une des tables, 
 il suffit de passer un index aux différentes méthodes de la classe. Cette index représente un numéro de scénario.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.CalEngineTradTest.SetUp">
	<summary>
 Utilisé pour ajouter du code à exécuter AVANT chaque test.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.CalEngineTradTest.TearDown">
	<summary>
 Utilisé pour ajouter du code à exécuter APRÈS chaque test.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.CalEngineTradTest.ReproductionDesCas">
	<summary>
 Test qui reproduit les cas du baseline
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.NUnit.CalEngineTradTest.TestComparaisonCSV">
	<summary>
 Test qui fait la comparaison entre le fichier d'output du baseline et le fichier d'ouput de le repro
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AF.MoteurTrad.NUnit.CalEngineTradTest">
	<summary>
 Batterie de tests unitaires.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetVecteurs(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 Fonction qui remplit les colonnes avec les données voulues
 </summary>
	<param name="scenario">Le no de scenario</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesAges(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 Méthode pour fixer les ages dans les colonnes de résultats.
 </summary>
	<param name="scenario">Le scenario en cours.</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesCapital(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au capital assuré
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesCapitalDADMA(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées au capital assuré
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesInvalidite(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées à l'assurance invalidité
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesEmprunt(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 fonction pour setter les données de l'emprunt bancaire dans les résultats.
 </summary>
	<param name="scenario">Le no de scénario</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesPrimes(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 fonction pour setter les colonnes reliées aux primes
 </summary>
	<param name="scenario">Le no de scenario</param>
	<param name="dictIdVies">Le dictionnaire des id des personnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesCommission(IAFG.IA.VI.AF.Illustration.Scenario)">
	<summary>
 Fait les colonnes pour la commission/rénumération de l'agent
 </summary>
	<param name="scenario">Le scénario pour lequel calculer les colonnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesValeurRachatGarantie(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 Fait les colonnes pour la valeur de rachat garantie
 </summary>
	<param name="scenario"></param>
	<param name="dictIdVies"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesValeurLibereeGarantie(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 Fait les colonnes pour les assurances libérées garanties
 </summary>
	<param name="scenario"></param>
	<param name="dictIdVies"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesValeurRemboursementPrimeDecesGarantie(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 Fait les colonnes pour les remboursements des primes au décès garanties
 </summary>
	<param name="scenario"></param>
	<param name="dictIdVies"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesValeurCapAssureTotalGaranti(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 Fait les colonnes du Capital assuré total garanti
 </summary>
	<param name="scenario"></param>
	<param name="dictIdVies"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonnesValeurRachatApresImportCBR(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 Fait les colonnes des valeur de rachat après impôt ainsi que le CBR
 </summary>
	<param name="scenario"></param>
	<param name="dictIdVies"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonneMaladieGrave(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 Fait les colonnes pour les maladies graves
 </summary>
	<param name="scenario"></param>
	<param name="dictIdVies"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.ObtenirCommissionMultiterme(System.Int32,System.Int32)">
	<summary>
 Function servant à retourner la commission pour la premiere annee d'un multiterme
 </summary>
	<param name="typeCommission">Type de commission à utiliser</param>
	<param name="duree">La duree de la protection au sens des commission.</param>
	<returns>Le taux de commission à utiliser la premiere abbée.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.AjusterPourcentagePrimeT100(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Ajuste le pourcentage des primes pour la T100.
 </summary>
	<param name="protection">La protection.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.AffecterPourcentagePrimeT100">
	<summary>
 Affecte les valeurs de base des pourcentages des commissions pour la T100 pour Carrière / Courtage et compte national.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.#ctor(IAFG.IA.IL.AF.MoteurTrad.CalculTrad)">
	<summary>
 Constructeur de la classe
 Initialise le vecteur des colonnes pour les résultats
 </summary>
	<param name="objectCalcul"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.InitialiserCommissions">
	<summary>
 Affecte les valeurs de base des pourcentages des commissions pour Carrière / Courtage.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.SetColonneRenteSerenite65(IAFG.IA.VI.AF.Illustration.Scenario,System.Collections.Hashtable)">
	<summary>
 Calcule la valeur de la rente Sérénité 65 pour chaque.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.ObtenirDateEmission(IAFG.IA.VI.AF.Proposition.Proposition)">
	<summary>
 Renvoit la date d'émission de la police ou la date du jour si elle n'est pas initialisée.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.ObtenirDateNaissance(IAFG.IA.VI.AF.Proposition.Individu)">
	<summary>
 Renvoit la date d'anniversaire de l'individu ou la date de projection si elle n'est pas spécifiée.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.ObtenirNombreMoisReceptionRentes(IAFG.IA.VI.AF.Proposition.Proposition,IAFG.IA.VI.AF.Proposition.Individu,System.Int32)">
	<summary>
 Renvoit le nombre de mois pour lesquels l'assurés touchera la rente 
 pour de l'année de contrat où il atteindra 65 ans
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad.GetProchainAnniversaireMensuel(System.DateTime,IAFG.IA.VI.AF.Proposition.Proposition)">
	<summary>
 Renvoit la date du prochain anniversaire mensuel suivant la date spécifiée
 </summary>
	<param name="dateReference"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AF.MoteurTrad.ProdAssTrad">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.#ctor">
	<summary>
 Constructeur de la classe.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.Finalize">
	<summary>
 Destructeur de la classe.
 </summary>
	<remarks>Supprime les tables de hachage.</remarks>
</member><member name="P:IAFG.IA.IL.AF.MoteurTrad.Colonnes.TableColonnes">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.Existe(System.Int32,System.String)">
	<summary>
 Déterminer si une colonne existe pour un numéro de scénario.
 </summary>
	<param name="NoScenario">Numéro de scénario.</param>
	<param name="nomColonne">Nom de la colonne.</param>
	<returns>1 si la colonne existe, 0 dans l'autre cas.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.ObtenirColonne(System.Int32,System.Int32,IAFG.IA.IL.AF.MoteurTrad.Colonne@)">
	<summary>
 Obtenir la colonne en fonction du numéro de scénario et de son idColonne.
 </summary>
	<param name="noScenario">Numéro de scénario.</param>
	<param name="idColonne">Numéro de clef de la colonne.</param>
	<param name="col">L'objet Colonne retournée par référence</param>
	<returns>Si la colonne est retrouvée, la valeur de retour est CalculTrad.CodeErreurs.ok, sinon la valeur de retour est CalculTrad.CodeErreurs.Erreur.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.ObtenirColonne(System.Int32,System.String)">
	<summary>
 Obtenir la colonne en fonction du numéro de scénario et de son idColonne.
 </summary>
	<param name="noScenario">Numéro de scénario.</param>
	<param name="nomColonne">Nom de la colonne.</param>
	<returns>Si la colonne est retrouvée, la valeur de retour est CalculTrad.CodeErreurs.ok, sinon la valeur de retour est CalculTrad.CodeErreurs.Erreur.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.ReinitialiseColonnes(System.Int32)">
	<summary>
 Réinitialise les résultats d'un scénario.
 </summary>
	<param name="NoScenario">Numéro de scénario.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.IncrementeColonne(System.Int32,System.String,System.Int32,System.Int32,System.Double)">
	<summary>
 Incrémente les valeurs d'une colonne avec la valeur spécifiée pour une période précise. Crée la colonne si elle n'existe pas.
 </summary>
	<param name="NoScenario">Numéro du scénario.</param>
	<param name="nomColonne">Nom de la colonne.</param>
	<param name="anneeDebut">Année de début.</param>
	<param name="AnneeFin">Année de fin.</param>
	<param name="Valeur">Valeur à additionner au vecteur.</param>
	<remarks></remarks>
 Public Function IncrementeColonne(ByVal NoScenario As Integer, ByVal sIdEngine As String, ByVal anneeDebut As Integer, ByVal AnneeFin As Integer, ByVal Valeur As Double) As Object

</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.Incremente(System.Int32,System.String,System.Int32,System.Double)">
	<summary>
 Incrémente la valeur d'une colonne avec une valeur spécifiée pour une année précise. Crée la colonne si elle n'existe pas.
 </summary>
	<param name="NoScenario">Numéro du scénario.</param>
	<param name="nomColonne">Nom de la colonne.</param>
	<param name="annee">Année.</param>
	<param name="Valeur">Valeur à additionner au vecteur.</param>
	<remarks></remarks>
 Public Function Incremente(ByVal noScenario As Integer, ByVal nomColonne As String, ByVal annee As Integer, ByVal valeur As Double) As CalculTrad.CodeErreurs

</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.SetColonneVec(System.Int32,System.String,System.Int32,System.Int32,System.Double[])">
	<summary>
 Copie les valeurs d'un vecteur dans une colonne spécifiée par un nom pour une période précise. Crée la colonne si elle n'existe pas.
 </summary>
	<param name="NoScenario">Numéro du scénario.</param>
	<param name="nomColonne">Nom de la colonne.</param>
	<param name="anneeDebut">Année de début.</param>
	<param name="AnneeFin">Année de fin.</param>
	<param name="Valeur">Vecteur de valeurs à affecter à une colonne.</param>
	<remarks></remarks>
 Public Function SetColonneVec(ByVal NoScenario As Integer, ByVal sIdEngine As String, ByVal anneeDebut As Integer, ByVal AnneeFin As Integer, ByRef Valeur() As Double) As CalculTrad.CodeErreurs

</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.SetColonneVec(System.Int32,System.String,System.Int32,System.Int32,System.Collections.Generic.List{System.Double})">
	<summary>
 Copie les valeurs d'un vecteur dans une colonne spécifiée par un nom pour une période précise. Crée la colonne si elle n'existe pas.
 </summary>
	<param name="NoScenario">Numéro du scénario.</param>
	<param name="nomColonne">Nom de la colonne.</param>
	<param name="anneeDebut">Année de début.</param>
	<param name="AnneeFin">Année de fin.</param>
	<param name="Valeur">Vecteur de valeurs à affecter à une colonne.</param>
	<remarks></remarks>
 Public Function SetColonneVec(ByVal NoScenario As Integer, ByVal sIdEngine As String, ByVal anneeDebut As Integer, ByVal AnneeFin As Integer, ByRef Valeur() As Double) As CalculTrad.CodeErreurs

</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.SetValeur(System.Int32,System.String,System.Int32,System.Double)">
	<summary>
 Affecte une valeur dans une colonne pour une année spécifiée. Crée la colonne si elle n'existe pas.
 </summary>
	<param name="NoScenario">Numéro du scénario.</param>
	<param name="nomColonne">Nom de la colonne.</param>
	<param name="annee">Année.</param>
	<param name="Valeur">Valeur à affecter à la colonne pour l'année demandée.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.GetColonneByID(System.Int32,System.String)">
	<summary>
 Obtient un objet Colonne à l'aide du nom de la colonne. Crée la colonne si elle n'existe pas.
 </summary>
	<param name="noScenario">Numéro du scénario.</param>
	<param name="nomColonne">Nom de la colonne recherchée.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AF.MoteurTrad.Colonnes.AssignColonne(System.Int32,System.String,IAFG.IA.IL.AF.MoteurTrad.Colonne)">
	<summary>
 Permet d'affecter le contenu d'une colonne dans une autre colonne.
 </summary>
	<param name="noScenario">Numéro du scénario</param>
	<param name="nomColonne">Nom de la colonne recherchée.</param>
	<param name="colonneOriginal">Colonne dont on veut copier le contenu.</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AF.MoteurTrad.Colonnes">
	<summary>
 Classe qui permet de séparer les données des calculs. On conserve les résultats des calculs dans un dictionnaire par numéro de scénario.
 Dans l'application, on réfere aux colonnes par des ids string qui sont initialisés dans un dictionnaire.
 '''' </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AF.MoteurTrad.ProtectionInterne">
	<summary>
 ProtectionInterne créé pour palier au problème de la création d'une protection bidon 
 dans Transition Evolution pour le calcul de l'Avenant de Prestation Majoriée sur l'assuré principal.
 On override les propriétés de l'objet Proposition.Protection pour forcé la DateVersionProduit et CodeProtection.
 Ils ne sont pas initialisé comme il se doit car la protection Transition Evolution n'est pas sensé être ajouté en avenant sur l'assuré principal.
 Avec un CodeProtection à NonApplicable, il est impossible d'avoir accès à un PDA valide ainsi qu'à la date de version du produit.
 </summary>
	<remarks>
 Au départ, on aurait jamais dû ajouter la protection Transiton Evolution pour le calcul de l'APM dans l'objet de propostion mais plutôt
 créer une protectionInterne complètement indépendante. Ceci implique de revoir l'ensemble des calculs...
 </remarks>
</member><member name="T:IAFG.IA.IL.AF.MoteurTrad.ApplicationFactory">
	<summary>
	</summary>
	<remarks></remarks>
</member>
</members>
</doc>