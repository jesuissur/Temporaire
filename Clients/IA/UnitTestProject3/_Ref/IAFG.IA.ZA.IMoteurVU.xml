<?xml version="1.0"?>
<doc>
<assembly>
<name>
IAFG.IA.ZA.IMoteurVU
</name>
</assembly>
<members>
<member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_Initialiser(System.String,IAFG.IA.ZA.MoteurVU.ENUMs.TypeContrat,System.Boolean,System.DateTime,System.DateTime,IAFG.IA.VI.ENUMs.EtatProvince,System.Boolean,System.Double,IAFG.IA.VI.Contexte.ENUMs.Banniere,System.DateTime)">
	<summary>
 Cette fonction permet de definir les informations de base pour le contrat a illustrer.
 </summary>
	<param name="id_ref">identifiant unique du contrat</param>
	<param name="typeContrat">Indique le type de contrat : vie universelle, placement alternatif, etc. </param>
	<param name="enVigueur">Si VRAI alors il s'agit d'une illustration pour un contrat en vigueur. Si FAUX alors il s'agit d'une nouvelle vente</param>
	<param name="dateEmission">Date d'emission du contrat</param>
	<param name="dateDernMAJ">Date de derniere mise a jour des donnees du contrat et des fonds</param>
	<param name="province">Province de taxation du contractant (pour determiner le taux de taxe sur prime) et la methode de calcul de la taxe sur le capital</param>
	<param name="estPrelevementMensPreAutorise">Indique si le contrat a un PAC mensuel</param>
	<param name="primeCiblePAC">Si 'estPrelevementMensPreAutorise' est TRUE, montant du prelevement mensuel preautorise. Voir remarque</param>
	<remarks>Cette fonction est le point d'entree initial pour un contrat. Elle doit etre la premiere fonction appelee lors du passage des inputs.
 Pour un contrat en vigueur, si estPrelevementMensPreAutorise = TRUE et si le fonds a un solde negatif au depart, un depot additionnel de 'primeCiblePAC' sera effectue avant le debut de la projection pour corriger le decalage entre le jour de depot d'un PAC et l'anniversaire mensuel.</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Conjoint_AjouterSurprime(System.String,System.String,System.String,System.String,System.Boolean,IAFG.IA.VI.AF.Proposition.ENUMs.TypeSurprime,IAFG.IA.ZA.MoteurVU.ENUMs.EnumSurprimePourcentage,System.Double,System.Int32)">
	<summary>
 Cette fonction permet d’ajouter une surprime à un assuré sur une protection determinee
 </summary>
	<param name="id_ref">Identifiant de la surprime</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="AvecCommission">Indique si la surprime et les surcouts doivent tenir compte de la commission</param>
	<param name="typeDeSurprime">Indique le type de la surprime (perm ou temporaire, fixe ou en %)</param>
	<param name="pourcentage">Indique le pourcentage de la surprime, si applicable selon le type</param>
	<param name="montant">Indique le montant de la surprime, si applicable selon le type</param>
	<param name="duree">Indique la duree en annees de la surprime, si applicable selon le type</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Assure_AjouterSurprime(System.String,System.String,System.String,System.Boolean,IAFG.IA.VI.AF.Proposition.ENUMs.TypeSurprime,IAFG.IA.ZA.MoteurVU.ENUMs.EnumSurprimePourcentage,System.Double,System.Int32)">
	<summary>
 Cette fonction permet d’ajouter une surprime à l'assuré équivalent sur une protection determinee
 </summary>
	<param name="id_ref">Identifiant de la surprime</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="AvecCommission">Indique si la surprime et les surcouts doivent tenir compte de la commission</param>
	<param name="typeDeSurprime">Indique le type de la surprime (perm ou temporaire, fixe ou en %)</param>
	<param name="pourcentage">Indique le pourcentage de la surprime, si applicable selon le type</param>
	<param name="montant">Indique le montant de la surprime, si applicable selon le type</param>
	<param name="duree">Indique la duree en annees de la surprime, si applicable selon le type</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_ArretDecroissance(System.String,System.String,System.String,System.DateTime)">
	<summary>
 Cette fonction permet de stopper la decroissance automatique d'une protection decroissante.
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="dateChangement">Date effective du changement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_ArretOptimisationAutomatiqueDuCapital(System.String,System.String,System.DateTime)">
	<summary>
 Ce changement permet d'arreter l'ajustement automatique de la protection OACA
 </summary>
	<param name="id_refChangement">Identifiant unique du changement</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="dateChangement">Date effective du changement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_CalculerContribution(System.String,System.String,System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeGarantieContractant,System.Double)">
	<summary>
 Ce changement sert à calculer le montant de la contribution mensuelle sur une garantie CIC, CIA ou CDC
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="choixContribution">Indique le type de montant desire (Au choix, min, max)</param>
	<param name="montantMensuelDemande">Pour le choixContribution "Au choix", indique le montant desire</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_DebutOptimisationCapital(System.String,System.String,System.String,System.DateTime,System.Double)">
	<summary>
 Cette fonction permet d’initialiser les choix de capital assuré plancher et de période différée dans le cas d’un contrat dont la protection de base a une prestation de décès valeur maximisée.
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="dateChangement">Date effective du changement</param>
	<param name="capitalPlancher">Montant de capital assure minimal qui peut etre atteint lors de l'optimisation du capital assure VMAX</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_MontantAllocationAchatPUA_Desiree(System.String,System.String,System.String,System.DateTime,System.Double)">
	<summary>
 Cette fonction permet de changer le montant d’allocation d’achat PUA désiré par le client à une date donnée.
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="dateChangement">Date effective du changement</param>
	<param name="nouveauMontantAllocationAchatPUA_Desiree">Nouveau montant d'allocation PUA desire apres le changement. </param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_OptionAchatPUA(System.String,System.String,System.String,System.DateTime,IAFG.IA.VI.AF.Proposition.ENUMs.TypeAchatPUA)">
	<summary>
 Cette fonction permet a l'illustration de changer le type d’achat PUA pour arrêter un achat déjà existant, à une date donnée, et non pour en débuter un.  
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="dateChangement">Date effective du changement</param>
	<param name="nouvelleOptionAchatPUA">La nouvelle option d'achat PUA</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_DiminuerCapitalAssure(System.String,System.String,System.String,System.DateTime,System.Double)">
	<summary>
 Cette fonction permet d’ajouter un changement de diminution du capital assuré à une protection.
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="dateChangement">Date effective du changement</param>
	<param name="nouveauCapitalAssure">Montant total du capital assure apres le changement. </param>
	<remarks>Dans le cas d'une protection de base ayant une protection d'OACA liee, la somme des capital assure de ces 2 protections correspondra au parametre nouveauCapitalAssure apres le changement.</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_EnleverSurprime(System.String,System.String,System.String,System.DateTime,System.String,System.String)">
	<summary>
 Cette fonction permet de terminer une surprime donnee sur un assure en cours de projection.
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="dateChangement">Date effective du changement</param>
	<param name="id_refAssure">Identifiant de l'assure concerne</param>
	<param name="id_refSurprime">Identifiant de la surprime a supprimer</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_LiberationProtection(System.String,System.String,System.String,System.DateTime)">
	<summary>
 Cette fonction permet de liberer une protection (plus de primes ni de couts).
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="dateChangement">Date effective du changement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_PrestationDeces(System.String,System.String,System.String,System.DateTime,IAFG.IA.VI.AF.PDF.ENUMs.OptionDeces,System.Boolean)">
	<summary>
 Cette fonction permet d’ajouter un changement à l’option de prestation de décès.
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="dateChangement">Date effective du changement</param>
	<param name="prestationDeces">Nouveau type de prestation de deces a appliquer</param>
	<param name="ConserverLeCapitalAssureActuel">Fait en sorte que le capital assure ne soit pas affecte par le changement de prestation de deces</param>
	<remarks>Si la prestation de deces originale est Capital seulement, le capital assure est reduit au montant net au risque si le parametre conserverLeCapitalAssureActuel est a Faux</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_StatutFumeur(System.String,System.String,System.String,System.DateTime,System.String,System.Int32,IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac)">
	<summary>
 Cette fonction permet d’ajouter un changement de statut de fumeur sur un assure de la protection. 
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="dateChangement">Date effective du changement</param>
	<param name="id_assure">Identifiant de l'assure auquel le changement s'applique</param>
	<param name="age">Age a utiliser suite au changement de tabagisme pour cet assure</param>
	<param name="tabagisme">Nouveau statut de tabagisme a utiliser</param>
	<remarks>Si un changement de statut fumeur a eu lieu dans le passe ou est prevu dans le futur, fournir les donnees initiales dans Protection_AjouterAssure et appeler ensuite cette fonction pour effectuer la mise a jour des donnees modifiees. (Sinon les couts et primes seront errones)</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_TerminaisonProtection(System.String,System.String,System.String,System.DateTime)">
	<summary>
 Cette fonction permet d’ajouter un changement qui supprime une protection d'assurance dans le futur
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="dateChangement">Date effective du changement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_TypeDeCout(System.String,System.String,System.String,System.DateTime,IAFG.IA.IL.AF.Illustration.ENUMs.TypeMortaliteIllustration,System.Int32,System.Int32)">
	<summary>
 Cette fonction permet d’ajouter un changement au type de coût utilisé sur une protection conjointe, i.e. un nivellement des coûts d’assurance.
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="dateChangement">Date effective du changement</param>
	<param name="typeCout">Nouveau type de cout a utiliser</param>
	<param name="age">Age a utiliser suite au changement de type de cout</param>
	<param name="ageSurprime">Age surprime a utiliser suite au changement de type de cout</param>
	<remarks>Si un changement de type de cout a eu lieu dans le passe ou est prevu dans le futur, fournir les donnees initiales dans GroupeProtections_AjouterProtection et appeler ensuite cette fonction pour effectuer la mise a jour des donnees modifiees. (Sinon les couts et primes seront errones)</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Changement_TypeAssurance(System.String,System.String,System.String,System.Int32,System.DateTime,IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance,System.Double,System.Double,System.Int32,System.Boolean,System.Double,System.Double)">
	<summary>
 Cette fonction permet d'ajouter un changement de conversion d'une police individuelle à conjointe dernier décès
 </summary>
	<param name="id_refChangement">Identifiant unique du changement sur la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_refAvenant">Identifiant de la couverture avenant individuelle à conjointe dernier décès</param>
	<param name="ageAssureAvenantEnDateEmissionContrat">Age qu'aurait eu l'assuré de l'avenant à la date d'émission de la protection</param>
	<param name="dateChangement">Date effective du changement</param>
	<param name="nouveauTypeAssurance">Type d'assurance après la conversion e.g. conjointe dernier décès</param>
	<param name="montantSurprimePermanenteEnDollar">Montant de la surprime permanente en dollar applicable après la conversion</param>
	<param name="montantSurprimeTemporaireEnDollar">Montant de la surprime temporaire en dollar applicable après la conversion</param>
	<param name="dureeSurprimeTemporaireEnDollar">Durée de la surprime temporaire en dollar applicable après la conversion</param>
	<param name="surprimeAvecCommission">VRAI si la surprime est commissionable</param>
	<param name="surchargeEmission">Augmentation des coûts à l'émission pour les grosses polices individuelles</param>
	<param name="surchargeChangement">Augmentation des coûts au changement de type d'assurance pour les grosses polices conjointes dernier décès</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.CheminFichiersInputs(System.String,System.String)">
	<summary>
 Cette fonction passe le chemin et les noms des fichiers de taux nécessaires au fonctionnement du moteur.
  Ces fichiers sont utilisés par la dll SASRates, qui agit comme intermédiaire entre le moteur des PU et les bases de données de taux
 </summary>
	<param name="chemin">Chemin pour les fichiers de taux pour SASRates</param>
	<param name="nomFichierDefinitionTaux">Nom du fichier de definition des taux de SASRates</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Compte_DAI(System.String,System.String,System.String,System.Double)">
	<summary>
 Cette fonction permet d’initialiser la proportion à investir dans un compte en utilisant la directive automatique d’investissement (DAI).
 Un arrondi est fait sur la proportion à la 5e décimale.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_fonds">Identifiant du fonds</param>
	<param name="id_compte">Identifiant du compte</param>
	<param name="pourcentage">Proportion des montants à investir dans ce compte. Valeur entre 0 et 1.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Compte_DDA(System.String,System.String,System.String,System.Double)">
	<summary>
 Cette fonction permet d’initialiser la proportion à retirer d’un compte en utilisant la directive de déduction automatique (DDA).
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_fonds">Identifiant du fonds</param>
	<param name="id_compte">Identifiant du compte</param>
	<param name="pourcentage">Proportion des montants à retirer dans ce compte. Valeur entre 0 et 1.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Compte_TauxInteret(System.String,System.String,System.String,System.Double[])">
	<summary>
 Cette fonction permet d’initialiser les taux d’intérêts à appliquer à un compte pour chaque année de projection.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_fonds">Identifiant du fonds</param>
	<param name="id_ref">id du compte appartenant au fonds, auquel il faut associer le taux d'interet</param>
	<param name="taux">Taux d'interet a utiliser pour chaque annee de contrat. Valeur entre -0.5 et 0.5, commence a l'indice 1</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_AccepteOACA(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'indiquer si le contractant accepte que la protection d’OACA soit optimisee au cours de la projection. 
 </summary>
	<param name="id_ref">Identifiant du contrat</param>
	<param name="oaca">Vrai si on veut recalculer le montant de l'OACA, Faux sinon. Si Faux, la protection OACA existante demeure fixe pour toute la projection</param>
	<remarks>OACA : optimisation automatique du capital assuré.</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_AchatPUA(System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeAchatPUA)">
	<summary>
 Cette fonction permet d'indiquer le choix du client
 </summary>
	<param name="id_ref">Identifiant du contrat</param>
	<param name="optionAchatPUA">Choix du client</param>
	<remarks>PUA Paid UP</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_AjouterContractant(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d’ajouter une compagnie ou jusqu’à deux individus en tant que preneurs du contrat.
 </summary>
	<param name="id_ref">Identifiant de l'individu correspondant au contractant. Dans le cas d'une corporation ce parametre id_ref est alors ignore</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="corporation">True: le contractant est une corporation, False : le contractant est une personne</param>
	<remarks>Une personne doit être dans la liste des individus avant de pouvoir être ajoutée comme contractant, sauf dans le cas d'une corporation (le parametre id_ref est alors ignore)</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_AjouterFonds(System.String,System.String,IAFG.IA.ZA.MoteurVU.ENUMs.TypeFondsInput,System.Boolean)">
	<summary>
 Cette fonction permet d'ajouter un Fonds PU ou un Fonds placement à un contat.
 </summary>
	<param name="id_ref">Identifiant du fonds</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="typeFonds">Type de fonds de placement (Accumulation, Transitoire, etc) </param>
	<param name="impotPayableDansFonds">Indique si les montants d'impot exigibles doivent etre preleves a meme le fonds. Si False, suppose que de les sommes proviendront de l'exterieur du contrat (hors illustration)  </param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_AjouterGroupeProtections(System.String,System.Int32)">
	<summary>
 Ajoute un groupe de protections au contrat. 
 </summary>
	<param name="noGroupe">No du groupe à ajouter, en base 1. 1 : assuré principal, 2 et +, assurés additionnels.</param>
	<remarks>Un groupe de protections correspond à la notion d'assuré principal ou additionnel dans les systèmes</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_AjouterIndividu(System.String,System.String,System.DateTime)">
	<summary>
 Cette fonction permet d’ajouter un individu au contrat qui correspondra à un contractant, un assuré ou aux deux.
 </summary>
	<param name="id_ref">Identifiant unique pour l'individu</param>
	<param name="id_contrat">Identifiant du contrat auquel l'individu est associé</param>
	<param name="dateDeNaissance">Date de naissance de l'individu</param>
	<remarks>Une personne doit être dans la liste des individus avant de pouvoir être ajoutée comme personne assurée sur une protection ou comme contractant.</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_AjouterPret(System.String,System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypePret,System.Double,System.Double,System.Double,System.Int32,System.String)">
	<summary>
 Cette fonction permet d’ajouter les informations sur les prêts EXISTANTS au début de la projection (avance sur police, avance automatique, IRIS ou Investor Plus).
 </summary>
	<param name="id_refPret">Identifiant du pret</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="type">Le type du pret existant (Avance, Avance automatique, IRIS, etc)</param>
	<param name="capital">Montant cumulatif du capital émis sur ce prêt</param>
	<param name="solde">Solde du prêt (portion de capital + intérêts)</param>
	<param name="interetsCapitalisesAAD">Montant d'interets capitalises depuis le debut de l'annee</param>
	<param name="nbJoursDDA">Nombre de jours d'existence de ce compte depuis le debut de l'annee</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_CorporationValeursInitiales(System.String,System.Double,System.Double)">
	<summary>
 Cette fonction permet d'initialiser les accumulateurs relatifs à la fiscalité de la corporation lorsque cette dernière est contractante.
 </summary>
	<param name="id_ref">Identifiant du contrat</param>
	<param name="coutBaseRajuste">coût de base rajusté que la corporation peut utiliser pour réduire les impôts en gain en capital de la PU et du placement alternatif</param>
	<param name="iMRTD">initial du compte d’impôt en main remboursable au titre de dividendes (IMRTD) de la corporation</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_DonneesFiscales(System.String,System.Double,System.Double,System.Double,System.Double)">
	<summary>
 Cette fonction permet d’initialiser le CBR et les valeurs du fonds accumulé fiscal des trois dernières années.
 </summary>
	<param name="cbr">Le coût de base rajusté actuel</param>
	<param name="valeur1An">La valeur du fonds accumulé fiscal de l’année précédente</param>
	<param name="valeur2Ans">La valeur du fonds accumulé fiscal d’il y a deux ans</param>
	<param name="valeur3Ans">La valeur du fonds accumulé fiscal d’il y a trois ans</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_DonneesCumul(System.String,System.Boolean,System.Double,System.Double)">
	<summary>
 Cette fonction permet d’initialiser les informations concernant les contrats
 </summary>
	<param name="dejaEuPretOuAvanceIRIS">Vrai si deja eu un pret ou avance iris ou si a un pret ou avance iris</param>
	<param name="boni_SommeFondsMoyen5ans">correspond a DVAKVPC-SOMME-FM1-5ANS</param>
	<param name="boni_SommePondereeRendementMoyen5ans">correspond a DVAKVPC-SOM-TIR1-X-FDSMOY-5ANS</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_InfoAgent(System.String,IAFG.IA.ZA.MoteurVU.ENUMs.AgentRemuneration,System.Double)">
	<summary>
 Cette fonction permet d’initialiser les informations à propos de l’agent nécessaires à la préparation du rapport de rémunération.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="agentType">Le type de l'agent associé au contrat : courtage, carriere, etc</param>
	<param name="bonusRate">Le taux a utiliser pour calculer le boni de remuneration pour l'agent. Valeur entre 0 et 1</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_HypothesesContractuelles(System.String,System.Double[],System.Double[],System.Collections.Generic.Dictionary{System.DateTime,System.Double})">
	<summary>
 Permet d'initialiser les hypothèses liées au contrat et qui ne change pas dans le temps.
 </summary>
	<param name="id_contrat">Identifiant du contrat de référence</param>
	<param name="TauxObligationProvinciales">Vecteur de taux d'intérêt des obligations Canada 30 ans (pour la revision de prime du produit Tendance).</param>
	<param name="TauxInteretReferenceAvanceAutomatique">Vecteur de taux d'interet de base pour les avances automatiques</param>
	<param name="TauxInteretReferenceBoniHeap">Vecteur d'indice de reference pour le boni HEAP</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_NoPolice(System.String,System.String)">
	<summary>
 Cette fonction facultative permet d’initialiser le numéro de police, si connu
 </summary>
	<param name="noPolice">Numéro du contrat dans les systèmes administratifs</param>
	<remarks>Facultatif. Pour impression dans la trace de calcul seulement</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_TauxImposition(System.String,IAFG.IA.ZA.MoteurVU.ENUMs.TypeTaxe,System.Double[])">
	<summary>
 Cette fonction permet d’initialiser les taux d’imposition sur les obligations, les dividendes et de la taxe sur le capital. Selon le type, il peut s’agir de taux pour un individu ou une compagnie.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="type">Description du type de taux d'imposition en question (sur Dividendes, Interets, etc) </param>
	<param name="taux">Taux annuels a utiliser. Valeur entre 0 et 1</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Contrat_TypeBoni(System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeBoni)">
	<summary>
 Cette fonction permet d’initialiser le type de boni choisi lorsque le produit offre un choix de boni.
 </summary>
`<param name="id_ref">Identifiant du contrat</param>
	<param name="typeBoniInteret">Le type de boni d'interet choisi</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Fonds_AjouterCompte(System.String,System.String,System.String,System.String,System.DateTime,System.Boolean,System.Double,System.Double,System.Double,IAFG.IA.ZA.MoteurVU.ENUMs.TypeGain,System.Double,System.Double,System.Int32)">
	<summary>
 Cette fonction permet d'ajouter un compte à un fonds déjà initialisé.
 </summary>
	<param name="id_ref">Identifiant du compte</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_fonds">Identifiant du fond auquel appartient ce compte</param>
	<param name="vehicule">Identifiant du vehicule d'investissement pour ce compte</param>
	<param name="dateEcheance">Date d'echeance pour le compte. Date.MaxValue si pas d'echeance</param>
	<param name="reinvestir">Indique si, a l'echeance, les montants doivent etre directement reinvestis dans le meme compte</param>
	<param name="solde">Solde courant du compte, incluant les interets courus</param>
	<param name="soldeMoyen">Solde moyen du compte depuis le debut de l'annee, incluant les interets courus</param>
	<param name="accumulateurTauxGaranti">Pour un compte garanti, le montant d'accumulateur qui y est associé dans le compte portefeuille</param>
	<param name="typeGain">Type de gain generes par ce compte (Capital, Interets, Div.)</param>
	<param name="tauxRealisation">Taux de realisation des gains pour ce compte. Valeur entre 0 et 1</param>
	<param name="interetsDDA">Montants d'interets depuis le debut de l'annee pour ce compte, incluant les interets courus</param>
	<param name="nbJoursDDA">Nombre de jours d'existence de ce compte depuis le debut de l'annee</param>
	<remarks>Chaque compte garanti a un montant d'accumulateurTauxGaranti, c'est-a-dire une somme bloquee dans le compte portefeuille en attente que le montant minimal pour investir dans le compte garanti soit atteint.</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Fonds_AjouterScenarioPrimes(System.String,System.String,System.Int32,System.Double,IAFG.IA.IL.AF.Illustration.ENUMs.TypeDePrime,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement,System.Int32)">
	<summary>
 Cette fonction permet d'ajouter un nouveau scénario de primes au contrat. Tout comme une transaction périodique, on doit spécifier la fréquence de versement et la durée pendant laquelle ce scénario de prime est utilisé. On peut utiliser un autre scénario de prime par la suite afin d’effectuer un changement de montant ou de type de primes.
 </summary>
	<param name="id_ref">Identifiant de la transaction</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="annee">Annee de contrat dans laquelle debute la transaction. Doit etre &gt;= 1</param>
	<param name="montant">Montant de la transaction</param>
	<param name="type">Type de scenario de prime a utiliser pendant cette periode (Prime min, Multiple de la prime min, Au choix, etc)</param>
	<param name="frequence">Frequence de la transaction</param>
	<param name="nbAnnees">Nombre d'annees total pendant lesquelles la transaction doit se produire</param>
	<remarks>Cette fonction represente seulement des depots dont l'investissement se fait selon les directives specifiees selon les DAI</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Fonds_AjouterTransactionPeriodique(System.String,System.String,System.String,System.Int32,System.Double,System.String,System.String,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement,System.Int32,IAFG.IA.IL.AF.Illustration.ENUMs.TypeProjectionFiscale)">
	<summary>
 Cette fonction permet d'ajouter une nouvelle transaction périodique dans les comptes (dépôt direct, dépôt standard, retrait direct, retrait standard, transfert) à la projection. Utilisé pour une même transaction qui revient à un intervalle régulier pendant une certaine période.
 </summary>
	<param name="id_ref">Identifiant de la transaction</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_fonds">Identifiant du fonds</param>
	<param name="annee">Annee de contrat dans laquelle debute la transaction</param>
	<param name="montant">Montant de la transaction</param>
	<param name="source">Provenance du montant (L’identifiant du compte d’où le montant est soustrait). Pour les depots au contrat, mettre une chaine vide au parametre Source</param>
	<param name="destination">Destination du montant (L’identifiant du compte auquel le montant est ajouté). Pour un retrait du contrat, mettre une chaine vide au parametre Destination</param>
	<param name="frequence">Frequence de la transaction</param>
	<param name="nbAnnees">Nombre d'annees total pendant lesquelles la transaction doit se produire</param>
	<param name="typeProjectionFiscale">Indique si le montant est un montant brut ou un montant net (Avant impot : montant est brut, Apres impot : montant est net) </param>
	<remarks>Note : depot et retrait standard : transaction faite dans le compte portefeuille, l'argent sera ensuite automatiquement investi selon le DAI ou rachete selon le DDA. Depot et retrait direct : transaction faite directement a partir d'un compte d'investissement, sans tenir compte du DAI et DDA </remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Fonds_AjouterTransactionUnique(System.String,System.String,System.String,System.Int32,System.Double,System.Boolean,System.String,System.String,IAFG.IA.IL.AF.Illustration.ENUMs.TypeParametrePaiment,IAFG.IA.IL.AF.Illustration.ENUMs.TypeProjectionFiscale)">
	<summary>
 Cette fonction n'est pas visible dans l'interface iSasMoteurVie pour l'instant. Elle fonctionne bien pour les retraits standards seuleemnt pour l'instant
 </summary>
	<param name="effectuerMontantMaximum">Si VRAI, forcer le montant au maximum possible (pour les retraits standards seulement)</param>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Fonds_AjouterTransactionUnique(System.String,System.String,System.String,System.Int32,System.Double,System.String,System.String,IAFG.IA.IL.AF.Illustration.ENUMs.TypeParametrePaiment,IAFG.IA.IL.AF.Illustration.ENUMs.TypeProjectionFiscale)">
	<summary>
 Cette fonction permet d'ajouter une nouvelle transaction dans les comptes (dépôt direct, dépôt standard, retrait direct, retrait standard, transfert) à la projection. Utilisé pour une transaction forfaitaire (qui se produit une seule fois).
 </summary>
	<param name="id_ref">Identifiant de la transaction</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_fonds">Identifiant du fonds</param>
	<param name="annee">Annee de contrat dans laquelle se produit la transaction</param>
	<param name="montant">Montant de la transaction</param>
	<param name="source">Provenance du montant (L’identifiant du compte d’où le montant est soustrait). Pour les depots au contrat, mettre une chaine vide au parametre Source</param>
	<param name="destination">Destination du montant (L’identifiant du compte auquel le montant est ajouté). Pour un retrait du contrat, mettre une chaine vide au parametre Destination</param>
	<param name="temps">Timing de la transaction (Debut ou fin de periode)</param>
	<param name="typeProjectionFiscale">Indique si le montant est un montant brut ou un montant net (Avant impot : montant est brut, Apres impot : montant est net) </param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Fonds_BoniNL(System.String,System.String,System.Double,System.Double,System.Double,System.Int32)">
	<summary>
 Cette fonction permet d’initialiser les paramètres utilisés dans le calcul du boni NL.
 </summary>
	<param name="id_ref">Identifiant du fonds</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="facteurMIA">Dernier facteur MIA utilisé pour le calcul du boni NL</param>
	<param name="facteurGIA">Dernier facteur GIA utilisé pour le calcul du boni NL</param>
	<param name="facteurHAMA">Dernier facteur HAMA utilisé pour le calcul du boni NL (hedge account et MIA)</param>
	<param name="nbreMois">Nombre de mois dans l’année de police en cours où le solde du fonds était supérieur à zéro</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Fonds_DonneesCumul(System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double)">
	<summary>
 Cette fonction permet d’initialiser les montants cumulatifs de primes déposées, de transferts inter-fonds et de retraits pour un fonds spécifié.
 </summary>
	<param name="id_ref">Identifiant du fonds</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="cumulDepots">Montant cumulatif des dépôts depuis l’émission du contrat</param>
	<param name="cumulRetraits">Montant cumulatif des retraits partiels retirés du fonds depuis l'émission</param>
	<param name="cumulTransferts">Montant cumulatif des transferts d’un autre fonds vers ce fonds effectués depuis l'émission</param>
	<param name="fraisTransactions">Montant cumulatif des frais de transactions imputés à ce fonds depuis l'émission</param>
	<param name="primesMinimalesDues">Primes minimales dues depuis l'émission</param>
	<param name="primeRefBoni">Prime de référence utilisée pour certains calculs de bonis</param>
	<param name="interetAnnee">Intérêts versés dans le fonds depuis le début de l'année, incluant les interets courus</param>
	<param name="soldeMoyenAnnee">Solde moyen du fonds depuis le début de l'année</param>
	<param name="primesMaxGarantieDuesEAD">Primes maximales garanties cumulees depuis l'emission, pour les contrats Tendance</param>
	<param name="nbJoursDDA">Nb de jours d'existance du fonds depuis le debut de l'annee</param>
	<param name="valeurRachatGarantie_DernAnniv">Valeur de rachar garantie au dernier anniversaire</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.GroupeProtections_AjouterProtection(System.String,System.String,System.Int32,IAFG.IA.VI.AF.Proposition.ENUMs.EtatProtection,System.String,IAFG.IA.VI.AF.Proposition.ENUMs.SousSerie,System.DateTime,IAFG.IA.VI.AF.PDF.ENUMs.CodeProtection,IAFG.IA.IL.AF.Illustration.ENUMs.TypeProtectionIllustration,IAFG.IA.VI.AF.PDF.ENUMs.OptionDeces,IAFG.IA.VI.AF.PDF.ENUMs.OptionDeces,IAFG.IA.IL.AF.Illustration.ENUMs.TypeMortaliteIllustration,IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance,System.Double,System.DateTime,System.DateTime,System.DateTime)">
	<summary>
 Cette fonction permet d’ajouter une protection et d’initialiser ses paramètres de base.
 </summary>
	<param name="id_ref">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="no_GroupeProtections">No de groupe de protections, en base 1. 1 : assuré principal</param>
	<param name="etatProtection">Etat d'une protection (nouveau ou en vigueur)</param>
	<param name="codeDePlan">Code de plan de la protection</param>
	<param name="dateEmission">Date d'emission de la protection</param>
	<param name="codeProtection">Code de protection dans les systemes admin : base, avenant, option, oaca, etc.</param>
	<param name="typeProtectionIllus">Type de protection dans le logiciel d'illustration. Utilise pour les regroupements dans le calcul des commissions</param>
	<param name="typePrestationDecesEmission">Prestation de deces pour la protection a l'EMISSION (Capital + fonds, Capital seulement, etc)</param>
	<param name="typePrestationDecesCourant">Prestation de deces pour la protection (Capital + fonds, Capital seulement, etc)</param>
	<param name="typeCout">Type de couts de mortalité a l'EMISSION de la protection(niveles ou TRA)</param>
	<param name="typeAssurance">Type de l'assurance (Individuelle, Conjointe 1er deces, etc)</param>
	<param name="tauxTaxePrimeEmission">Pour les protections Genesis, taux de taxe sur prime utilise a l'emission pour le calcul de la prime.Valeur entre 0 et 1</param>
	<param name="dateMaturite">Pour une protection en vigueur, date de maturite indiquee dans VLN. Pour une nouvelle protection, mettre Date.MinValue</param>
	<param name="dateLiberation">Pour une protection en vigueur, date de liberation indiquee dans VLN. Pour une nouvelle protection, mettre Date.MinValue</param>
	<param name="dateVersionProduit">Contient la date de version du produit. Cette date identifie la date du barème de prime à utiliser. Cette date correspond en principe à une date de lancement de produit.</param>
	<remarks>Si la protection a ete nivelee dans le passe, utiliser la fonction Changement_TypeDeCout pour transmettre les informations modifiees</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.IllustrerAssuranceProlongee">
	<summary>
 Effectue les calculs d’assurance prolongée.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.IllustrerSurTouteLaDuree">
	<summary>
 Cette fonction permet d’effectuer l’illustration complète et de créer tous les outputs. Les optimisations sont calculees.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.IllustrerSurUnAn">
	<summary>
 Cette fonction permet de lancer la projection pour une durée d’un an seulement ce qui permet d’obtenir les outputs des primes minimales et  maximale pour la première année, pour affichage.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.IndividuEstPresent(System.String,System.String)">
	<summary>
 Indique si un individu a deja ete inscrit comme intervenant dans un contrat via la fonction Contrat_AjouterIndividu
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_ref">Identifiant de l'individu</param>
	<returns></returns>
	<remarks>Fonction concue pour aider les applications qui utilisent le moteur. Aucun appel a cette fonction n'est necessaire pour effectuer une projection</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Initialiser">
	<summary>
 Cette fonction initialise le moteur de projection et supprime toutes les données de contrat, paramètres et résultats préalablement passés ou calculés
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.InitialiserMoteurCalculAgeEquivalent(IAFG.IA.ZA.Interfaces.IAgeEquivalent.ICalculAgeEquivalent@)">
	<summary>
 Cette fonction sert a transmettre l'instance du moteur de calcul d'age equivalent qui devra etre utilisee par le moteur de projection.
 </summary>
	<param name="moteur"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.NomFichierOutput(System.String,IAFG.IA.ZA.MoteurVU.ENUMs.ModeTrace)">
	<summary>
 Cette fonction sert lors des tests et du debogage du moteur. Elle permet la creation d'un fichier de donnees listant les intrants et les extrants de la projection
 </summary>
	<param name="cheminEtNom">Emplacement et nom du fichier a creer pour les outputs</param>
	<param name="modeTrace">Type de fichier desire. Standard : contient intratns et extrants. Debug : contient aussi els calculs intermediaires</param>
	<remarks>Si le fichier existe deja, il est remplace. Si le parametre cheminEtNom est une chaine vide, aucun fichier n'est cree (equivaut a ne pas appeler la fonction).</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.ObtenirMessage">
	<summary>
 Permet d'obtenir la liste des messages d'avertissement relies a la projection qui ont ete generes par le moteur
 </summary>
	<returns>Dictionnaire d'entrees ayant pour cle un code de message existant et une liste de valeurs associee a chaque message, pour affichage a l'interieur du texte de message defini par l'application.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.ObtenirPrimeProtection(System.String,System.String,IAFG.IA.ZA.MoteurVU.ENUMs.OutputPrimeProtectionUnitaire)">
	<summary>
 Permet d'acceder aux resultats des calculs de prime par protection qui sont sous forme unitaire(donnees en debut d'annee)
 </summary>
	<param name="id_refContrat">Identifiant du contrat</param>
	<param name="id_refprot">Identifiant de la protection</param>
	<param name="TypeDePrime">Identifiant de l'output desire (prime de base, surprime, duree de paiement, etc.)</param>
	<returns>Le resultat specifie</returns>
	<remarks>Les resultats sont en fonction de la date specifiee par la fonction Resultats_ParametresDePrise</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.ObtenirPrimesProtectionVecteurs(System.String,System.String,IAFG.IA.ZA.MoteurVU.ENUMs.OutputPrimeProtectionVecteurs)">
	<summary>
 Permet d'acceder aux resultats des calculs de prime par protection qui sont sous forme de vecteurs (donnees en debut d'annee)
 </summary>
	<param name="id_refContrat">Identifiant du contrat</param>
	<param name="id_refprot">Identifiant de la protection</param>
	<param name="TypeDePrime">Identifiant de l'output desire (primes renouv. courant, garantis, etc)</param>
	<returns>Le vecteur de resultats demandes en debut d'annee, pour chaque annee de projection effectuee, l'indice 1 representant l'annee d'emission du contrat</returns>
	<remarks>Les resultats de la PREMIERE annee sont en fonction de la date specifiee par la fonction Resultats_ParametresDePrise, les autres sont a l'anniversaire de contrat</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.ObtenirResultatsVecteurs(IAFG.IA.IL.AP.Moteur.PU.ENUMs.ColonneAffichage)">
	<summary>
 Permet d'acceder aux outputs de fin d'annee qui sont sous forme de vecteurs
 </summary>
	<param name="cle">Identifiant de l'output desire</param>
	<returns>Vecteurs contenant les valeurs en fin d'annee pour l'output, pour les annees de projection effectuees.</returns>
	<remarks>La premiere annee de contrat etant l'annee 1, pour un nouveau contrat les resultats commencent a l'indice 1. Pour l'envigueur, commence a l'indice correspondant a l'annee courante du contrat.</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.ObtenirResultatsVecteursDebutAnnee(IAFG.IA.ZA.MoteurVU.ENUMs.OutputVecteursDebutAnnee)">
	<summary>
 Permet d'acceder aux outputs de debut d'annee qui sont sous forme de vecteurs
 </summary>
	<param name="cle">Identifiant de l'output desire</param>
	<returns>Le vecteur de resultats demandes en debut d'annee, pour chaque annee de projection effectuee, l'indice 1 representant l'annee d'emission du contrat</returns>
	<remarks>Les resultats de la PREMIERE annee de projection sont en fonction de la date specifiee par la fonction Resultats_ParametresDePrise. Les autres sont a l'anniversaire de contrat.</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.ObtenirResultatUnitaire(IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur)">
	<summary>
 Permet d'accéder aux outputs de fin d'annee qui ne sont pas des vecteurs
 </summary>
	<param name="cle">Identifiant de l'output desire</param>
	<returns>Valeur de l'output au moment specifie par la fonction Resultats_ParametresDePrise</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.ObtenirStatutCalculPlacementAlternatif">
	<summary>
 Sert a indiquer si les calculs ont ete effectues pour le placement alternatif
 </summary>
	<returns></returns>
	<remarks>Fonction concue pour aider les applications qui utilisent le moteur. Aucun appel a cette fonction n'est necessaire pour effectuer une projection</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.ObtenirStatutCalculRetrait">
	<summary>
 Sert a indiquer si la projection avec un contrat illustrant des retraits partiels a ete effectuee pour comparaison  (concept SAR)
 </summary>
	<returns></returns>
	<remarks>Fonction concue pour aider les applications qui utilisent le moteur. Aucun appel a cette fonction n'est necessaire pour effectuer une projection</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.ObtenirStatutCalculs">
	<summary>
 Sert a indiquer si les calculs ont ete effectues ou non, et quel type de calcul a ete demande
 </summary>
	<returns></returns>
	<remarks>Fonction concue pour aider les applications qui utilisent le moteur. Aucun appel a cette fonction n'est necessaire pour effectuer une projection</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_CapitalAssureOptimal(System.String,System.String,System.Boolean,System.Int32,IAFG.IA.VI.ENUMs.Sexe,IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac,System.Int32,System.Int32)">
	<summary>
 Cette fonction permet de demander l’optimisation permettant de calculer le capital assuré a l'emission optimal pour la prestation de deces VMAX, 
 i.e le capital assure minimal permettant d'eviter la creation d'un fonds transitoire pendant une periode determinee
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="activerNivellement">Indique si calcul doit etre effectue en redistribuant les depots et primes des 3 premieres annees en 3 versements annuels egaux</param>
	<param name="dureeOptimisation">Periode pendant laquelle la cration d'un fonds transitoire doit etre evitee. &gt;= 1</param>
	<param name="sexeEquivSansPreferentiel">Sexe de l'assure equivalent a utiliser si le capital optimal calcule ne permet pas la tarification preferentielle</param>
	<param name="tabagismeEquivSansPreferentiel">Code de tabagisme de l'assure equivalent a utiliser si le capital optimal calcule ne permet pas la tarification preferentielle</param>
	<param name="ageEquivSansPreferentiel">Age de l'assure equivalent a utiliser si le capital optimal calcule ne permet pas la tarification preferentielle</param>
	<param name="ageEquivSurprimeSansPreferentiel">Age equivalent calcule en tenant compte des surprimes pour l'assure equivalent a utiliser si le capital optimal calcule ne permet pas la tarification preferentielle</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.VMaxCapitalAssureInitialOptimal</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_FondsCibleDuree(System.String,System.String,System.Double,System.Int32,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement,System.Double)">
	<summary>
 Cette fonction permet de demander l’optimisation permettant de calculer la durée de paiement faisant en sorte d'obtenir un fonds cible donné pour une prime nivelée donnée.
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="fondsCible">Le montant de fonds total a atteindre pour le contrat</param>
	<param name="anneeFondsCible">L'annee pendant laquelle le fonds doit etre atteint en fin d'annee</param>
	<param name="frequencePaiement">La frequence de paiement de la prime fixee</param>
	<param name="prime">Le montant de prime nivelee a utiliser pour le calcul</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.DureeCalculee</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_FondsCiblePrimeVersee(System.String,System.String,System.Double,System.Int32,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement,System.Int32)">
	<summary>
 Cette fonction permet de demander l’optimisation permettant de calculer la prime faisant en sorte d'obtenir un fonds cible donné pour une durée de paiement donnée.
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="fondsCible">Le montant de fonds total a atteindre pour le contrat</param>
	<param name="anneeFondsCible">L'annee pendant laquelle le fonds doit etre atteint en fin d'annee</param>
	<param name="frequencePaiement">La frequence de paiement de la prime fixee</param>
	<param name="duree">La duree pendant laquelle la prime recherchee sera versee</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.PrimeCalculee</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_IRIS_ReductionPret(System.String,System.String)">
	<summary>
 Cette fonction demande l’optimisation permettant de trouver à quelle durée le scénario de prêt ne permet plus de garder la police en vigueur et, pour cette durée trouver le prêt maximum qui le permet.
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.DureeCalculee</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_PaiementRapideDuree(System.String,System.String,System.Double,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement)">
	<summary>
 Cette fonction demande l’optimisation permettant de calculer la durée de paiement faisant en sorte de ne jamais tomber en déchéance pour une prime nivelée donnée.
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="prime">Montant de prime versee a utiliser pour le calcul</param>
	<param name="frequencePaiement">Frequence de paiement de la prime a utiliser pour le calcul</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.DureeCalculee</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_PaiementRapidePrime(System.String,System.String,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement,System.Int32)">
	<summary>
 Cette fonction permet de demander l’optimisation permettant de calculer la prime faisant en sorte de ne jamais tomber en déchéance si elle n'est payée que durant une durée donnée.
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="frequencePaiement">Frequence de paiement de la prime a utiliser pour le calcul</param>
	<param name="duree">Duree en annees pendant laquelle la prime sera versee</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.PrimeCalculee</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_Patrimoine_ComparaisonDepotsAdditionnels(System.String,System.String,System.Double,System.Int32,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement)">
	<summary>
 Fonction qui ajoute l'optimisation permettant de calculer les dépots additionnels à verser dans le placement alternatif
 pour payer les impôts à la succession (concept protection du patrimoine)
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Id contrat placement alternatif</param>
	<param name="valeurSuccessoraleNetteCible">Valeur successorale nette à atteindre a la duree specifiee</param>
	<param name="anneeCible">Annee a laquelle la valeur successorale specifiee doit etre atteinte</param>
	<param name="frequencePaiement">Frequence de paiement de la prime additionnelle a utiliser pour les calculs</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.ProtPatrimoinePrimeAdditionnelle</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_PrimeMaxNivelee(System.String,System.String,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement,System.Int32)">
	<summary>
 Cette fonction permet de demander l’optimisation permettant de calculer la prime nivelée maximum faisant en sorte qu'aucun compte transitoire n'est créé.
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="frequencePaiement">Frequence de paiement de la prime a utiliser pour le calcul</param>
	<param name="duree">Duree en annees pendant lesquelles la prime sera versee</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.PrimeNiveleeMaximale</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_RetourDePrime(System.String,System.String,System.Double,System.Int32,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement,System.Int32)">
	<summary>
 Cette fonction permet de demander l’optimisation permettant de calculer la prime nivelée faisant en sorte que les fonds a une duree donnee soient egaux a un certain pourcentage des primes payees.
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="pctValeurDeRachat">Pourcentage de la valeur de rachat correspondant au retour de prime desire. Valeur entre 0 et 1</param>
	<param name="anneePct">Année où le pourcentage doit être atteint</param>
	<param name="frequencePaiement">Frequence de paiement de la prime a utiliser pour le calcul</param>
	<param name="duree">Duree en annees pendant lesquelles la prime sera versee</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.PrimeCalculee</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_SAR_DureeRevenuRetraite(System.String,System.String,System.Int32,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement,System.Double,System.Double)">
	<summary>
 Cette fonction permet de demander l’optimisation permettant de calculer la durée pendant laquelle un montant donné de revenu retraite peut être versé.
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="ageRetraite">Age auquel il faut commencer le versement du revenu de retraite</param>
	<param name="frequence">Frequence de versement du revenu</param>
	<param name="montant">Montant de revenu de retraite a verser</param>
	<param name="tauxIndexation">Taux d'indexation annuel a appliquer au montant de revenu. Valeur entre 0 et 1</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.DureeCalculee</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Optimisation_SAR_MontantRevenuRetraite(System.String,System.String,System.Int32,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement,System.Int32,System.Double)">
	<summary>
 Cette fonction permet de demander l’optimisation permettant de calculer le montant de revenu qui peut être obtenu périodiquement sur une durée donnée à partir d'un âge à la retraite donné.
 </summary>
	<param name="id_ref">Identifiant de l'optimisation</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="ageRetraite">Age auquel il faut commencer le versement du revenu de retraite</param>
	<param name="frequence">Frequence de versement du revenu</param>
	<param name="duree">Periode en annees pendant laquelle verser le revenu de retraite</param>
	<param name="tauxIndexation">Taux d'indexation annuel a appliquer au montant de revenu de retraite. Valeur entre 0 et 1</param>
	<remarks>Le resultat de ce calcul peut etre obtenu via la fonction ObtenirResultatUnitaire, avec le parametre IAFG.IA.IL.AP.Moteur.PU.ENUMs.ValeursMoteur.SARMontantRevenuRetraite</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_CalculAssuranceProlongee(System.Boolean)">
	<summary>
 Cette fonction permet d’activer ou de désactiver le calcul d’assurance prolongée.
 </summary>
	<param name="actif">Si VRAI alors le calcul est effectué</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_CalculPlacementAlternatif(System.Boolean)">
	<summary>
 Cette fonction permet d’activer ou de désactiver le calcul de placement alternatif
 </summary>
	<param name="actif">Si VRAI alors le calcul est effectué</param>
	<remarks>Le placement alternatif est un contrat de type trad qui est passe au moteur et dont les resultats seront compares a ceux du contrat vie universelle</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_CalculPrimesAdditionnelles(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d’activer le calcul des primes additionelles nécessaires au maintien en vigueur de la police.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="actif">Si VRAI alors le calcul est activé</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_CalculsTRI(System.String,System.Boolean,System.Boolean)">
	<summary>
 Cette fonction permet d’activer ou de désactiver les calculs de taux de rendement interne au décès et au rachat.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="deces">Si VRAI alors le calcul du TRI au deces est effectué</param>
	<param name="rachat">Si VRAI alors le calcul du TRI au rachat est effectué</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_ComparaisonRetraitsPartielsPU(System.Boolean)">
	<summary>
 Cette fonction permet d’activer ou de désactiver la comparaison d’un concept SAR avec des retraits partiels effectués dans une police universelle standard.
 </summary>
	<param name="actif">Si VRAI alors le calcul de la comparaison avec des retraits partiels est effectué</param>
	<remarks>Cette fonction n'a d'effet que si le concept de vente SAR a ete selectionné.</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_ConceptDeVente(System.String,IAFG.IA.IL.AF.Illustration.ENUMs.TypeConcept)">
	<summary>
 Cette fonction permet d’initialiser le choix de concept de vente.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="concept">Concept de vente a utiliser lors de la projection</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_FrequenceParDefaut(System.String,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement)">
	<summary>
 Indique la frequence (annuelle, mensuelle, etc) a utiliser par defaut lorsque non specifiee explicitement
 </summary>
	<param name="ajustementSelonFrequence"></param>
	<remarks>Utilisée pour calcul de primes additionnelles, présentation des outputs, etc</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_IRIS_DeduireCNAP(System.String,System.Boolean)">
	<summary>
 Spécifie si oui ou non le moteur doit calculer l'épargne fiscale créé par la déduction du coût net d'assurance pure.
 L'épargne est calculée en fonction du taux marginal d'imposition. Cette option n'est offerte que pour les polices IRIS.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="deduireCNAP">Si VRAI alors le calcul est activé</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_IRIS_FigerPret(System.String,System.Boolean,System.Double)">
	<summary>
 Permet de limiter le solde cumulatif du prêt IRIS à un montant spécifié. 
 Pour respecter cette condition, on limitera les émissions de prêt et on forcera le paiement complet des intérêts en fin d'année.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="figer">Si VRAI alors le prêt sera figé au montant indiqué à l'argument soldeMax</param>
	<param name="soldeMax">Solde cumulatif maximum du prêt</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_IRIS_ForcerPretSelonHypothese(System.String,System.Boolean)">
	<summary>
 Fonction pour le bénéfice de PPI, notamment pour une utilisation à travers le wrapper créé pour eux.
 Permet de forcer les prêts spécifiés en input sans limiter les émissions aux prêts maximum calculés.
 Des prêts forcés trop grands feront tomber la police en déchéance puisque le maintien en vigueur est désactivé
 par défaut si l'argument forcerPret est True. 
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="forcerPret">Si VRAI alors le calcul est activé</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_IRIS_PourcentageInvesti(System.String,System.Double)">
	<summary>
 Cette fonction permet d’initialiser le pourcentage du prêt IRIS utilisé pour investissement afin de calculer la proportion des intérêts déductible d’impôt.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="pourcent">Pourcentage du prêt utilisé pour investissements. Valeur entre 0 et 1</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_IRIS_ProvenanceMaintienEnVigueur(System.String,IAFG.IA.IL.AF.Illustration.ENUMs.TypeMaintienEnVigueur)">
	<summary>
 Permet de spécifier le traitement automatique à effectuer pour faire en sorte de maintenir en vigueur une police IRIS.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="provenance">Source des fonds nécessaires au maintient en vigueur</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_IRIS_TaxePrimeIncluse(System.String,System.Boolean)">
	<summary>
 Permet de spécifier, pour les contrats IRIS Plus, de ne pas charger de taxe sur prime explicite sur les dépôts en excédant de la prime minimum.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="taxePrimeIncluse">Si VRAI alors aucune taxe n'est prélevée sur la prime excédentaire</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_IRIS_PretAdditionnelFinAnnee(System.String,System.Double[])">
	<summary>
 Permet de spécifier, pour les contrats IRIS, si une emission de pret supplementaire doit etre effectuee en fin d'annee
 </summary>
	<param name="id_contrat"></param>
	<param name="PourcentagePretAdditionnel">Entre 0 (aucun pret fin annee) et 1 (100% du montant disponible en fin d'annee) </param>
	<remarks>Pour les prets Iris, pas disponible pour les Investor Plus</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_SAR_Comparaison(IAFG.IA.IL.AF.Illustration.ENUMs.TypeValeurAcalculerComparaison)">
	<summary>
 Indique sur quelle base doit s'effectuer la comparaison entre les resultats du contrat Genesis SAR et les contrats Genesis avec retraits et Placement alternatif
 </summary>
	<param name="TypeComparaisonPA">Selon la duree ou selon le montant de revenu</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_SAR_PretMaximum(System.String,System.Double,System.Double,System.Int32)">
	<summary>
 Cette fonction permet d’initialiser les valeurs des ratios maximums du montant du prêt SAR sur les comptes garantis et sur les comptes indiciels ainsi que la période différée avant que ces ratios ne s’appliquent plus.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="ratioGarantiMax">Ratio maximal du prêt sur la valeur des comptes garantis. Valeur entre 0 et 1</param>
	<param name="ratioIndicielMax">Ratio maximal du prêt sur la valeur des comptes indiciels. Valeur entre 0 et 1</param>
	<param name="periodeDiffereeNonRespectPretMax">Période en années pendant laquelle les ratios pour le prêt max doivent s'appliquer</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_SAR_TransfertsComptesGarantis(System.String,System.Boolean,System.Double[])">
	<summary>
 Cette fonction permet d’activer ou de désactiver les transferts vers les fonds garantis pour un concept SAR.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="actif">Si VRAI alors les transferts vers les comptes garantis sont permis</param>
	<param name="taux">Taux de rendement a utiliser pour les sommes transferees dans les comptes garantis. Valeur entre 0 et 1</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Parametres_TPE_PctInvestTaxeCapital(System.String,System.Double)">
	<summary>
 Cette fonction permet d’initialiser le pourcentage des investissements taxables en vertu de la taxe sur le capital dans un concept transfert du patrimoine de l’entreprise.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="pcent">Le pourcentage sujet à la taxe sur le capital. Valeur entre 0 et 1</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Pret_Emission(System.String,System.String,System.Int32,System.Boolean,System.Double,System.Double,System.Int32,IAFG.IA.IL.AF.Illustration.ENUMs.FrequencePaiement)">
	<summary>
 Cette fonction permet d’ajouter une NOUVELLE émission de capital à titre d’avance standard, de prêt IRIS ou d’une avance InvestorPlus au cours de la projection.
 </summary>
	<param name="id_ref">Identifiant du pret</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="annee">Annee de contrat a laquelle il faut emettre ce pret</param>
	<param name="emissionMax">Si valeur VRAI : emettre le prêt maximal possible</param>
	<param name="montant">Montant demandé de l’émission</param>
	<param name="tauxIndexation">Taux annuel d'indexation a appliquer sur le montant du pret. Valeur entre 0 et 1</param>
	<param name="duree">Durée en années pendant laquelle il faut emettre des prets</param>
	<param name="frequence">Emission annuelle ou mensuelle de prets</param>
	<remarks>Si emissionMax est a TRUE, le parametre montant est ignore</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Pret_InformationCorporative(System.String,System.String,IAFG.IA.IL.AF.Illustration.ENUMs.TypeEmprunteur,System.Double)">
	<summary>
 Permet de spécifier, lorsque le contractant est une coporation, si l'emprunteur est la corporation elle-même ou une tierce partie (un actionnaire par exemple).
 Dans le cas ou l'emprunteur est une tierce partie, un frais de garantie est chargé par la corporation. 
 </summary>
	<param name="id_ref">Identifiant du pret</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="typeEmprunteur">Spécifie qui de la corporation ou d'une tierce partie est l'emprunteur</param>
	<param name="fraisGarantie">Le frais de garantie chargé par la corporation</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Pret_Remboursement(System.String,System.String,System.Int32,IAFG.IA.ZA.MoteurVU.ENUMs.TypeRemboursement,System.Boolean,System.Double)">
	<summary>
 Cette fonction permet d’ajouter un remboursement partiel ou total d’un prêt  IRIS, d’une avance InvestorPlus, d’une avance automatique ou d’une avance standard au cours de la projection.
 </summary>
	<param name="id_ref">Identifiant du pret a rembourser</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="annee">Annee de contrat lors de laquelle le remboursement doit etre effectue</param>
	<param name="provenance">Provenance des fonds utilisés pour rembourser le prêt</param>
	<param name="remboursementMax">Si valeur VRAI : rembourser le solde total du prêt</param>
	<param name="montant">Montant demandé de remboursement</param>
	<remarks>Si remboursementMax est a TRUE, le parametre montant est ignore</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Pret_TauxInteret(System.String,System.String,IAFG.IA.ZA.MoteurVU.ENUMs.TypeInteret,IAFG.IA.ZA.MoteurVU.ENUMs.TimingInteret,IAFG.IA.ZA.MoteurVU.ENUMs.LoanRateType,System.Double[])">
	<summary>
 Cette fonction permet d’initialiser les taux d’intérêts à appliquer à un prêt pour chaque année de projection.
 </summary>
	<param name="id_ref">Identifiant du prêt </param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="typeInteret">Intérêts ajoutés au solde du prêt (créditeurs) ou soustraits du solde (débiteurs)</param>
	<param name="timingInteret">Moment de l’année où les intérêts sont appliqués</param>
	<param name="referenceTaux">Indique si les valeurs sont des taux effectifs (rate) ou des écarts par rapport au rendement (spread)</param>
	<param name="taux">Un vecteur de taux d’intérêts ou d'ecarts. Valeur entre 0 et 1, commence a l'indice 1</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_AjouterConjoint(System.String,System.String,System.String,System.String,IAFG.IA.VI.ENUMs.Sexe,IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac,System.Int32,System.Int32,System.Boolean,System.DateTime)">
	<summary>
 Cette fonction permet d’ajouter un assuré couvert par une protection et d’initialiser ses données de tarification.
 </summary>
	<param name="id_ref">Identifiant unique de l'assure</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_individu">Identifiant de l'individu du contrat correspondant a cet assure</param>
	<param name="id_protection">Identifiant de la protection sur laquelle il faut ajouter l'assure</param>
	<param name="sexe">Sexe de l'assure</param>
	<param name="tabagisme">Code de tabagisme a l'emission pour cet assure. Inclus le statut preferentiel</param>
	<param name="age">Age a l'emission pour l'assure</param>
	<param name="assurabilite">Indique si l'assure est assurable ou non</param>
	<remarks>Une personne doit être dans la liste des individus avant de pouvoir être ajoutée comme personne assurée sur une protection. </remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_AjouterAssure(System.String,System.String,System.String,System.String,IAFG.IA.VI.ENUMs.Sexe,IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac,System.Int32,System.Int32,System.Int32,System.DateTime)">
	<summary>
 Cette fonction permet d’ajouter un assuré individuel couvert par une protection et d’initialiser ses données de tarification.
 </summary>
	<param name="id_ref">Identifiant unique de l'assure</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_individu">Identifiant de l'individu du contrat correspondant a cet assure</param>
	<param name="id_protection">Identifiant de la protection sur laquelle il faut ajouter l'assure</param>
	<param name="sexe">Sexe de l'assure</param>
	<param name="tabagisme">Code de tabagisme a l'emission pour cet assure. Inclus le statut preferentiel</param>
	<param name="age">Age a l'emission pour l'assure</param>
	<remarks>Une personne doit être dans la liste des individus avant de pouvoir être ajoutée comme personne assurée sur une protection. </remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_AjouterAssureEquivalent(System.String,System.String,IAFG.IA.VI.ENUMs.Sexe,IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Cette fonction permet d’initialiser les données de tarification pour l’assuré équivalent une fois la protection ajoutée.
 </summary>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="sexe">Sexe equivalent</param>
	<param name="tabagisme">Statut de tabagisme de l'assure equivalent</param>
	<param name="age">Age equivalent, pour les cas conjoints utilisant le principe d'age equivalent</param>
	<param name="ageSurprime">Age surprime equivalent, pour les cas conjoints 2e deces ayant une surprime</param>
	<param name="ageChangementCout">Pour les protections ayant nivelé dans le pass,age au nivellement. Sinon, mettre = age ou = -1 </param>
	<param name="ageSurprimeChangementCout">Pour les protections ayant nivelé dans le pass,age surprime au nivellement. Sinon, mettre = age ou = -1 </param>
	<param name="ageChangementTabagisme">Pour les protections ayant eu un changement de tabagisme, age equiv au changement, sinon mettre = age ou = -1</param>
	<remarks>En assurance individuelle, les donnees correspondent a celles de l'assure 1</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_AjouterPTE(System.String,System.String,System.String,System.Double,System.Int32,IAFG.IA.VI.ENUMs.Sexe,IAFG.IA.VI.AF.Proposition.ENUMs.TypeCodeTabac,System.DateTime)">
	<summary>
 Cette fonction permet d’ajouter une police type exonérée à une protection déjà ajoutée.
 </summary>
	<param name="id_ref">Identifiant de la PTE</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_protection">Identifiant de la protection</param>
	<param name="valeur">Montant de la PTE</param>
	<param name="age">Age de la PTE</param>
	<param name="sexe">Sexe de la PTE</param>
	<param name="tabagisme">Code de tabagisme de a PTE</param>
	<param name="dateEmission">Date d'emission de la PTE</param>
	<remarks>Pour les protections en vigueur seulement. Pour les nouvelles ventes, la PTE sera creee par le moteur</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_PUA(System.String,System.String,System.Double,System.Double)">
	<summary>
 Cette fonction permet d’initialiser le montant du capital assuré maximum à vie de PUA
 </summary>
	<param name="id_ref">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="pua_CapitalAssureMaxDEC">Capital assure maximum depuis l'emission du contrat (PaidUpAdditionMaxAmountEAD)</param>
	<param name="allocationAchatPUA_Desiree">Montant maximum achat PUA annuelle desiree par le client</param>
	<remarks>VCO-MAX-FACE-AMT-PUA-ITD dans VLN</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_CapitalAssure(System.String,System.String,System.Double,System.Double,System.Double)">
	<summary>
 Cette fonction permet d’initialiser le montant du capital assuré à l’émission et les montants actuels et courants dans le cas d’une illustration de police en vigueur.
 </summary>
	<param name="id_ref">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="capitalEmission">Capital assure a l'emission de la protection (GuaranteedFace dans VLN)</param>
	<param name="capitalCourant">Capital assure  courant (CurrentFace dans VLN)</param>
	<param name="capitalActuel">Capital assure actuel (ActualFace dans VLN)</param>
	<remarks>Le capital courant inclus les reductions de capital, le capital actuel inclus les reductions de capital et les diminutions dues au VMax </remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_CapitalAssure_IndexationEtDecroissance(System.String,System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeCapital,System.Int32,System.Double,IAFG.IA.VI.AF.Tarification.ENUMs.TypeFrequence)">
	<summary>
 Cette fonction permet de spécifier le type de capital assuré et les paramètres appropriés dans le cas d’une protection décroissante ou indexée
 </summary>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="typeCapital">Type de capital (nivele, indexe, decroissant)</param>
	<param name="nbreAnneesIndexDecr"></param>
	<param name="tauxIndexDecr"></param>
	<param name="frequenceIndexDecr"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_ChargesAuRachat(System.String,System.String,System.Double,System.Double)">
	<summary>
 Cette fonction permet d’initialiser les charges au rachat de la protection spécifiée.
 </summary>
	<param name="id_ref">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="initBasis">La base (surrender target) à l’émission (DVAKVCO-SURRTGT-INITIAL)</param>
	<param name="cumBasis">La base cumulative utilisée pour calculer la charge au rachat (DVAKVCO-SURRTGT-ACCUM-ITD)</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_DonneesCumul(System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Double)">
	<summary>
 Cette fonction permet d’initialiser des montants cumulatifs de primes versées et de coûts d’assurance dans le cas d’illustration de contrat en vigueur.
 </summary>
	<param name="id_ref">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="MaladieGrave_RetourDePrimesInitial">Pour les protections Maladie Grave qui incluent la caractéristique de retour des primes, montant eligible au retour des primes</param>
	<param name="cumulRetourDesPrimes">Pour les contrat ayant une prestation de deces incluant un retour de primes, montant eligible au retour de prime pour cette protection</param>
	<param name="cumulRetourDuCBR">Pour les contrat ayant une prestation de deces incluant un retour du CBR, montant eligible au retour du CBR pour cette protection</param>
	<param name="facteurRevisableCourant">Pour les protections Tendance, le facteur revisable courant a appliquer pour le calcul des primes et couts</param>
	<param name="primesPuresEADpourBoni">Pour les contrats avec boni d'interet Meridia, sommes des primes excluant les surprimes, si la protection est admissible</param>
	<param name="coutsMortalitesPursEADpourBoni">Pour les contrats avec boni de fidelite (Topaz), sommes des couts de mortalite, si la protection est admissible</param>
	<param name="dateChangementCout">Date de changement de cout pour les protections ayant nivelé après émission (sur produits utilisant le nivellement à taux courants)</param>
	<param name="allocationAchatPUA_DernAnniv">Montant pour achat de PUA au dernier anniversaire</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_Lier(System.String,System.String,System.String)">
	<summary>
 Cette fonction permet d’associer une protection subordonnee(une couverture d’OACA, une option de paiement rapide, une garantie etc.) a sa protection parent.
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="id_parent">Identifiant de la protection parent</param>
	<param name="id_enfant">Identifiant de la protection a lier a ce parent</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_NoBandeForcee(System.String,System.String,IAFG.IA.VI.AF.PDF.ENUMs.CodeBande)">
	<summary>
 Cette fonction permet de forcer un code de bande
 </summary>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="NoBandeForcee">No de la bande de taux a utiliser pour le calcul des couts et de la prime. La premiere bande est la bande 1.</param>
	<remarks>La valeur NonApplicable equivaut a ne pas forcer le code de bande</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_PrimesAUtiliser(System.String,System.String,System.Double[])">
	<summary>
 Cette fonction permet de remplacer les primes min annuelles calculées par un vecteur de primes determine par l'utilisateur
 </summary>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="primesAUtiliser">Vecteur de primes a utiliser. L'indice 0 n'est pas utilise.</param>
	<remarks>Disponible seulement pour les contrats de type Trad (placement alternatif)</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_PrimeSysteme(System.String,System.String,System.Double,System.Double)">
	<summary>
 Cette fonction permet d’initialiser les montants de la prime minimale totale (incluant la surprime) tels que specifiee dans les systèmes administratifs.
 </summary>
	<param name="id_refProtection">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="primeAnnuelle">Montant de la prime min annuelle pour la protection selon les systemes administratifs</param>
	<param name="fraisCouverture">Montant du frais charger pour la protection sur la police</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_RabaisSurLesCouts(System.String,System.String,System.Double)">
	<summary>
 Cette fonction permet d’initialiser les paramètres de réduction des coûts sur la prime et la surprime à la suite d’une coupure de commission.
 </summary>
	<param name="id_ref">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="pctRetentionCoutPrime">Pourcentage total du cout et de la prime qu'il faut conserver. Valeur entre 0 et 1</param>
	<remarks>Sert a verifier que la prime calculee par le moteur avant le debut de la projection concorde avec la prime de la protection dans les systemes administratifs
 S'il y a un ecart, un message d’avertissement IAFG.IA.ZA.MoteurVU.ENUMs.CodesMessages.EnVigueurEcartPrimeMinimale est retourne dans les resultats
</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_Remuneration(System.String,System.String,System.Double,System.Double)">
	<summary>
 Cette fonction permet d’ajouter les informations apparaissant sur le rapport de rémunération liées à la couverture.
 </summary>
	<param name="id_ref">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="pctCommissionPrime">Taux de commission sur la prime. Valeur entre 0 et 1</param>
	<param name="pctCommissionSurprime">Taux de commission sur la surprime. Valeur entre 0 et 1</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Protection_RenouvellementTempo(System.String,System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeRenouvellement)">
	<summary>
 Cette fonction permet d’initialiser le type de coût au renouvellement pour les protections temporaires renouvelables.
 </summary>
	<param name="id_ref">Identifiant de la protection</param>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="typeCoutRenouvellement">Type de couts a illustrer au renouvellement (garantis ou courant(nouvelle emission))</param>
	<remarks>Lorsque les couts courants sont utilises, la projection simule une terminaison de protection et une nouvelle emission a l'age atteint pour chaque renouvellement</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Resultats_ParametresDePrise(System.String,System.DateTime)">
	<summary>
 Cette fonction permet de specifier le moment lors de la projection lors duquel les outputs unitaires du contrat doivent etre pris
 </summary>
	<param name="id_contrat">Identifiant du contrat</param>
	<param name="datePriseResultatsPrimes">Date correspondant a la prise des resultats</param>
	<remarks>Sert a determiner le moment dans le temps auquel on prend une "photo" du contrat, pour obtenir les outputs apres la prise d'effet des principaux changements aux protections, s'il y a lieu</remarks>
</member><member name="M:IAFG.IA.ZA.IMoteurVU.ISASMoteurVie.Resultats_ProjectionPatrimoine(System.Collections.Generic.Dictionary{IAFG.IA.IL.AP.Moteur.PU.ENUMs.ColonneAffichage,System.Double[]})">
	<summary>
 Ceci est une fonction d'INPUT permettant de transmettre au moteur l'ensemble des resultats generes par la dll Patrimoine. Ces resultats sont consolides 
 avec les resultats de la projection et peuvent etre consultes via la fonctions Obtenir_ResultatsVecteurs
 </summary>
	<param name="outputPatrimoine"></param>
	<remarks></remarks>
</member><member name="P:IAFG.IA.ZA.IMoteurVU.My.Resources.Resources.ResourceManager">
	<summary>
  Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
</summary>
</member><member name="P:IAFG.IA.ZA.IMoteurVU.My.Resources.Resources.Culture">
	<summary>
  Remplace la propriété CurrentUICulture du thread actuel pour toutes
  les recherches de ressources à l'aide de cette classe de ressource fortement typée.
</summary>
</member><member name="T:IAFG.IA.ZA.IMoteurVU.My.Resources.Resources">
	<summary>
  Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
</summary>
</member>
</members>
</doc>