<?xml version="1.0"?>
<doc>
<assembly>
<name>
IAFG.IA.IL.AP.IllusVie
</name>
</assembly>
<members>
<member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.TraitementBassePriorite">
	<summary>
 Méthode pour indiquer si le Traitement est une basse priorité
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.LeverExceptionValidation">
	<summary>
 Propriété qui indique si on doit lever les exceptions dans les validations
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.DOUBLE_INDEFINI">
	<summary>
 Propriété qui retourne un double indéfini
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirAgeReferenceEmissionContrat">
	<summary>
 fonction qui retourne l'âge utilisé pour compter le nombre d'années illustrées
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirPrimeCoutTRAContrat">
	<summary>
 Renvoit la prime minimale du contrat pour la fréquence demandée.
 </summary>
	<returns>Renvoit la prime minimal du contrat.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirPrimeMinimaleAssure(System.Int32,System.Int32,System.Int32,System.Decimal@)">
	<summary>
 Cette fonction permet d'obtenir la prime minimale de l'assuré
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<param name="noAssure">Numéro de l'assuré</param>
	<param name="frequence">1 = mensuel, 3 = annuelle, 0 = selon le dossier</param>
	<param name="prime">La prime retournée en référence</param>
	<returns>Code de retour, -1 = erreur, 1 = ok, 2 = warning</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetCapAssureVie(System.Int32,System.Int32)">
	<summary>
 calcule le montant total du capital asuré pour un assuré
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<param name="noAss">Numéro de l'assuré</param>
	<returns>Le capital assuré</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetMaxVolumeGc(System.Int32,System.String)">
	<summary>
 Cette fonction permet d'obtenir le volume maximum de la garantie complémentaire
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<param name="planIllus">Le code de plan illustration de la garantie que l'on veut obtenir</param>
	<returns>Le volume minimum de la garantie complémentaire</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetMinVolumeGc(System.Int32,System.String)">
	<summary>
 Cette fonction permet d'obtenir le volume minimum de la garantie complémentaire
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<param name="planIllus">Le code de plan illustration de la garantie que l'on veut obtenir</param>
	<returns>Le volume minimum de la garantie complémentaire</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetMessageVmax(System.Int32,IAFG.IA.VI.ENUMs.Langue,System.String@)">
	<summary>
 Récupère les messages dans le moteur de calcul pour les afficher à l'écran
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<param name="langue">Langue</param>
	<param name="messages">La liste des messages VMAX</param>
	<returns>True si c'est un succès</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirPrimeMinAssSansGc(System.Int32,System.Int32,System.Decimal@)">
	<summary>
 obtenir la prime minimale de l'assure sans les garanties complémentaires
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<param name="noAssure">Numéro de l'assuré</param>
	<param name="prime">Retour de la prime minimale de l'assure sans les garanties complémentaires</param>
	<returns>Code de retour, -1 = erreur, 1 = ok, 2 = warning</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetMessageRapport(System.Int32)">
	<summary>
 récupère les messages dans le moteur de calcul
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<returns>Une liste des messages</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetValue(System.Int32,System.Int32)">
	<summary>
 Wrapper pour la fonction GetValue qui retourne une valeur du moteur de calcul actuariel
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<param name="item"># de l'item dans le vecteur</param>
	<returns>La valeur que l'on vient de demander au moteur</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.IsScenarioValide(System.Int32)">
	<summary>
 Cette fonction permet de vérifier si le scénario est valide
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<returns>True si le scénario est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ProduireInfoProt(System.Int32)">
	<summary>
 produit une string de l'information contenue dans le moteur pour une protection
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<returns>La string produite des informations contenue dnas le moteur.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.CreerScenario(System.Int32)">
	<summary>
 Cette méthode permet de faire le traitement nécessaire à la création d'un
 nouveau scénario
 </summary>
	<param name="scenario">Numéro de scénario à créer</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.DetruireScenario(System.Int32)">
	<summary>
 Permet de faire le traitement nécessaire à la destruction d'un
 scénario existant
 </summary>
	<param name="scenario">Numéro de scénario à détruire</param>
	<returns>1 - La destruction du scenario c'est dérouler avec succès</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.SetCalculFait(System.Int32,System.Boolean)">
	<summary>
 Permet d'indiquer si les calculs du scenarion doivent
 etre recalculer
 </summary>
	<param name="scenario">Numéro du scénario</param>
	<param name="calculFait">valeur de l'indicateur: True = les calculs sont fait, False = 
 Les calculs ne sont pas à jour</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetCalculFait(System.Int32)">
	<summary>
 Permet de savoir si les calculs du scenario doivent
 etre recalculer
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<returns>True si les calculs sont à jour</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetValMax(System.Collections.Generic.List{System.Double})">
	<summary>
 retourne la valeur la plus élevé de la liste
 </summary>
	<param name="data">Liste de valeur</param>
	<returns>La valeur la plus élevé de la liste</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.AffecterInfoErreur(System.Int32)">
	<summary>
 Méthode qui affecter les informations d'un erreur de calcul
 </summary>
	<param name="codeErreur">??????????</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirInfoErreur">
	<summary>
 Cette fonction permet d'obtenir les informations d'une erreur
 </summary>
	<returns>Le message d'erreur dans la bonne langue</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.SetDebug(System.Boolean)">
	<summary>
 Permet de mettre le moteur en mode debug
 </summary>
	<param name="debug">Est-ce que le moteur doit-être en mode debug ou non.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetDebug">
	<summary>
 Obtenir si le moteur est en mode debug ou non.
 </summary>
	<returns>Le statut de débugage du moteur.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.SetOutputPath(System.String)">
	<summary>
 Permet de setter le path utiliser pour le fichier d'output de debug du moteur.
 </summary>
	<param name="path">Path du fichier d'output de debug du moteur.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetOutputPath(System.String)">
	<summary>
 Permet d'obtenir le path utiliser pour le fichier d'output de debug du moteur.
 </summary>
	<param name="path">Path du fichier d'output de debug du moteur.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirPrimeMinimaleContrat(System.Int32,System.Int32,System.Decimal@)">
	<summary>
 Permet d'obtenir la valeur de la prime minimale du contrat
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<param name="frequence">1 = mensuel, 3 = annuelle, 0 = selon le dossier</param>
	<param name="prime">La valeur de la prime minimale du contrat</param>
	<returns>Code de retour, -1 = erreur, 1 = ok, 2 = warning</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirPrimeMaximaleContrat(System.Int32,System.Int32,System.Decimal@)">
	<summary>
 Permet d'obtenir la valeur de la prime maximale du contrat
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<param name="frequence">1 = mensuel, 3 = annuelle, 0 = selon le dossier</param>
	<param name="prime">La valeur de la prime minimale du contrat</param>
	<returns>Code de retour, -1 = erreur, 1 = ok, 2 = warning</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.Calcul(System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Permet de faire les calcul d'un scenario
 </summary>
	<param name="scenario">Numéro de scénario&gt;</param>
	<param name="updateDossier">indique si nous devons mettre à jour les info du dossier</param>
	<param name="computeAll">indique si on doit tout calculer ou si on peut optimiser les calculs
  en omettant de calculer certains résultats. ( False = Optimisé, true = on calcule tout)</param>
	<returns>True si la fonction à réussi</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.GetMessageEcran(System.Int32,System.String@)">
	<summary>
 Récupère les messages dans le moteur de calcul pour les afficher à l'écran
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<returns>Les messages du moteur de calcul</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.CalculPrime(System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Permet de faire les calcul des prime d'un scenario
 </summary>
	<param name="scenario">Numéro de dossier</param>
	<param name="updateDossier">indique si nous devons mettre à jour les info du dossier</param>
	<param name="modif">True si on appel le calcul à la suite d'une modification,
 False si on l'appèle dans un autre contexte (reload ou rafraichissement)</param>
	<returns>1 - Le calcul sont fait. pas de problème</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.LeverException">
	<summary>
 Méthode pour lever les exceptions
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirPremiereAnneeIllustree">
	<summary>
 Obtient la première de projection du contrat en fonction de la date 
 d'émission de ce dernier et la date de projection.
 </summary>
	<returns></returns>
	<remarks>à l'émission on retourne toujours 1, fonction overridé dans NonTrad</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirPremiereAnneeScenarioPrimes">
	<summary>
 Obtient la première année de projection du contrat en fonction de la date 
 d'émission de ce dernier et la date de projection.
 </summary>
	<returns></returns>
	<remarks>à l'émission on retourne toujours 1, fonction overridé dans NonTrad</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirPremiereAnneeProjectionPretIRIS">
	<summary>
 Obtient la première année de projection des prets IRIS du contrat en fonction de la date 
 d'émission de ce dernier et la date de projection.
 </summary>
	<returns></returns>
	<remarks>à l'émission on retourne toujours 1, fonction overridé dans NonTrad</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirNombreAnneesIllustrees">
	<summary>
 Obtient le nombre d'années de projection depuis le début du contrat.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs.ObtenirNombreAnneesIllustreesResultats">
	<summary>
 Obtient le nombre d'années de projection depuis le début du contrat.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Calculs.GestionCalculs">
	<summary>
 Classe de base utilisée pour la gestion des calculs de l'illustration
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.ChargementConceptia.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.ChargementConceptia.#ctor(System.String)">
	<summary>
 Constructeur de la classe
 </summary>
	<param name="schema">Schéma XML</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Donnees.ChargementConceptia">
	<summary>
 Objet de chargement des concept - Couche "donneés"
 </summary>
	<remarks></remarks>
	<history>
		<pre>
 Auteur             Date         Description
 =====================================================================
 Genois, Mathieu    2008-03-14   Programmation initiale 
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireContractant.ValiderBoutonAjouterContractant(System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction permet déterminer si le bouton ajouter un contractant
 devrait être actif ou inactif
 </summary>
	<param name="nbContractant">Le nombre de contractants dans la datawindow</param>
	<param name="typeContractant">Le type du contractant courant</param>
	<param name="isInForce">Indique si le traitement est fait pour un contrat en vigueur</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireContractant.ValiderIndicContractant(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet déterminer si l'assure peut être contractant
 selon son age. Également fait la vérication du nombre d'assure
 conjoint qui sont contractant afin de valider si nous avons
 atteint le maximum de 2
 </summary>
	<param name="age">l'age de l'assure que l'on veut déterminer s'il peut être
 contractant</param>
	<param name="nbContractants">Le nombre de contractants</param>
	<param name="valeurItem">La valeur de l'indicateur</param>
	<param name="type">Le type</param>
	<param name="isInForce">Indique si le traitement est fait pour un assuré en 
 vigueur</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireContractant.ItemDisponible(System.String,System.Boolean)">
	<summary>
 Vérifie si un item doit être visible ou non
 </summary>
	<param name="idItem">Découpé en 2 parties: Le champs "Modifiable" provenant du dossier,
  Le nom de l'item</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si l'item doit être disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireContractant.ObtenirValeurDefautString(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur par defaut pour un
 un item dont l'identifiant est passé en paramêtre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons obtenir la 
 valeur par defaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur par defaut de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireContractant.ValiderValeur(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de valider une chaîne de caractères
 passé en paramêtre pour un item donc l'identifiant est
 également passé en paramêtre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la 
 chaîne de caractères</param>
	<param name="valeurItem">La chaîne de caratères qui doit être valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireContractant.ItemVisible(System.String,System.Boolean)">
	<summary>
 Vérifie si un item doit être visible ou non
 </summary>
	<param name="idItem">Découpé en 2 parties: Le type de contractant, Le nom de l'item</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si l'item doit être visible</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireContractant">
	<summary>
 Classe gérant les règles d'affaire pour les contractants.</summary>
	<isnew>2008-04-28</isnew>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 =====================================================================
 Lachance, Dominik 2007-06-01   Création de la classe et des méthodes.
 Tremblay, Victor  2008-04-28   Correction de l'anomalie IRM #161 
                                (Augmenter l'âge maximum du 
                                contractant à 99 ans). 
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireSurprime.ObtenirValeurDefautInt(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur par defaut pour un un item donc l'identifiant est passé en paramètre.
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons obtenir la valeur par defaut.</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur.</param>
	<returns>Valeur par defaut de l'item.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireSurprime.ObtenirValeurDefautDecimal(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur par defaut pour un item donc l'identifiant est passé en paramêtre.
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons obtenir la valeur par defaut.</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur.</param>
	<returns>Valeur par defaut de l'item.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireSurprime.ValiderValeur(System.String,System.Decimal,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur décimal.</summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la valeur de type entier.</param>
	<param name="valeurItem">L'entier qui doit être validé.</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur.</param>
	<returns>Valeur de l'énumération "Statut" soit :
 Echec
 Succes
 NonDefini
 SuccesAvecAvertissement
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireSurprime.ValiderValeur(System.String,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type Integer passé en paramêtre
 pour un item donc l'identifiant est également passé en paramêtre.
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la valeur de type entier.</param>
	<param name="valeurItem">L'entier qui doit être validé.</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur.</param>
	<returns>Valeur de l'énumération "Statut" soit :
 Echec
 Succes
 NonDefini
 SuccesAvecAvertissement
 </returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireSurprime">
	<summary>
 Règles d'affaire de la garantie DMA
 </summary>
	<isnew>2007-06-05</isnew>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 =====================================================================
 Martel, Guy       2007-06-05   Création de la classe
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireAssure.ValiderValeur(System.String,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type Integer
 passé en paramêtre pour un item donc l'identifiant est
 également passé en paramêtre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la 
 valeur de type entier</param>
	<param name="valeurItem">L'entier qui doit être valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireAssure.ValiderValeur(System.String,System.DateTime,System.Boolean)">
	<summary>
 Cette fonction permet de valider les valeurs de type date
 </summary>
	<param name="idItem">Le type de protection (individuelle ou conjoint) selectionné
 par l'usager</param>
	<param name="valeurItem">L'age à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en 
 vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireAssure.StatutAssureVisible(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ 
 "Statut" de l'assuré doit être visible ou non
 </summary>
	<param name="age">L'âge de l'assuré</param>
	<param name="typeCout">Le type de cout de la protection</param>
	<param name="dureeNiv">La durée du nivellement de la protection
 de base</param>
	<param name="avenRenouv">Indicateur qui indique si l'assure
 à un avenant renouvelable</param>
	<param name="isInForce">Indique si le traitement est fait pour un assuré en vigueur</param>
	<returns>True si le champ doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireAssure.ObtenirStatutAssureDefaut(System.Int32,System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction retourne le code de tabagisme (statut) de
 l'assuré selon les critères de l'âge
 </summary>
	<param name="age">L'âge de l'assuré</param>
	<param name="statut">Le code de tabagisme (statut) de l'assuré</param>
	<param name="typeCout">Le type de coûts de la protection de base</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en 
 vigueur</param>
	<returns>Le statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireAssure.ValiderIndicAssurable(System.Int32,System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction permet déterminer si l'indicateur d'assurabilité
 passé en paramêtre est valide
 </summary>
	<param name="nbAssures">Le nombre d'assuré conjoint (nombre de vie)</param>
	<param name="nbAssurable">Le nombre d'assuré assurable</param>
	<param name="valeurItem">La valeur de l'indicateur d'assurabilité de
 l'assuré qui vient d'être modifié</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en 
 vigueur</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireAssure.ItemDisponible(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir le statut de disponiblité 
 d'un item (champ) pour la regle d'affaire que représente cet
 objet
 </summary>
	<param name="idItem">Le nom de l'item (champ) pour lequel nous désirons obtenir
 la disponiblité</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si l'item est disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireAssure.ItemVisible(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir le statut de visibilité
 d'un item (champ) pour la regle d'affaire que représente cet
 objet
 </summary>
	<param name="idItem">Le nom de l'item (champ) pour lequel nous désirons obtenir
 le statut de visiblité</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en 
 vigueur</param>
	<returns>True si l'item est visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireAssure.IsStatutVisibleAjoutAssureRetourPropo(System.Int32)">
	<summary>Cette fonction indique si la liste déroulante du statut 
 doit être affichée lors de l'ajout d'un assuré, au retour 
 de la Proposition électronique, selon son âge.</summary>
	<isnew>2008-04-24</isnew>
	<param name="ageAssure">L'âge de l'assuré</param>
	<returns>True si l'âge de l'assuré fait en sorte qu'on doit 
 faire apparaître la liste de sélection du statut de 
 tabagisme de l'assuré; False sinon.</returns>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireAssure">
	<summary>
 Classe gérant les règles d'affaires pour les assurés
 </summary>
	<isnew>2008-04-24</isnew>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 ===========================================================================
 Lachance, Dominik 2007-06-01   Création de la classe et des méthodes
 Tremblay, Victor  2008-04-24   Ajout de la règle d'affaires 
                                IsStatutVisibleAjoutAssureRetourPropo.
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.#ctor(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Initialisation des variabes d'instance nécessaires pour le dialogue.
 </summary>
	<param name="prot">La protection pour laquelle on veut ajouter/modifier/supprimer les surprimes</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AfficherTitreFenetre">
	<summary>
 Méthode pour afficher le titre du dialogue
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AfficherInfosIndividu(IAFG.IA.VI.AF.Proposition.Individu,System.Int32)">
	<summary>
 Méthode pour afficher les informations d'un individu
 </summary>
	<param name="oIndividu"></param>
	<param name="row"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AfficherInfosSurprime(IAFG.IA.VI.AF.Proposition.Surprime,System.Int32)">
	<summary>
 Méthode pour afficher les valeurs d'une surprime
 </summary>
	<param name="oSurprime">la surprime</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AfficherValeurDefautSurprime(System.Int32,System.Collections.Generic.List{System.Double})">
	<summary>
 Méthode pour afficher les valeurs par défaut d'une surprime
 </summary>
	<param name="valeurDefaut">Une liste contenant les valeurs par défaut</param>
	<param name="row">la rangée à initialiser</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AfficherNotes(System.Int32)">
	<summary>
 Méthode qui affecte le texte à la note lorsque nécessaire.
 </summary>
	<param name="row">la rangée de la note</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.GererVisibiliteChamps(System.Int32,System.String)">
	<summary>
 Méthode qui fait la gestion de la visibilité des champs de la surprime en cours
 </summary>
	<param name="row">la rangée de la surprime</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.GererDisponibiliteChamps(System.Int32)">
	<summary>
 Méthode qui fait la gestion de la disponibilité des champs de la surprime en cours
 </summary>
	<param name="row">la rangée de la surprime</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.ObtenirRequeteSurprime(IAFG.IA.VI.AF.Proposition.ENUMs.TypeSurprimeValide)">
	<summary>
 Fonction qui permet d'obtenir la requeteSurprimesPermises du type passé en paramètre.
 </summary>
	<param name="typeSurp">le type de la surprime</param>
	<returns>une requête de type SurprimesPermises</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AssurePermis(System.String)">
	<summary>
 Fonction qui permet de savoir si l'assuré passé en paramètre peut avoir des surprimes
 </summary>
	<param name="idAssure">l'assuré</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AjouterLigneAssureFutur">
	<summary>
 Fonction qui permet de savoir si l'assuré passé en paramètre peut avoir des surprimes
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AffecterFiltrePct">
	<summary>
 Méthode qui affecte le filtre des pourcentages à afficher. Pour les maladies grave, le max c'est 125
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.InitValeur">
	<summary>
 Initialise les valeurs par défaut de cette écran
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AfficherChampsTotaux">
	<summary>
 Méthode qui affiche ou cache les champs total de la base et total de 
 l'option s'il n'y a pas d'option sur la protection
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.SurprimesPresent">
	<summary>
 Vérifie si il existe ou non au moins une surprime pour au moins un des assurés concernés passer en parametre
 </summary>
	<returns>true: il existe au moins une surprime pour au moins un des assurés concernés
 false: il existe aucune surprime pour les assurés concernés</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AfficherTotalSurprime">
	<summary>
 Gere le total de la surprime et rend disponible ou non le bouton effacer les surprimes
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.UnloadData(System.Object)">
	<summary>
 Méthode qui fait le déchargement des données du dialogue
 </summary>
	<param name="sender"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.ValiderTotalSurprimeTransformationIndCjt">
	<summary>
 Fonction qui retourne si le maximum de 100% de surprime sur une avenant de 
 transformation ind à cjt n'est pas respecté.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
	<summary>
 Traite une touche de commande.
 </summary>
	<param name="msg">System.Windows.Forms.Message, passé par référence, qui représente le message de fenêtre à traiter.</param>
	<param name="keyData">Une des valeurs System.Windows.Forms.Keys qui représente la touche à traiter. </param>
	<returns>True si le caractère a été traité par cette méthode; sinon False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.AjoutSurprimesOption(IAFG.IA.VI.AF.Proposition.ENUMs.TypeSurprime,System.String)">
	<summary>
 Méthode qui fait la gestion de l'ajout de la surprime sur l'option
 </summary>
	<param name="typeSurprime">le type de surprime à ajouter</param>
	<param name="idIndividu">l'id de l'individu à qui ajouter une surprime</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.InitialiserTauxSurprimeOption(IAFG.IA.VI.AF.Proposition.ENUMs.TypeSurprime,System.String,System.Int32)">
	<summary>
 Méthode qui affecte le taux de surprime à l'option
 </summary>
	<param name="typeSurprime"></param>
	<param name="idIndividu"></param>
	<param name="taux"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.InitialiserSurprimeCommissionnable(IAFG.IA.VI.AF.Proposition.Surprime)">
	<summary>
 Initialise le champs Surprime.Commissionable de la surprime spécifiée
 </summary>
	<param name="surp"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.DialogueSurprimes_Load(System.Object,System.EventArgs)">
	<summary>
 Évènement load de la form. Ne fait que appeler l'init des valeurs.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.DialogueSurprimes_FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
	<summary>
 Vérifie s'il y a eu des modifications au surprime et retourne ok ou cancel selon le cas.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.DataWindowPrincipale_ItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Gère le changement de valeur d'un champ.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Gère le click pour le bouton quitter.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.DataWindowPrincipale_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Permet d'afficher le texte en rouge pour les liens d'aide lorsque l'on palce la souris dessus.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.DataWindowPrincipale_PostItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Gère les données lorsque le changement est approuvé.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.DataWindowPrincipale_ItemError(System.Object,Sybase.DataWindow.ItemErrorEventArgs)">
	<summary>
 Gestion des erreurs.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.BoutonEffacer_Click(System.Object,System.EventArgs)">
	<summary>
 Efface toutes les surprimes pour cette protection.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF.ButtonOk_Click_1(System.Object,System.EventArgs)">
	<summary>
 Valide s'il y a des sruprimes avec un RA ou avec un assure invalide et affiche le message en conséquence.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueSurprimesPDF">
	<summary>
 Dialogue qui permet d'ajouter des surprimes à une protection.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InitialiserFromObjet(IAFG.IA.VI.AF.Illustration.Illustration)">
	<summary>
 On n'affiche pas cette méthode car elle est utilisable seulement par l'outil de test moteur pour EVIA
 </summary>
	<param name="objet"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirObjetIllustration">
	<summary>
 Fonction qui retourne l'objet d'illustration en cours
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirIdScenarioCourant">
	<summary>
 Fonction qui retourne l'ID du scénario courant
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirIdProposition">
	<summary>
 Fonction qui retourne l'ID de l'objet de proposition courant
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirNumeroScenarioCourant">
	<summary>
 Fonction qui retourne le numéro de scénario courant
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.Assure(System.String,System.Int32)">
	<summary>
 Permet d'effectuer les actions sur les assurés
 </summary>
	<param name="action">Code d'action</param>
	<param name="numeroAssure">Numéro ordinal de l'assuré</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le code d'action n'est pas valide</returns>
	<remarks>Est overridé dans EVIA</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirListeNoAssure">
	<summary>
 Fonction permettant d'obtenir la liste de tous les numéros d'assurés qui sont sur le contrat et non supprimé.
 </summary>
	<returns>Liste des numéros d'assurés.</returns>
	<remarks>Est Overriddé dans EVIA</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirProchainNoAssureDiponible">
	<summary>
 Nous donne le prochain numéro d'assuré qui est disponible pour ajout.
 </summary>
	<returns>Le prochain numéro d'assuré pour ajouter.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.DeleteAssureConjoint(System.String)">
	<summary>
 Permet de supprimer un assuré conjoint (1b à 1e)
 </summary>
	<param name="idIndividu">Id de l'individu</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le code d'action n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.AssureListe(System.Int32,System.String[]@,System.Int32@)">
	<summary>
 Permet d'aller chercher les ID des assurés pour un ordinal
 </summary>
	<param name="numeroAssure">Numéro ordinal de l'assuré</param>
	<param name="idAssures">Id des individus</param>
	<param name="nbrAssures">Nombre d'individus pour cet assuré ordinal</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ComparaisonGetTab(System.String,System.Decimal[]@,System.Int32@)">
	<summary>
 Permet d'aller chercher un vecteur de valeurs de la classe Comparaison
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">Vecteur de données</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ComparaisonGet(System.String,System.Int32@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Comparaison - Integer
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
	-1 - Une erreur s'est produite durant le traitement
	-2 - Le dataname n'est pas valide
	-3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ComparaisonGet(System.String,System.Double@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Comparaison - Decimal
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
	-1 - Une erreur s'est produite durant le traitement
	-2 - Le dataname n'est pas valide
	-3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ComparaisonGet(System.String,System.Boolean@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Comparaison - Boolean
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
	-1 - Une erreur s'est produite durant le traitement
	-2 - Le dataname n'est pas valide
	-3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ComparaisonSet(System.String,System.Int32)">
	<summary>
 Permet d'initialiser un champ sur les Comparaisons - Integer
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
	-1 - Une erreur s'est produite durant le traitement
	-2 - Le dataname n'est pas valide
	-3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ComparaisonSet(System.String,System.Double)">
	<summary>
 Permet d'initialiser un champ sur les Comparaisons - Decimal
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
	-1 - Une erreur s'est produite durant le traitement
	-2 - Le dataname n'est pas valide
	-3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ComparaisonSetTab(System.String,System.Decimal[],System.Int32)">
	<summary>
 Permet d'initialiser un vecteur de champs sur les Comparaisons
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">Vecteur de données</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.Comparaison(System.String)">
	<summary>
 Permet d'effecteur une action sur les comparaisons
 </summary>
	<param name="action"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.CptSet(System.String,System.Int32)">
	<summary>
 Permet d'initialiser une valeur de la classe Concept
 </summary>
	<param name="nomPropriete">Le nom du champ à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns> 1 - L'action s'est effectuée avec succès
			 -1 - Une erreur s'est produite durant le traitement
			 -2 - Le dataname n'est pas valide
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.CptGet(System.String,System.Int32@)">
	<summary>
 Permet d'obtenir une valeur de la classe Concept.
 </summary>
	<param name="nomPropriete">Le nom du champ dont on veut obtenir la valeur</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1: L'action s'est effectuée avec succès
 		-1: Une erreur s'est produite durant le traitement
			-2: Le dataname n'est pas valide
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.Contractants(System.String,System.String)">
	<summary>
 Permet d'effectuer les actions sur les contractants
 </summary>
	<param name="action">Code d'action</param>
	<param name="idContractants">Numéro ordinal du contractant</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le code d'action n'est pas valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ContractantsSet(System.String[],System.Int32)">
	<summary>
 Permet d'initialiser les contractants d'une illustration
 </summary>
	<param name="idContractants">Id des contractants</param>
	<param name="nbrContractants">Nombre de contractants pour cette illustration</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le nombre de contractants existants + ceux ajoutés est trop gros
 -3 Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ContractantsGet(System.String[]@,System.Int32@)">
	<summary>
 Permet d'aller chercher les ID des contractants d'une illustration
 </summary>
	<param name="idContractants">Id des contractants</param>
	<param name="nbrContractants">Nombre de contractants pour cette illustration</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InitValeursContractants(System.String)">
	<summary>
 Permet d'initialiser les valeurs par défaut des contractants
 </summary>
	<param name="IdContractant">le numéro d'identification du contractant</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.CreerBackUpDossier">
	<summary>
 Méthode pour créer un backup du dossier en cours
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RemplacerDossierBackUp">
	<summary>
 Méthode pour affecter le dossier courant au dossier pris en backup par CreerBackUpDossier
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.SauvegardeDossier(System.String)">
	<summary>
 Permet d'effectuer la sauvegarde du dossier XML du fichier donc le nom physique est passé en paramêtre.
 Également, fait le traitement nécessaire pour établir le liens entre les clients importés du
 Fichier Clients et le dossier en question.
 </summary>
	<param name="dossierPhysique">Chemin d'accès du fichier physique du dossier à sauvegarder</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.GenererNomDossier">
	<summary>
 Permet de générer le nom du dossier à utiliser.
 </summary>
	<returns>retourne le nom du dossier généré</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ChargerDossier(System.String)">
	<summary>
 Permet de charger dans l'application les informations contenue dans le fichier passé en paramètre.
 </summary>
	<param name="nomFichierPhysique">Chemin d'accès du fichier physique du dossier à charger</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.Nouveau(System.Boolean)">
	<summary>
 Effectue les traitements nécessaire pour faire la réinitialisation
 de l'application afin de débuter un nouveau dossier. On
 ne met pas ce code dans NouveauDossier car on ne veut pas
 réinitialiser le gestionnaire de dossier au complet.
 </summary>
	<param name="ouvertureGenesis">Flag qui indique si on ouvre Genesis</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.LeverException">
	<summary>
 Méthode pour lever les exceptions du dossier
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.Individu(System.String,System.String@)">
	<summary>
 Permet d'effectuer les actions sur les individus
 </summary>
	<param name="action">Code d'action</param>
	<param name="idIndividu">Numéro d'identification de l'individu</param>
	<returns>1 - L'action s'est effectuée avec succès
	-1 - Une erreur s'est produite durant le traitement
-2 - Le code d'action n'est pas valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InfopuSet(System.String,System.Double)">
	<summary>
 Permet d'initialiser un champ sur les InfoPU (dans IloIllust ou dans propo.dll) - Double
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InfopuSet(System.String,System.DateTime)">
	<summary>
 Permet d'initialiser un champ sur les InfoPU (dans IloIllust ou dans propo.dll) - date
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InfopuSet(System.String,System.Int32)">
	<summary>
 Permet d'initialiser un champ sur les InfoPU (dans IloIllust ou dans propo.dll) - Integer
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InfopuGet(System.String,System.Double@)">
	<summary>
 Permet d'aller chercher une valeur de la classe InfosPU - Double
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InfopuGet(System.String,System.DateTime@)">
	<summary>
 Permet d'aller chercher une valeur de la classe InfosPU - Date
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InfopuGet(System.String,System.Int32@)">
	<summary>
 Permet d'aller chercher une valeur de la classe InfosPU - Integer
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InformationBaseSet(System.String,System.DateTime)">
	<summary>
 Permet d'aller initialiser une valeur des informations de base - Date
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">donnée</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InformationBaseSet(System.String,System.Int32)">
	<summary>
 Permet d'aller initialiser une valeur des informations de base - Integer
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">donnée</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InformationBaseSet(System.String,System.String)">
	<summary>
 Permet d'aller initialiser une valeur des informations de base - String
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">donnée</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InformationBaseSet(System.String,System.Boolean)">
	<summary>
 Permet d'aller initialiser une valeur des informations de base - String
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">donnée</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InformationBaseGet(System.String,System.DateTime@)">
	<summary>
 Permet d'aller chercher une valeur des informations de base - date
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">donnée</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InformationBaseGet(System.String,System.Int32@)">
	<summary>
 Permet d'aller chercher une valeur des informations de base - Integer
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">donnée</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InformationBaseGet(System.String,System.String@)">
	<summary>
 Permet d'aller chercher une valeur des informations de base - String
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">donnée</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InformationBaseGet(System.String,System.Boolean@)">
	<summary>
 Permet d'aller chercher une valeur des informations de base - boolean
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">donnée</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PrimesGet(System.String,System.Int32@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Primes - Integer
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PrimesGet(System.String,System.Boolean@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Primes - Boolean
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PrimesGet(System.String,System.Decimal@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Primes - Decimal
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PrimesGetTab(System.String,System.Decimal[]@,System.Int32@)">
	<summary>
 Permet d'aller chercher un vecteur de valeurs de la classe Primes - Decimal
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">Vecteur de données</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PrimesGetTab(System.String,System.Int32[]@,System.Int32@)">
	<summary>
 Permet d'aller chercher un vecteur de valeurs de la classe Primes - Integer
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">Vecteur de données</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PrimesSetTab(System.String,System.Decimal[],System.Int32)">
	<summary>
 Permet d'initialiser un vecteur de champs sur les Primes - Decimal
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">Vecteur de données</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PrimesSetTab(System.String,System.Int32[],System.Int32)">
	<summary>
 Permet d'initialiser un vecteur de champs sur les Primes - Integer
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">Vecteur de données</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PrimesSet(System.String,System.Int32)">
	<summary>
 Permet d'initialiser un champ sur les Primes - Integer
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PrimesSet(System.String,System.Decimal)">
	<summary>
 Permet d'initialiser un champ sur les Primes - Decimal
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PrimesSet(System.String,System.Boolean)">
	<summary>
 Permet d'initialiser un champ sur les Primes - Boolean
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ProfilReset(System.String)">
	<summary>
 Permet de vérifier si l'indidu possède un profil investiseur et de mettre celui-ci à jour.
 </summary>
	<param name="idIndividu">Le id de l'individu dont on veut effacer le profil</param>
	<returns>1: L'action s'est effectuée avec succès
	-1: Une erreur s'est produite durant le traitement</returns>
	<remarks>Coder dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ProfilGet(System.String,System.String,System.String@)">
	<summary>
 Permet d'obtenir une valeur de la classe ProfilInvestisseur
 </summary>
	<param name="idIndividu">Le id de l'individu qui possède ce profil</param>
	<param name="nomPropriete">Le nom du champ dont on veut obtenir la valeur</param>
	<param name="valeurPropriete">La donnée à obtenir</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks>Coder dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ProfilGet(System.String,System.String,System.Int32@)">
	<summary>
 Permet d'obtenir une valeur de la classe ProfilInvestisseur
 </summary>
	<param name="idIndividu">Le id de l'individu qui possède ce profil</param>
	<param name="nomPropriete">Le nom du champ dont on veut obtenir la valeur</param>
	<param name="valeurPropriete">La donnée à obtenir</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks>Coder dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ProfilSet(System.String,System.String,System.String)">
	<summary>
 Permet d'initialiser une valeur de la classe ProfilInvestisseur
 </summary>
	<param name="idIndividu">Le id de l'individu qui possède ce profil</param>
	<param name="nomPropriete">Le nom de la donnée à setter</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1: L'action s'est effectuée avec succès
 -1: Une erreur s'est produite durant le traitement
	-2: Le dataname n'est pas valide
	-3: Autre</returns>
	<remarks>Coder dans les decendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PropoInfoGeneraleSet(System.String,System.Int32)">
	<summary>
 Permet d'initialiser un champ de la classe PropoInfoGenerale - Integer
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PropoInfoGeneraleSet(System.String,System.String)">
	<summary>
 Permet d'initialiser un champ de la classe PropoInfoGenerale - String
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PropoInfoGeneraleGet(System.String,System.Int32@)">
	<summary>
 Permet d'aller chercher une valeur de la classe PropoInfoGenerale - Integer
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.PropoInfoGeneraleGet(System.String,System.String@)">
	<summary>
 Permet d'aller chercher une valeur de la classe PropoInfoGenerale - string
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.AjouterProtection(System.Int32,System.String)">
	<summary>
 Fonction qui ajoute une protection dans l'objet de proposition
 </summary>
	<param name="numeroAssure">Le numéro d'assuré ordinal de la protection</param>
	<param name="plan">Le plan de la protection</param>
	<returns>La nouvelle protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.Protection(System.String,System.String@,System.Int32)">
	<summary>
 Permet d'effectuer les actions sur les protections
 </summary>
	<param name="action">Code d'action</param>
	<param name="idProtection">Numéro d'identification de la protection</param>
	<param name="numeroAssure">Numéro de l'assuré pour le count et le add</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le code d'action n'est pas valide
 -3 - Le Id n'est pas valide
 -4 - La protection de base n'est pas une protection valide pour contenir une option</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RemoveProtectionsAssure(System.String)">
	<summary>
 Permet de supprimer toutes les protections, ou d'enlever l'individu sur les protections conjointes
 </summary>
	<param name="idIndividu">Le numéro d'id de l'individu</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RapportGet(System.String,System.String@)">
	<summary>
 Permet d'obtenir une valeur de la classe Rapport - string
 </summary>
	<param name="nomPropriete">Le nom du champ dont on veut obtenir la valeur</param>
	<param name="valeurPropriete">La donnée à obtenir</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RapportGet(System.String,System.Int32@)">
	<summary>
 Permet d'obtenir une valeur de la classe Rapport - Integer
 </summary>
	<param name="nomPropriete">Le nom du champ dont on veut obtenir la valeur</param>
	<param name="valeurPropriete">La donnée à obtenir</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RapportSet(System.String,System.String)">
	<summary>
 Permet d'aller setter une valeur de la classe Rapport
 </summary>
	<param name="nomPropriete">Le nom de la donnée à setter</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RapportGetTab(System.String,System.String[]@,System.Int32@)">
	<summary>
 Permet d'obtenir un tableau de valeurs de la classe Rapport
 </summary>
	<param name="nomPropriete">Le nom du champ dont on veut obtenir la valeur</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RapportSetTab(System.String,System.String[],System.Int32)">
	<summary>
 Permet d'aller setter un vecteur de valeurs de la classe Rapport
 </summary>
	<param name="nomPropriete">Le nom de la donnée à setter</param>
	<param name="valeurPropriete">Le vecteur de données à setter</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RapportGetToutesSections(System.String,System.String@)">
	<summary>
 Permet d'obtenir une valeur de type toutes les sections de la classe Rapport
 </summary>
	<param name="nomPropriete">Le nom du champ dont on veut obtenir la valeur</param>
	<param name="valeurPropriete">La donnée à obtenir</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RapportSetToutesSections(System.String,System.String)">
	<summary>
 Permet de setter une valeur de type toutes les sections de la classe Rapport
 </summary>
	<param name="nomPropriete">Le nom du champ dont on veut setter la valeur</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RapportAuMoinsUn(System.String,System.Boolean@)">
	<summary>
 Permet de savoir si au moins un champs de ce rapport est coché.
 </summary>
	<param name="nomPropriete">Le type de rapport</param>
	<param name="auMoinsUn">Indique si au moins un champ de ce rapport est coché</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TabPersoEstInitialise">
	<summary>
 Vérifier si l'on a rempli le tableau des tableaux personnalisés
 </summary>
	<returns>Booléen indiquant s'il y a des éléments dans le tableau</returns>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.GraPersoEstInitialise">
	<summary>
 Vérifier si l'on a rempli le tableau des graphiques personnalisés
 </summary>
	<returns>Booléen indiquant s'il y a des éléments dans le tableau</returns>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RapportSetImpScenario(System.String)">
	<summary>
 Permet d'initialiser un champ sur les Retraits
 </summary>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.RapportGetImpScenario(System.String@)">
	<summary>
 Permet d'aller chercher la valeur de imp_scenario dans classe rapport
 </summary>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.CreerScenario(System.Int32)">
	<summary>
 Permet de faire le traitement nécessaire à la création d'un nouveau scénario.
 </summary>
	<param name="scenario">numéro du scenario à créer</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ChangerScenario(System.Int32)">
	<summary>
 Permet de faire le traitement nécessaire au changement de scénario.
 </summary>
	<param name="scenario">numéro du scénario sur lequel nous devons être positionné</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.DetruireScenario(System.Int32)">
	<summary>
 Permet de faire le traitement nécessaire à la destruction d'un scénario existant.
 </summary>
	<param name="scenario">numéro du scenario à détruire</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ScenarioGet(System.String,System.Int32@)">
	<summary>
 Permet d'aller chercher une valeur du Scenario courant - Integer
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ScenarioGet(System.String,System.String@)">
	<summary>
 Permet d'aller chercher une valeur du Scenario courant - String
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ScenarioGet(System.String,System.Boolean@)">
	<summary>
 Permet d'aller chercher une valeur du Scenario courant - boolean
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ScenarioSet(System.String,System.Int32)">
	<summary>
 Permet d'initialiser un champ sur le scénario courant - Integer
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ScenarioSet(System.String,System.String)">
	<summary>
 Permet d'initialiser un champ sur le scénario courant - String
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ScenarioSet(System.String,System.Boolean)">
	<summary>
 Permet d'initialiser un champ sur le scénario courant - Boolean
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ScenarioCourantGet">
	<summary>
 Fonction qui retourne le numéro de scénario courant
 </summary>
	<returns>Retourne le numéro de scénario courant</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ScenarioExist(System.Boolean[]@)">
	<summary>
 Permet d'indiquer les scénarios existants.
 </summary>
	<param name="scenario"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.InitialiserScenario">
	<summary>
 Permet d'initialiser un sécnario
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ScenarioXExist(System.Int32)">
	<summary>
 Permet d'indiquer si un scénario précis existe ou non
 </summary>
	<param name="numeroScenario">Indique le numéro du scénario dont on veut savoir s'il existe ou non</param>
	<returns>indique si ce scénario existe ou non</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ChangementAge(System.Int32,System.Int32)">
	<summary>
 Permet d'effectuer toutes les modifications nécessaires lors du changement d'âge de l'assuré 1
 </summary>
	<param name="ancienAge">L'ancien âge de l'individu</param>
	<param name="nouvelAge">Le nouvel âge de l'individu</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.Tai(System.String,System.Int32,System.String,System.String)">
	<summary>
 Permet d'effectuer les actions sur les placements
 </summary>
	<param name="action">Code d'action pour les placements</param>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs pour l'action 'Count'</param>
	<param name="typeFonds">Le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le code d'action n'est pas valide
 -3 - Le dataname n'est pas valide
 X - Le nombre d'item pour un 'Count'</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiGet(System.Int32,System.String,System.String@,System.String)">
	<summary>
 Permet d'aller chercher une valeur de la classe placements - string
 </summary>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<param name="typeFonds">le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiGet(System.Int32,System.String,System.Double@,System.String)">
	<summary>
 Permet d'aller chercher une valeur de la classe placements - Double
 </summary>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<param name="typeFonds">le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiGet(System.Int32,System.String,System.Int32@,System.String)">
	<summary>
 Permet d'aller chercher une valeur de la classe placements - integer
 </summary>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<param name="typeFonds">le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiGet(System.Int32,System.String,System.Decimal@,System.String)">
	<summary>
 Permet d'aller chercher une valeur de la classe placements - Decimal
 </summary>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<param name="typeFonds">le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiGet(System.Int32,System.String,System.Boolean@,System.String)">
	<summary>
 Permet d'aller chercher une valeur de la classe placements - Boolean
 </summary>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<param name="typeFonds">le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiSet(System.Int32,System.String,System.Int32,System.String)">
	<summary>
 Permet d'initialiser un champ sur les placements - Integer
 </summary>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<param name="typeFonds">Le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiSet(System.Int32,System.String,System.Double,System.String)">
	<summary>
 Permet d'initialiser un champ sur les placements - Decimal
 </summary>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<param name="typeFonds">Le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiSet(System.Int32,System.String,System.String,System.String)">
	<summary>
 Permet d'initialiser un champ sur les placements - String
 </summary>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<param name="typeFonds">Le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiSet(System.Int32,System.String,System.Boolean,System.String)">
	<summary>
 Permet d'initialiser un champ sur les placements - Boolean
 </summary>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<param name="typeFonds">Le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiSetTab(System.Int32,System.String,System.Decimal[],System.Int32,System.String)">
	<summary>
 Permet d'initialiser les champs sur les placements
 </summary>
	<param name="numeroItem">Numéro(Row) du TAI</param>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">Vecteur de données</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<param name="typeFonds">Le type de fonds</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaiGetTab(System.Int32,System.String,System.Decimal[]@,System.Int32@,System.String)">
	<summary>
 Permet d'aller chercher une valeur de la classe placements
 </summary>
	<param name="numeroItem"></param>
	<param name="nomPropriete"></param>
	<param name="valeurPropriete"></param>
	<param name="nbrElement"></param>
	<param name="typeFonds"></param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le noitem n'est pas valide
 -3 - Le dataname n'est pas valide
 -4 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaxationSetTab(System.String,System.Decimal[],System.Int32)">
	<summary>
 Permet d'initialiser un champ sur la taxation
 </summary>
	<param name="nomPropriete">Nom du champs à initialiser</param>
	<param name="valeurPropriete">Vecteur de données</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaxationGetTab(System.String,System.Decimal[]@,System.Int32@)">
	<summary>
 Permet d'aller chercher un vecteur de valeurs sur la taxation
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">Vecteur de données</param>
	<param name="nbrElement">Nombre d'items dans le vecteur</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaxationSet(System.String,System.Decimal)">
	<summary>
 Permet d'aller setter une valeur de la classe Taxation
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à setter</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaxationGet(System.String,System.Boolean@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Taxation - String
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirProtectionBase">
	<summary>
 Obtient la protection de base de la proposition en cours
 </summary>
	<returns>Un <see cref="T:IAFG.IA.VI.AF.Proposition.Protection">Protection</see> contenant les informations de la protection de base ou Nothing si la proposition ne contient pas de protection.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirProtectionBase(IAFG.IA.VI.AF.Proposition.Proposition)">
	<summary>
 Obtient la protection de base de la proposition en cours
 </summary>
	<returns>Un <see cref="T:IAFG.IA.VI.AF.Proposition.Protection">Protection</see> contenant les informations de la protection de base ou Nothing si la proposition ne contient pas de protection.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirPremierElementVecteur(IAFG.IA.VI.AF.ObjetsPartages.Vecteur{System.Decimal})">
	<summary>
 Fonction qui retourne le premier
 </summary>
	<param name="vecteur"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.TaxationGet(System.String,System.Decimal@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Taxation - Decimal
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.DocumentGet(System.String,System.String,System.String@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Document - String
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.DocumentGet(System.String,System.String,System.Boolean@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Document - Boolean
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.DocumentGet(System.String,System.String,System.Int32@)">
	<summary>
 Permet d'aller chercher une valeur de la classe Document - Boolean
 </summary>
	<param name="nomPropriete">Nom du champs</param>
	<param name="valeurPropriete">La donnée à retourner</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le dataname n'est pas valide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.DocumentListe">
	<summary>
 Permet d'obtenir la lsite de tous les documents sur notre cas
 </summary>
	<returns>Les ID de tous les documents sur notre cas</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.Document(System.String,System.String)">
	<summary>
 Permet d'effectuer les actions sur les documents
 </summary>
	<param name="action">Action à effectuer sur le document</param>
	<param name="idDocument">Id du document</param>
	<returns>1 - L'action s'est effectuée avec succès
				 -1 - Une erreur s'est produite durant le traitement
				 -2 - Le code d'action n'est pas valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirObjetProposition">
	<summary>
 Permet de retourner l'objet de proposition du scénario en cours.
 </summary>
	<returns>L'objet de proposition du scénario en cours.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.GestionDossierBase.ObtenirObjetScenarioCourant">
	<summary>
 Permet d'obtenir l'objet Scenario du scénario courant
 </summary>
	<returns>l'objet Scenario du scénario courant</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni.PctBoni">
	<summary>
 Propriété Get ou Set de la valeur PctBoni 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni.TypeId">
	<summary>
 Propriété Get ou Set de la valeur TypeID du boni
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni.ChargerBoni(System.String)">
	<summary>
 Méthode qui charge les informations sur les bonis
 </summary>
	<param name="filePath">Chemin du fichier boni</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni.ObtenirTypeCommission">
	<summary>
 Méthode qui obtient le type le pourcentage d'un boni
 </summary>
	<returns>
 Retourne le pourcentage d'un boni.
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni.ObtenirTypeCommission(System.Boolean)">
	<summary>
 Méthode qui obtient le type le pourcentage d'un boni
 </summary>
	<returns>
 Retourne le pourcentage d'un boni.
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni.EcrireInfo(System.String)">
	<summary>
 Méthode qui permet de sauvegarder un boni. 
 </summary>
	<param name="filePath">Chemin du fichier boni</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni.ObtenirPctBoni">
	<summary>
 Méthode qui obtient le pct d'un boni
 </summary>
	<returns>
 Retourne le pourcentage d'un boni
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni.ObtenirPctBoniDefaut">
	<summary>
 Méthode qui obtient le pct d'un boni par défaut
 </summary>
	<returns>
 Retourne le pourcentage d'un boni par défaut
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni.EcrireTypeCommission(System.String)">
	<summary>
 Écrire le type de commission
 </summary>
	<param name="typeCommission">Le type de commission</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni.EcrirePctBoni(System.String)">
	<summary>
 Méthode qui écrit le pct d'un boni
 </summary>
	<param name="pctBoni"> le pourcentage du boni</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Services.GestionBoni">
	<summary>
 Objet de gestion des bonis - Couche "affaire"
 </summary>
	<remarks></remarks>
	<history>
		<pre>
 Auteur             Date         Description
 =====================================================================
 Martel,  Guy       2007-05-23   Programmation initiale 
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.ShowSousFormulaires(IAFG.IA.VI.AP.Commun.Services.GestionFormulaires.InfoFormulaire)">
	<summary>
 Méthode qui affiche un sous-formulaire d'un formulaire onglet
 </summary>
	<param name="Formulaire"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.ReinitForm(System.String)">
	<summary>
 Méthode qui réinitialiser un formulaire selon l'id passé en paramètre
 </summary>
	<param name="formId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.InsertNextTab(System.Int32)">
	<summary>
 Méthode qui ajoute le prochain onglet
 </summary>
	<param name="index"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.DeleteTab(System.Int32)">
	<summary>
 Méthode qui supprime le sous-formulaire correspondant à l'index passé en paramètre
 </summary>
	<param name="index"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.ShowTab(System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Méthode qui affiche un sous-formulaire (selon l'index) et le valide (selon le paramètre validate)
 </summary>
	<param name="formIndex"></param>
	<param name="validate"></param>
	<param name="visible"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.ShowTab(System.String,System.Boolean,System.Boolean)">
	<summary>
 Méthode qui affiche un sous-formulaire (selon l'id) et le valide (selon le paramètre validate)
 </summary>
	<param name="validate"></param>
	<param name="visible"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.SetCurrentFormReloadFlag(System.Boolean)">
	<summary>
 Permet de modifier le statut de l'indicateur de rechargement des données de tous les formulaires.
 </summary>
	<param name="reload"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.SetCoverageReloadFlag(System.Boolean)">
	<summary>
 Permet de modifier le statut de l'indicateur de rechargement des couvertures pour les formulaires assurés.
 </summary>
	<param name="reload"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.SetCoverageReloadFlag(System.Int32,System.Boolean)">
	<summary>
 Permet de modifier le statut de l'indicateur de rechargement des couvertures d'un formulaire.
 </summary>
	<param name="noAssure">Numero de l'assure</param>
	<param name="reload ">Si vrai, les données seront rechargées au prochain affichage</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.SetPremiumReloadFlag(System.Boolean)">
	<summary>
 Permet de modifier le statut de l'indicateur de rechargement des primes pour les formulaires assurés.
 </summary>
	<param name="reload"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.SetPremiumReloadFlag(System.Int32,System.Boolean)">
	<summary>
 Permet de modifier le statut de l'indicateur de rechargement des primes d'un formulaire.
 </summary>
	<param name="noAssure">Numero de l'assure</param>
	<param name="reload ">Si vrai, les données seront rechargées au prochain affichage</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.SetInsuredReloadFlag(System.Boolean)">
	<summary>
 Permet de modifier le statut de l'indicateur de rechargement des assures pour les formulaires assurés.
 </summary>
	<param name="reload"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.SetInsuredReloadFlag(System.Int32,System.Boolean)">
	<summary>
 Permet de modifier le statut de l'indicateur de rechargement des assures d'un formulaire.
 </summary>
	<param name="noAssure">Numero de l'assure</param>
	<param name="reload ">Si vrai, les données seront rechargées au prochain affichage</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.ButtonPresentation(System.Object)">
	<summary>
 Méthode qui ouvre la console à la section tab_1_4
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormulaires.Detectchange">
	<summary>
 Permet de determiner si l'usager à modifié les données de
                l'ensemble des formulaires couramment instanciés
 </summary>
	<returns>Vrai si un des formulaires a été modifié</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionTableaux.CreerChaineRecherche(System.String,System.Boolean)">
	<summary>
 Fonction qui retourne la chaine de recherche pour l'affichage de la sélection des tableaux
 </summary>
	<param name="conceptTableau">le no du concept</param>
	<param name="conceptActif">si on filtre par rapport au concept ou non</param>
	<returns>la chaine pour faire la recherche dans le xml</returns>
	<remarks>Overridable car on a besoin des objets de propo pour savoir le contractant dans illusvie</remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Services.GestionTableaux">
	<summary>
 Objet de gestion des tableaux - Couche "affaire"
 </summary>
	<remarks></remarks>
	<history>
		<pre>
 Auteur             Date         Description
 =====================================================================
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.ChargementBoni.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.ChargementBoni.#ctor(System.String)">
	<summary>
 Constructeur de la classe
 </summary>
	<param name="schema">Schéma XML</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Donnees.ChargementBoni">
	<summary>
 Objet de chargement des tableaux - Couche "donneés"
 </summary>
	<remarks></remarks>
	<history>
		<pre>
 Auteur             Date         Description
 =====================================================================
 Martel,  Guy       2007-05-27   Programmation initiale 
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionEsperanceVie.ChargerEsperanceVie(System.String)">
	<summary>
 Méthode qui charge les informations sur les bonis
 </summary>
	<param name="fichierEspVie">Chemin du fichier boni</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionEsperanceVie.ObtenirEsperanceVie(System.Int32,System.String,System.String)">
	<summary>
 Fonction qui obtient l'esperance de vie pour l'âge, le sexe et le staut de tabagisme qui est passé 
 en paramètre
 </summary>
	<param name="age">L'âge pour lequel nous devons obtenir l'espérance de vie</param>
	<param name="sexe">Le sexe pour lequel nous devons obtenir l'espérance de vie</param>
	<param name="statut">Le statut pour lequel nous devons obtenir l'espérance de vie</param>
	<returns>-1 = Incapable d'obtenir l'espérance de vie sinon, retourne l'espérance de vie (en années)</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Services.GestionEsperanceVie">
	<summary>
 Classe qui fait la gestion du chargement du tableau de l'espérance de vie
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireImpot.ValiderValeur(System.String,System.Double,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type décimale
 passé en paramêtre pour un item donc l'identifiant est
 également passé en paramêtre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la 
 valeur décimale</param>
	<param name="valeurItem">La valeur décimale qui doit être valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireImpot.ValiderValeur(System.String,System.Decimal,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type décimale
 passé en paramêtre pour un item donc l'identifiant est
 également passé en paramêtre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la 
 valeur décimale</param>
	<param name="valeurItem">La valeur décimale qui doit être valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireImpot">
	<summary>
 Classe gérant les règles d'affaire pour l'impôt
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialoguePersonnaliserTableaux.#ctor(System.String,System.String,System.String)">
	<summary>
 Constructeur de la classe
 </summary>
	<param name="tableauId">Id du graphique</param>
	<param name="concept">Concept</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialoguePersonnaliserTableaux.CreerFiltre(System.String,System.String)">
	<summary>
 Function qui crée le filtre pour l'affichage des colonnes cachées ou affichées
 </summary>
	<param name="scenario">scenario à utiliser pour le filtre</param>
	<param name="type">nom de la datawindow où on fait le filtre</param>
	<returns>Le filtre à appliquer sur la datawindow</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialoguePersonnaliserTableaux.SupprimerTableauDossier(System.String)">
	<summary>
 efface du gestionnaire de dossier le tableau personnalisé qui vient d'être effacé
 </summary>
	<param name="idtableau">l'id du tableau qui est effacé</param>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.NbrMaxLignes">
	<summary>
 Propriété qui retourne le nombre maximum de lignes
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.ListeDejaSelectionnee">
	<summary>
 Propriété du type dictionnaire qui contient une liste d'id de ceux qui sont déjà sélectionnées
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.IdIndividu">
	<summary>
 Propriété qui contient l'id de l'individu pour qui est le comparatif
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.IdProtection">
	<summary>
 L'id de la protection pour laquelle le dialogue a été affiché
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.IdProtectionPremiere">
	<summary>
 Propriété qui contient l'id de la protection de base de l'individu
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.TypeRecherche">
	<summary>
 Propriété qui contient le type de recherche
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.CodeSelection">
	<summary>
 ???
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.TypeInfoAdd">
	<summary>
 Contient une liste de la propriété TypeProtectionInfoAdd (PDF)
 </summary>
	<value></value>
	<returns></returns>
	<remarks>TODO - Voir si on peut détuire cette propriété maintenant que l'on utilise le PDF</remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.NumeroAssure">
	<summary>
 Propriété qui contient le numéro de l'assuré en cours
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.FrmAssure">
	<summary>
 Propriété qui retourne le formulaire Assure courant
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.LigneCliquee">
	<summary>
 Propriété qui indique sur quel ligne l'utilisateur a cliqué pour afficher le dialogue
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.AjusterMessageProtections">
	<summary>
 Méthode qui gère les disponibilités des protections
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.GererErreurDuDossier">
	<summary>
 Gère les erreurs du dossier
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.ChargerInfoAssure">
	<summary>
 Méthode pour remplir la datawindow contenant les informations de l'assuré
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.ChargerInfoRecherche">
	<summary>
 Méthode pour remplir la datawindow contenant les informations pour la recherche
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.TrierRequete(IAFG.IA.IL.AP.IllusVie.PDF.Requetes.PlansDisponiblesComparatif)">
	<summary>
 Méthode qui trie les extraits dans l'ordre désiré
 </summary>
	<param name="requete">la requete contenant les plan à trier</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.ChargerInfoProtections">
	<summary>
 Méthode pour remplir la datawindow contenant les informations sur les protections
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.VerifierInfoAddProtection(System.String)">
	<summary>
 Obtenir des informations supplémentaire sur le plan en paramêtre en rapport avec la comparaison.
 Disponibilité, annocation...
 </summary>
	<param name="plan"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.InfoAddProtection">
	<summary>
 Conteneur de l'information sur une protection
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.Calculer">
	<summary>
 Méthode pour lancer les calculs
 </summary>
	<remarks>Codé dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.InitialiserComparatif">
	<summary>
 Cette méthode initialise le traitement pour le moteur de calcul
 </summary>
	<remarks>Codé dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.AjusterPosition">
	<summary>
 Méthode qui fait la gestion des positions des objets de la fenêtre
 </summary>
	<remarks>Codé dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.AffecterProtectionDisponible(System.Boolean,System.Int32)">
	<summary>
 Méthode pour activer ou désactiver une rangée dans la section des protections.
 </summary>
	<param name="dispo">True = On active la rangée, False = On désactive la rangée</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.GererProduit(System.String)">
	<summary>
 Méthode qui fait la gestion des produits dans la fenêtre du comparatif
 </summary>
	<remarks>Codé dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.ObtenirHauteurProtections">
	<summary>
 Fonction pour obtenir la hauteur que doit avoir la datawindow2
 </summary>
	<returns>La hauteur que l'on doit affecter à la datawindow2</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.ObtenirHauteurFenetre">
	<summary>
 Fonction pour obtenir la hauteur du dialogue
 </summary>
	<returns>La hauteur que le dialogue doit avoir</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.ObtenirPrimeDepart">
	<summary>
 Fonction pour obtenir la prime de départ. Soit celle dans le champs de recherche.
 </summary>
	<returns>Le montant de la prime de la protection de départ</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.ObtenirRangeeSelectionnee">
	<summary>
 Fonction pour obtenir la rangee selectionne
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.DialogueComparatifBase_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur ferme le dialogue
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.DialogueComparatifBase_Load(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient lorsque le dialogue se charge
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.ButtonAnnuler_Click_1(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur clique sur le bouton Annuler
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.DataWindowPricipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur clique sur la DWPrincipale
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.DataWindow1_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur clique sur la DW1
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.DataWindow1_ItemError(System.Object,Sybase.DataWindow.ItemErrorEventArgs)">
	<summary>
 Évènement qui survient lorsqu'il y a un erreur dans les données entrés par l'utilisateur dans la DW1
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.DataWindow1_PostItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Évènement qui survient lorsque la donnée entré par l'utilisateur dans la DW1 a été validé dans l'ItemChanged
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.DataWindow2_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur appuie sur une touche et que le focus est sur la DW2
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueComparatifBase.DataWindow2_PostItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Évènement qui survient lorsque la donnée entré par l'utilisateur dans la DW2 a été validé dans l'ItemChanged
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="F:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase._paramDemarrage">
	<summary>
 Permet de garder en mémoire le type de démarrage demandé (Anciennement FromTemplate)
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.IsOuvertureFichier">
	<summary>
 Permet de vérifier si un fichier vient d'être chargé
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.FromTemplate">
	<summary>
 Permet de vérifier si le programme à été lancé avec un template
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.FromTempsArret">
	<summary>
 Permet de vérifier si le programme à été lancé par Temps d'Arrêt
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.EffectuerValidations">
	<summary>
 Propriété qui idnique si l'on doit faire les validations pour la Propo.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.PositionPropo">
	<summary>
 Retourne l'emplacement de la proposition electronique dans les menus.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.DossierActualiser">
	<summary>
 Dit si le dossier est est à actualiser ou non.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ResetTabDefault">
	<summary>
 Dit si oui ou non il faut resetter le tab par défaut.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.Save2nd">
	<summary>
 Indique si c'est un cas deja sauvegardé ou non.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.SavePropo">
	<summary>
 Indique si c'est un cas savé pour propo ou pas.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ChargementEnCours">
	<summary>
 Nous indique si le chargement est présentement en cours.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ReloadCas">
	<summary>
 Nous indique si le chargement est présentement en cours.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.BarreApplicative">
	<summary>
 Contient la barre applicative de l'application.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ExecuterInstructionsFermeture">
	<summary>
 Méthode qui exécute des instructions après avoir fermer l'application.
 Dans le cas de temps d'arrêt, on relâche les fichiers lck
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.RefreshMenu(System.Boolean)">
	<summary>
 Function qui gère les menus disponibles selon les conditions. Ici on gere l'affichage de licone de la propo quand on ouvre le cas
 en parametre
 </summary>
	<param name="reset">Si l'on vient de resetter le cas.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitialisePilotage">
	<summary>
 Charge les clés de registre d'illusvie dans le service de pilotage.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitialiseMessages">
	<summary>
 Charge le xml de message de illusvie dans le service des messages.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitialiseListesChoix">
	<summary>
 Charge le xml de liste de choix de illusvie dans le service des listes de choix.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitialiseAideContextuelle">
	<summary>
 Rien dans cette couche.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitialiseStyles">
	<summary>
 Charge le xml de style dans le gestionnaire de style.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitialiseResources">
	<summary>
 Charge le fichier de ressource.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitialiseBoni">
	<summary>
 Fait le traitement pour initialiser les bonis.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitialiseFormatsExcel">
	<summary>
 Fait le traitement pour initialiser les formats excel.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitialisePerfoPdf">
	<summary>
 Permettra de modifier la cache de certaines requetes du pdf par l'application.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.Initialise(IAFG.IA.VI.AP.Commun.CtrlIU.WindowsFormBase,IAFG.IA.VI.AP.Commun.CtrlIU.MenuPrincipalBase,System.String,System.String)">
	<summary>
 Fait tout le traitement nécessaire à l'initialisation de l'application.
 </summary>
	<param name="mainForm">Pointeur vers la form principale de l'application.</param>
	<param name="mainMenu">Pointeur vers le menu principal de l'application.</param>
	<param name="GestionFormulairesPath">Path vers le fichier xml des formulaires.</param>
	<param name="GestionMenuContextuelPath">Path vers le ficheir xml ds menus.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitialiseParamApplicatif(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
	<summary>
 Méthode qui est exécuter au tout début de l'exécution de l'application
 </summary>
	<param name="commandLineArgs">la ligne de commande passée en paramètre à App</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ValidationPropos">
	<summary>
 Fait les validations pour la proposition électronique.
 </summary>
	<returns>True si c'est valide, false sinon.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitDefautApplication">
	<summary>
 Initialise les informations par defaut de l'application lors de la premiere ouverture. 
 Doit être codé dans les descendants.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.Statistiques">
	<summary>
 Fonction servant à compiler les statistiques d'utilisation du logiciel. 
 Doit être codé dans les descendants.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GetConfigDefaut">
	<summary>
 Fonction nous retournans les clés de registre devant être transférées d'un version à l'autre de l'application. 
 A noter que en PB le "\" était inclus dans le nom des clés, ce ne doit plus être le cas en .NET.
 Doit être codé dans les descendants.
 </summary>
	<returns>Liste des clés devant être transférées.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.CopieCleConfigDefaut(System.String,System.String,System.Int32)">
	<summary>
 Valider si la clé doit être copier ou non pour les configues par défaut.
 À noter que en PB le "\" était inclus dans le nom des clés, ce n'est plus le cas en .NET.
 Doit être codé dans les descendants.
 </summary>
	<param name="branche">Le nom de la brache dans le regsitre</param>
	<param name="cle">Le nom de la clé dans le regsitre</param>
	<param name="produitVersion">Le no version de l'application courant</param>
	<returns>True si l'on doit copier la clé, false sinon.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GererMsgPresave">
	<summary>
 Fonction servant à faire une demande à l'utilisateur avant d'effectuer le save.
 Doit être codé dans les descendants.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.CreerGestionTableaux">
	<summary>
 Création de l'objet de gestionTableaux
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.IsPropoElectroniqueDisponible">
	<summary>
 Determiner si l'application proposition électronique est disponible
 </summary>
	<returns>Vrai si la propo est disponible, faux sinon</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ValidationsProposition">
	<summary>
 Cette fonction fait totues les validation nécessaires pour la proposition électronique.
 A noter, lorsque l'on ajoute une validation dans cette fonction, il faut aussi aller l'ajouter dans la fonction
 ToutesValidations de l'objet FormulaireProplec.
 </summary>
	<returns>True = les validation sont tous correct, False = les validations ont échouées.</returns>
	<remarks>A noter, lorsque l'on ajoute une validation dans cette fonction, il faut aussi aller l'ajouter dans la fonction
 ToutesValidations de l'objet FormulaireProplec</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.EnleverStatutsPropo">
	<summary>
 Cette fonction permet d'initialiser la propriété champs "ModifiableIllustration", pour chacun des individus.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GererChangementScenario(System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Méthode qui fait le traitement nécessaire lors d'un changement de scénario
 </summary>
	<param name="scenario">Le numéro du scénario vers lequel l'usager veut aller</param>
	<param name="validateCurrentScenario">Indique si l'on veut valider les données
 du scénario courant avant de procéder avec le changement de scénario
 </param>
	<remarks>Si le scénario, donc le numéro est passé en paramètre, n'existe pas 
 dans le dossier alors il est créer avant de s'y positionner.</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GererDestructionScenario">
	<summary>
 Méthode qui gère la destruction du scénario courant
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GererProvince(System.Boolean)">
	<summary>
 Initialise la province par défaut à utiliser selon les informations de l'intermédiaire.
 De plus gère les taux d'imposition par défaut à utiliser selon la province dans laquelle nous nous trouvons.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GetVersionPrecedante(System.String,System.String,System.Int32)">
	<summary>
 Fonction permettant d'obtenir le numéro de la version précédente
 </summary>
	<param name="regPath">Le path pour accéder au registre I.E.: "HKEY_CURRENT_USER\Software\IA Products\Illustrations\"</param>
	<param name="app">L'application I.E.: Genesis</param>
	<param name="version">le numéro de version courante</param>
	<returns>le numéro de version en format "99" ou erreur s'il n'y a pas de version précédante</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.CheckConfig(System.String,System.String,System.Int32)">
	<summary>
 La procédure vérifie l'existance de la clé de registre IsConfigCopied. Si elle
 n'existe pas, c'est que les valeurs par défaut ne sont pas encore copiées. Elles
 sont donc copiées de la version précédante du logiciel à la version courante.
 </summary>
	<param name="regPath">Le path des clés de registre I.E.: "HKEY_CURRENT_USER\Software\IA Products\Illustrations</param>
	<param name="app">Le nom de l'application</param>
	<param name="version">Le numéro de la version COURANTE</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GererCleTabGraphPerso">
	<summary>
 Ajoute les clés de registre pour les tableaux et graphiques
 personnalisés ajoutés par d'autres utilisateurs. Ces clés sont dans
 HKEY_CURRENT_USER\Software\(CIE) Products\Illustrations\(Application version)\Rapport_Perso
 Cette fonction efface également les clés pour les tab/gra persos
 dont le fichier .gra/.tab n'existe plus.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonAccueil(System.Object)">
	<summary>
 Affiche la page d'acceuil lorsque le bouton acceuil des menus est clicker.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonConfigPrint(System.Object)">
	<summary>
 Affichage de la fenetre des parametres par défaut de l'impression.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonPrint(System.Object)">
	<summary>
 Fait le traitement nécessaire pour imprimer lorsque le bouton d'impression est clicker.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonPreview(System.Object)">
	<summary>
 Fait le traitement nécessaire pour faire un aperçu lorsque le bouton apercu est clicker.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonPresentation(System.Object)">
	<summary>
 Ouvrir la console sur la section des présentations des produits.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonFormulaire(System.Object)">
	<summary>
 Ouvrir la console sur la section des formulaires.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonProdinfo(System.Object)">
	<summary>
 Lancer la console dans la section assurance et sous-section Information sur les produits
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonCentreDocumentation(System.Object)">
	<summary>
 Ouvrir le centre de documentation
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonExigences(System.Object)">
	<summary>
 Ouvre la fenêtre des exigences médicales.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonQ3(System.Object)">
	<summary>
 Afficher le Questionnaire d'admissibilité à la tarification préférentielle 
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonNouveau(System.Object,System.Boolean)">
	<summary>
 Fait le traitement nécessaire à la création d'un nouveau cas.
 </summary>
	<param name="sender"></param>
	<returns>True - le nouvau cas à été créé, false - il n'a pas été créé.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonNouveau(System.Object)">
	<summary>
 Fait le traitement nécessaire à la création d'un nouveau cas.
 </summary>
	<param name="sender"></param>
	<returns>True - le nouvau cas à été créé, false - il n'a pas été créé.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ButtonOuvrir(System.Object)">
	<summary>
 Fait le traitement pour l'ouverture d'un cas et affiche un message s'il y a des documents électroniques.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GererDateDispoPropo">
	<summary>
 Affiche le message nous disant quand la proposition électronique expire.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.SauvegarderFichier(System.Boolean)">
	<summary>
 Fait la sauvegarde d'un fichier sur le disque.</summary>
	<isnew>2008-05-06</isnew>
	<returns>True - La sauvegarde à été effectué, FALSE - la sauvegarde n'a pas eu lieu.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.SauvegarderFichier">
	<summary>
 Fait la sauvegarde d'un fichier sur le disque.</summary>
	<isnew>2008-05-06</isnew>
	<returns>True - La sauvegarde à été effectué, FALSE - la sauvegarde n'a pas eu lieu.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.SauvegarderFichierSous">
	<summary>
 Fait la sauvegarde d'un cas en utilisant le dialogue sauvegarde sous.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.OuvrirFichier">
	<summary>
 Traitement nécessaire à l'ouverture d'un cas.
 </summary>
	<returns>True - Le fichier à été ouvert, False - Le fichier n'a pas été ouvert</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ModifierXMLTemplate(System.String)">
	<summary>
 Fonction pour nettoyer les templates de toutes propriétés nuisibles
 </summary>
	<param name="XMLTemplate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.DetectChange(System.String)">
	<summary>
 Detection de modification dans les données du cas ouvert.
 </summary>
	<param name="reasonMsg">Message à demander s'il y a des modifications.</param>
	<returns>-1 = aucun changement, 1 = il y a des changements, 2 = validation incorecte et continuer, 3 = validation incorecte et ne pas continuer</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.Imprimer(System.Boolean)">
	<summary>
 Fait la génération nécessaire du rapport.
 </summary>
	<param name="print">True - Imprimer le rapport, False - faire un aperçu</param>
	<returns>True -  tout à fonctionner, false -  il y a eu une erreur.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ObtenirObjetRapport">
	<summary>
 Permet d'obtenir un objet de rapport avec le bon type pour l'application en cours.
 </summary>
	<returns>Retourne l'objet de rapport utilisé par l'application courante.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GenererNomDossier">
	<summary>
 Sert à dire le nom du fichier à utiliser lorsque l'on sauvegarde un nouveau cas.
 </summary>
	<returns>Le nom du dossier que l'on devrait utiliser.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GererOuvertureProduit">
	<summary>
 Permet de faire les traitements nécessaire lors de l'ouverture d'un cas pour un produit particulier.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ObtenirDocumentsNonValide">
	<summary>
 Fonction qui retourne tous les documents signées invalides
 </summary>
	<returns>Liste de tous les documents signées invalides</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ValiderDocuments">
	<summary>
 Permet de gérer la validation des documents signé lors de la sauvegarde
 </summary>
	<returns>1 - Sauvegardé
          2 -  Ne pas sauvegardé mais continuer
         -1 - cancel</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.ModifierParametresValidation(System.Collections.Generic.List{System.String})">
	<summary>
 Effectue les remplacements des valeurs "£"
 </summary>
	<param name="param">La liste de paramètre</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GererErreurValidation(IAFG.IA.VI.ENUMs.ResultatValidation)">
	<summary>
 Permet de gérer le retour des validations.
 </summary>
	<param name="retourValidation">Le retour de la validation.</param>
	<returns>True si échec, false sinon.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.GererErreurValidation(IAFG.IA.VI.ValidationTypes.ResultatValidationMethode)">
	<summary>
 Permet de gérer le retour des validations.
 </summary>
	<param name="retourValidation">Le retour de la validation.</param>
	<returns>True si échec, false sinon.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.InitPerformance(IAFG.IA.VI.AP.Commun.Utils.ApplicationBase@)">
	<summary>
 Méthode qui permet d'ouvrir et sauvegarder un cas bidon dans un autre thread pour que le "just-in-time compilation" 
 qui est fait lors de la première ouverture et sauvegarde soit fait à l'ouverture de l'application.
 Donc, la première ouverture et la première sauvegarde par l'usager sera plus rapide.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.TraitementOuvertureTempArret">
	<summary>
 Fonction qui fait tous les traitements nécessaires sur notre cas si l'on ouvre en mode temp arrêt.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase.VerificationCaracteresInterdits(System.String)">
	<summary>
 Fonction qui vérifie si le nom de fichier contient des caractères interdits. 
 Si c'est le cas, on retourne le nom de fichier sans ces caractères.
 </summary>
	<param name="nomFic">nomdu fichier</param>
	<returns>Nouveau nom de fichier</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Utils.ApplicationIllusVieBase">
	<summary>
 Classe contenant les informations nécessaire pour 
 gérer une application Illusvie.</summary>
	<isnew>2008-05-06</isnew>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 =====================================================================
 Tremblay, Victor  2008-05-06   Correction apportée à la 
                                fonction SauvegarderFichier.
 </pre>
	</history>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.ExcelEstInstalle">
	<summary>
 Propriété qui retourne si l'application Microsoft Excel est installé
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.ExportToExcel(System.String,System.Int32,System.String,System.String)">
	<summary>
 Cette méthode permet l'exportation vers Excel
 </summary>
	<param name="pNumeroTabGra">Le numéro du tableau ou du graphique</param>
	<param name="pScenario">Le numéro de scénario</param>
	<param name="pDW1Data">Les données de la datawindow1</param>
	<param name="pDW2Data">Les données de la datawindow2</param>
	<returns>
 True : réussi
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.ExtraireEntetesEtFormats(System.Int32,IAFG.IA.VI.AP.Illustration.Services.InfoGestionTableaux.Tableau,System.Globalization.CultureInfo,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
	<summary>
 Détermine les colonnes du tableau qui sont visible 
 et génère un liste d'entetes et une liste de formats.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.ExporterListeDonneesVersExcel(System.String,System.Collections.Generic.List{System.Collections.Generic.List{System.Decimal}},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
	<summary>
 Exporte un tableau de décimal dans fichier excel et 
 renvoit le nom du fichier temporaire contenant les
 données exportées.
 </summary>
	<param name="fichier">Le chemin d'accès au fichier.</param>
	<param name="listeEntetesColonnes">La liste d'entête de colonnes.</param>
	<param name="listeLignesDonnees">La liste de données à exportées.</param>
	<param name="listeFormatsColonnes">La liste des formats de colonnes.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.ObtenirEmplacementFichier(IAFG.IA.VI.AP.Illustration.Services.InfoGestionTableaux.Tableau)">
	<summary>
 Demande à l'utilisateur à quel emplacement on doit sauvergarder le fichier.
 </summary>
	<remarks>
 On pourrait laisser Excel faire ce traitement automatiquement, 
 mais le OpenFileDialog ne tiendrait pas compte de la langue
 sélectionné dans l'application... 
 </remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.FichierUtilise(System.String)">
	<summary>
 Vérifie si le fichier est en cours d'utilisation.
 </summary>
	<param name="fichier"></param>
	<returns></returns>
	<remarks>
 Cette méthode ne fonctionne pas avec tous les types de fichier.. ex : *.txt
 </remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.InitialiserFeuilleActive(System.Object,System.String,System.Collections.Generic.List{System.String})">
	<summary>
 Initialise la feuille active en lui donnant un nom
 et en initialisant les entêtes et les formats de colonnes.
 </summary>
	<param name="appExcel">Référence à l'application Excel (COM).</param>
	<param name="nomFeuille"></param>
	<param name="listeEntetesColonnes"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.GenererListeDonnees(System.String,System.String)">
	<summary>
 Fusionne les listes de données provenant des deux DataWindows
 en une seule. Les données du DataWindow1 utilise les deux premières
 colonnes et celles du DataWindow2 utilise les colonnes suivantes.
 </summary>
	<param name="donneesDataWindow1">Données du premier DataWindow1 obtenues par la méthode Describe().</param>
	<param name="donneesDataWindow2">Données du premier DataWindow2 obtenues par la méthode Describe().</param>
	<returns>Un List(Of List(Of Decimal)) contenant les lignes et les colonnes de données.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.AjouterClasseur(System.Object,System.Globalization.CultureInfo@)">
	<summary>
 Créé un classeur dans l'application Excel.
 </summary>
	<param name="appExcel">Référence à l'application Excel (COM).</param>
	<param name="culturePrecedante">
 Référence un <see cref="T:System.Globalization.CultureInfo">CultureInfo</see>
 fournissant les informations sur la culture active au moment de l'appel à cette fonction.
 Cette valeur reste à Nothing si aucun changement de culture n'a lieu.
 </param>
	<returns>True si le classeur à été ajouté avec succès, sinon False.</returns>
	<remarks>
 Le code ci-dessous à été conçu afin de prévénir le bug suivant :
 http://support.microsoft.com/kb/320369/fr
 
 Ainsi, nous modifions, si nécessaire, la culture courante du thread afin
 de permettre à Excel d'accèder aux ressources qui lui sont nécessaire lors
 de certains traitements, comme la création de son classeur.
 </remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.OuvrirClasseur(System.Object,System.String,System.Globalization.CultureInfo@)">
	<summary>
 Ouvre le classeur spécifié dans l'application Excel.
 </summary>
	<param name="appExcel">Référence à l'application Excel (COM).</param>
	<param name="culturePrecedante">
 Référence un <see cref="T:System.Globalization.CultureInfo">CultureInfo</see>
 fournissant les informations sur la culture active au moment de l'appel à cette fonction.
 Cette valeur reste à Nothing si aucun changement de culture n'a lieu.
 </param>
	<returns>True si le classeur à été ajouté avec succès, sinon False.</returns>
	<remarks>
 Le code ci-dessous à été conçu afin de prévénir le bug suivant :
 http://support.microsoft.com/kb/320369/fr
 
 Ainsi, nous modifions, si nécessaire, la culture courante du thread afin
 de permettre à Excel d'accèder aux ressources qui lui sont nécessaire lors
 de certains traitements, comme la création de son classeur.
 </remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.AfficherConceptiaStrategyPresentation(System.String,System.String,IAFG.IA.IL.AP.IllusVie.Services.Strategie,System.Boolean)">
	<summary>
 Méthode qui affiche la présentation de conceptia
 </summary>
	<param name="templateFile"></param>
	<param name="tempFileName"></param>
	<param name="strategie"></param>
	<param name="print"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.CreateConceptiaStrategyPresentation(System.String,System.String,IAFG.IA.IL.AP.IllusVie.Services.Strategie,System.Boolean)">
	<summary>
 fonction qui crée la présentation de Conceptia
 </summary>
	<param name="templateFile"></param>
	<param name="tempFileName"></param>
	<param name="strategie"></param>
	<param name="print"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.CloseExcelApplication(System.Object)">
	<summary>
 Méthode qui ferme l'application MicroSoft Excel
 </summary>
	<param name="appExcel"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel.WriteConceptInfoInConceptiaStrategyPresentation(System.Object)">
	<summary>
 Méthode qui écrit les informations pour la présentation de Conceptia
 </summary>
	<param name="appExcel"></param>
	<remarks>Est Overridé dans NonTrad</remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Utils.ExportToExcel">
	<summary>
 Classe exclusive pour l'exportation des fichiers Excel. L'option strict est à Off en raison du late binding. 
 </summary>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 =====================================================================
 Martel, Guy       2007-07-11   Création de la classe
 </pre>
	</history>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.GestionFormulaireIllustration.Parent">
	<summary>
 Propriété qui nous donne accès à l'instance de l'objet visuelle auquel
 cette classe-ci est associé
 </summary>
	<value>Instance de l'objet auquel cette classe est associé</value>
	<returns>Instance de l'objet auquel cette classe est associé</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GestionFormulaireIllustration.#ctor(IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase)">
	<summary>
 Constructeur de cette classe. Elle reçoit l'instance de l'objet visuelle auquel 
 elle sera associé
 </summary>
	<param name="parent">Instance de l'objet auquel cette classe est associé</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Utils.GestionFormulaireIllustration">
	<summary>
 Classe qui contient la logigue d'affaire du formulaire de la section "Illustration"
 représenté par la classe "FormulaireIllustrationBase"
 </summary>
	<remarks>Cette classe sert à séparer la logique d'affaire de la classe visuelle 
 auquel elle est associée. Le descendant de cette classe est instancié au niveau
 applicatif par la classe "FormulaireAssure".</remarks>
	<history>
		<pre>
 Auteur               Date       Description
 ==============================================================
 Robert Bastien    2007-10-02    Création
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.#ctor(System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Constructeur de la classe
 </summary>
	<param name="assureContractant">L'assuré contractant</param>
	<param name="modifAjout">Aout ou modification de l'individu</param>
	<param name="individuID">L'identifiant de l'individu</param>
	<param name="noAssure">Le numéro de l'assuré</param>
	<param name="typeAssure">Le type d'assuré</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.Controles">
	<summary>
 Liste des controles de la DataWindow
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.AssureContractant">
	<summary>
 Proprété de la valeur AssureContractant
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.ModifAjout">
	<summary>
 Propriété de la valeur ModifAjout
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.IndividuId">
	<summary>
 Propriété de la valeur IndividuId
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.NoAssure">
	<summary>
 Propriété de la valeur NoAssure
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.TypeResultat">
	<summary>
 Propriété de la valeur TypeResultat
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.TypeAssurance">
	<summary>
 Propriété de la valeur TypeAssurance
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.Action">
	<summary>
 Propriété de la valeur Action
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.DialogueModifierIndividu_Load(System.Object,System.EventArgs)">
	<summary>
 Chargement de la fenêtre DialogueModifierIndividu.</summary>
	<isnew>2008-05-06</isnew>
	<param name="sender">Objet ayant levé l'événement.</param>
	<param name="e">Arguments de l'objet ayant levé l'événement.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'événement Click de la DataWindowPrincipale.
 </summary>
	<param name="sender">Objet ayant levé l'événement</param>
	<param name="e">Arguments de l'objet ayant levé l'événement.
 Dans ce cas, le nom du contrôle de la dataWindowPrincipale</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.DataWindowPrincipale_ItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement 
 ItemChanged de la DataWindowPrincipale.</summary>
	<isnew>2008-04-24</isnew>
	<param name="sender">Objet ayant levé l'événement</param>
	<param name="e">Arguments de l'objet ayant levé l'événement.
 Dans ce cas, le nom du contrôle dans la colonne du DataWindowPrincipales</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.UnloadData(System.Object)">
	<summary>
 Cette fonction fait la gestion de la fermeture de la fenêtre 
 et de l'enregistrement des informations.</summary>
	<isnew>2008-04-24</isnew>
	<param name="sender">Objet ayant levé l'événement</param>
	<returns>
 True si réussi
 FAasle si non</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.GererListeIndividus">
	<summary>
 Permet de remplir la liste des individus en filtrant 
 ceux qui ne doivent pas être là.</summary>
	<isnew>2008-04-24</isnew>
	<returns>
 Retourne 1 si l'opération a réussie</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu.ObtenirPrenomNomSexeAgeDate(System.String,System.String@)">
	<summary>
 Permet d'obtenir une string qui contient le prénom,
 le nom, le sexe, l'âge et la date de naissance de l'individu
 dont le ID est passé en paramètre.
 </summary>
	<param name="pIndividuId">Identifiant de l'assuré</param>
	<param name="pDescription">Description</param>
	<returns>
 Retourne 1 si l'opération a réussie.
 </returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierIndividu">
	<summary>
 Dialogue de modification de l'individu.</summary>
	<isnew>2007-05-06</isnew>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 =====================================================================
 Martel, Guy       2007-06-19   Création de la classe
 Tremblay, Victor  2008-04-24   Corrections effectuées sur la 
                                gestion des individus.
 Tremblay, Victor  2008-05-06   Correction de la fonction 
                                DialogueModifierIndividu_Load.
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.AfficherMsgGarCont">
	<summary>
 Remplacement de la même fonction dans les règles d'affaires
 </summary>
	<returns>True = on affiche le message, False = on n'affiche pas le message</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ObtenirInfoErreur">
	<summary>
 Obtiens le message d'erreur du service de dossier
 </summary>
	<returns>La string contenant le message</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.LeverException">
	<summary>
 Méthode pour lever les exceptions
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.IsIndividuSurprimee(System.String)">
	<summary>
 Permet de déterminer si une surprime est présente pour un individu
 </summary>
	<param name="idIndividu">Id de l'individu ou "Conjoint"</param>
	<returns>Indicateur de la présence d'une surprime</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.IsProtectionAssureNonAssurable(System.Int32,System.String,System.Int32)">
	<summary>
 Cette fonction fait le traitement afin de vérifier s'il y 
 a des protections assignées à l'individu non-assurable pour
 l'identifiant qui est passé en paramètre.
 </summary>
	<param name="numeroAssure">L'ordinal de l'assuré courant</param>
	<param name="idAssureNonAssurable">L'id de l'assuré non-assurable</param>
	<param name="nbrIndividus">Nombre d'individus conjoints</param>
	<returns>Indicateur de la présence de la protection attribuée à l'individu non-assurable</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.IsDiminutionCapital(System.String,System.Int32)">
	<summary>
 Cette fonction fait le traitement afin de vérifier s'il y a
 une diminution de capital pour l'individu incluant les protections
 conjointes pour s'il est assuré 1.
 </summary>
	<param name="idIndividu">Id de l'individu</param>
	<param name="numeroAssure">Ordinal de l'assuré</param>
	<returns>Indicateur de la diminution de capital pour cet individu</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.IsPersonneSurprimee(System.Int32,System.String)">
	<summary>
 Permet de déterminer si une surprime est présente pour un individu
 </summary>
	<param name="numeroAssure">le numero de l'assuré</param>
	<param name="idIndividu">Id de l'individu ou "Conjoint"</param>
	<returns>Indicateur de la présence d'une surprime</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.IsActualiserAge(System.Int32@)">
	<summary>
 Cette fonction permet de déterminer s'il y a au moins
 1 individu dont l'âge doit être actualisé parmi tous les
 individus de chaque scénario
 </summary>
	<param name="ageMax">l'âge maximum</param>
	<returns>True  = Il y a des individus a actualiser
 False = Aucun individu a actualiser</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.IsActualiserAgeIndividu(System.String,System.Int32@)">
	<summary>
 Cette fonction permet de déterminer si l'âge de l'individu
 du scénario courant doit être actualisé
 </summary>
	<param name="idIndividu">id de l'individu a analyser</param>
	<param name="ageMax">l'age maximum</param>
	<returns>Un indicateur pour savoir si l'âge doit être actualiser</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresencePrimeNulle">
	<summary>
 Cette fonction Indique si la prime est nulle.
 </summary>
	<returns>Si la prime est nulle</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceSurprime">
	<summary>
 Cette fonction Indique si une surprime est présente sur l'illustration
 </summary>
	<returns>Retourne True si au moins 1 surprime existe</returns>
	<remarks>sur l'illustration</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceSurprimeFuture">
	<summary>
 Cette fonction Indique si une surprime est présente sur l'illustration
 </summary>
	<returns>Retourne True si au moins 1 surprime existe</returns>
	<remarks>sur l'illustration</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceSurcharge">
	<summary>
 Cette fonction Indique si une surcharge est présente sur l'illustration
 </summary>
	<returns>Retourne True si au moins 1 sucharge existe sur l'illustration</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceAmg">
	<summary>
 Cette fonction indique si un avenant Maladie Grave est présent sur l'illustration.
 </summary>
	<returns>Si un avenant Maladie Grave est présent sur l'illustration.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceAmg(IAFG.IA.VI.AF.Proposition.ENUMs.EtatProtection)">
	<summary>
 Cette fonction indique si un avenant Maladie Grave est présent sur l'illustration de l'etatProtection spécifié
 </summary>
	<param name="etatProtection">L'étatProtection pour lequel on veut la liste de protections</param>
	<returns>Si un avenant Maladie Grave est présent sur l'illustration.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.IsProtectionConjointePresent(System.Int32,System.String,System.Collections.Generic.List{System.String})">
	<summary>
 Cette fonction fait le traitement afin de vérifier s'il y
 a des protections à base conjointe sur l'assuré pour l'ordinal qui est passé un paramètre.
 </summary>
	<param name="numeroAssure">L'ordinal de l'assuré courant</param>
	<param name="idAssurePrinc">L'id de l'assuré principal</param>
	<returns>S'il y a des protections à base conjointe sur l'assuré pour l'ordinal qui est passé un paramètre.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceContractantsIdentiques(System.String@,System.String@,System.String@)">
	<summary>
 Cette fonction permet de vérifier si les 2 contractants sont identiques.
 </summary>
	<param name="nom">Nom du contractant</param>
	<param name="prenom">Prénom du contractant</param>
	<param name="age">Âge du contractant</param>
	<returns>Retourne true si les contractants sont identiques</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceAssuresIdentiques(System.String@,System.String@,System.String@)">
	<summary>
 Cette fonction indique s'il y a des individus identiques sur l'illustration.
 </summary>
	<param name="nom">Le nom de l'individu</param>
	<param name="prenom">Le prénom de l'individu</param>
	<param name="age">L'âge de l'individu</param>
	<returns>Indicateur de présence d'un assuré identique</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresencePrimeVerseeTropPetite">
	<summary>
 Cette fonction Indique si la prime versée est plus petite que la prime minimale.
 </summary>
	<returns>Indique si la prime versée est plus petite que la prime minimale.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceIndividuStatutPreferentiel">
	<summary>
 Cette fonction fait le traitement afin de vérifier si un
 des assurés détient un statut préférentiel.
 </summary>
	<returns>Retourne True si au moins 1 assuré à un statut préférentiel</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.Presence1IndividuAssure2fois(System.String@,System.String@,System.String@)">
	<summary>
 Cette fonction indique si un individu est assuré 
 plus d'une fois sur l'illustration.</summary>
	<isnew>2008-05-06</isnew>
	<param name="nom">Le nom de l'individu assuré plus d'une fois</param>
	<param name="prenom">Le prénom de l'individu assuré plus d'une fois</param>
	<param name="age">L'âge de l'individu assuré plus d'une fois</param>
	<returns>Indicateur si l'individu assuré plus d'une fois</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceContractantAutrePerAssure(System.String@,System.String@,System.String@,System.String@,System.Boolean@)">
	<summary>
 Cette fonction permet de vérifier s'il y a une ressemblance entre
 un des contractants qui n'est pas assuré, et un assuré.
 </summary>
	<param name="nom">Nom du contractant qui est assuré </param>
	<param name="prenom">Prénom du contractant qui est assuré</param>
	<param name="age">Âge du contractant qui est assuré</param>
	<param name="numeroAssure">Numéro de l'assuré</param>
	<param name="assureContractant">Indique si est contractant</param>
	<returns>Retourne true si un contractant autre personne est aussi un assuré</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceConceptBloque">
	<summary>
 Fonction qui retourne s'il y a un concept qui n'est pas permis dans propos.
 </summary>
	<returns>True = il y a un concept bloqué
 False = il n'y a pas de concept bloqué</returns>
	<remarks>Codé dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceCapital10millions">
	<summary>
 Cette fonction indique s'il y a un individu avec un capital assuré de plus de 10 millions.
 </summary>
	<returns>Indicateur de présence d'un capital assuré de plus de 10 millions</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceAssurePreferentiel">
	<summary>
 Cette fonction indique si un individu a une classe préférentielle
 </summary>
	<returns>Indicateur de présence d'un individu à tarification préférentielle</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresencePrimeInvalide">
	<summary>
 Cette fonction fait le traitement afin de vérifier que le type de prime
 n'est pas a 999 - Selectionner une valeur
 </summary>
	<returns>Indicateur de la présence d'une prime invalide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceProvinceInvalide">
	<summary>
 Cette fonction fait le traitement afin de vérifier que la province
 n'est pas a ZZ - Selectionner une valeur
 </summary>
	<returns>Indicateur de la présence d'une province invalide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceTypeCoutInvalide">
	<summary>
 Cette fonction fait le traitement afin de vérifier si un
 des assurés détient un type de cout invalide
 </summary>
	<returns>Indicateur de la présence d'une protection invalide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceTypeCapitalInvalide">
	<summary>
 Cette fonction fait le traitement afin de vérifier si un des assurés détient un type de cout invalide
 </summary>
	<returns>Indicateur de la présence d'une protection invalide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceAssinv">
	<summary>
 Cette fonction retourne en référence s'il y a au moins
 une protection d'assurance invalidité sur le contrat
 </summary>
	<returns>True = assinv présent, false = pas d'assinv</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceEpic">
	<summary>
 Cette fonction retourne en référence s'il y a au moins une epic sur le contrat
 </summary>
	<returns>True = epic présent, false = pas d'epic</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceEpia">
	<summary>
 Cette fonction retourne en référence s'il y a un epia sur le contrat
 </summary>
	<returns>True = epia présent, false = pas d'epia</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.PresenceChampsVidesDefaut(System.String)">
	<summary>
 Cette fonction indique si un champ obligatoire est vide (Nom, Prénom, date de naissance)
 </summary>
	<param name="champsValider">Indique qui est à valider: assures, contractants, assures-contractants</param>
	<returns>Indicateur de présence d'un champ vide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ChangementAge(System.Int32,System.Int32)">
	<summary>
 Permet d'effectuer toutes les modifications nécessaires lors du changement d'âge de l'assuré 1
 </summary>
	<param name="ancienAge">L'ancien âge de la personne</param>
	<param name="nouvelAge">Le nouvel âge de la personne</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.GererErreurDuDossier">
	<summary>
 Initialise les variables d'instance pour le message d'erreur du gestionnaire de dossier
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.InitRapport">
	<summary>
 Initialise les sections de rapport au dossier pour les conserver
 </summary>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.EffacerJeanClientTrainant">
	<summary>
 Cette fonction fait le ménage des individus qui ne "servent" pas
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ProtectionSurprimeCount(System.String,System.Int32@)">
	<summary>
 Permet d'obtenir le nombre de surprimes pour une protection
 </summary>
	<param name="idProtection">Id de la protection</param>
	<param name="nbrSuprime">Le nombre de surprimes pour cette protection</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement
 -2 - Le Id de la protection est invalide
 -3 - Autre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ProtectionsAMG(System.String[]@,System.String[]@,System.Int32@)">
	<summary>
 Permet d'obtenir le nombre de protection Maladie Grave
 </summary>
	<param name="idIndividus">Id des individus</param>
	<param name="idProtections">Id des protections</param>
	<param name="nbrProtections">Le nombre de protections Maladie Grave</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ProtectionsAMG(System.String[]@,System.String[]@,System.Int32@,IAFG.IA.VI.AF.Proposition.ENUMs.EtatProtection)">
	<summary>
 Permet d'obtenir le nombre de protection Maladie Grave de l'etatProtection spécifié
 </summary>
	<param name="idIndividus">Id des individus</param>
	<param name="idProtections">Id des protections</param>
	<param name="nbrProtections">Le nombre de protections Maladie Grave</param>
	<param name="etatProtection">L'état protection pour lequel on veut la liste des protections</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ProtectionsRenouvellements(System.String[]@,System.Int32@)">
	<summary>
 Permet d'obtenir les protections Renouvelables
 </summary>
	<param name="idProtections">Id des protections</param>
	<param name="nbrProtections">Le nombre de protections Renouvelables</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ValiderProtections(System.Int32,System.Int32,System.String[],System.Int32,System.Boolean@,System.String@,System.String@,System.String@)">
	<summary>
 Cette fonction fait le traitement de la vérification de chacune des protection en ce qui a trait à sa disponibilité,
 l'ajustement de la durée, l'ajustement du montant et le calcul de la prime suite à la modification d'un élément
 qui à une incidence sur les protections (i.e. le type d'assurance, l'option de décès, l'âge et le sexe de
 l'assuré, etc...). Lorsqu'une protection n'est plus disponible elle est supprimée du dossier.
 </summary>
	<param name="scenario">Le numéro du scénario dans lequel nous travaillons</param>
	<param name="numeroAssure">L'ordinal de l'assuré courant</param>
	<param name="idIndividus">Les id des individus qui pourrait être associé à une protection</param>
	<param name="nbrIndividus">Le nombre d'individus qui pourrait être associé à une protection</param>
	<param name="valide">Indique si la protection est valide</param>
	<param name="invalideProtId">Id de la protection invalide</param>
	<param name="invalideNomItem">Nom de l'item invalide</param>
	<param name="codeMessageErreur">Message d'erreur s'il y a lieu</param>
	<returns>1 - Le traitement s'est déroulé sans problème
 -1 - Une erreur est survenue durant le traitement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ProtectionsIndividuAssure(System.String,System.String[]@,System.Int32@,System.Int32)">
	<summary>
 Permet d'obtenir les protections d'un individu en fonction d'un Ordinal d'assuré
 </summary>
	<param name="idIndividu">Id de l'individu ou "Conjoint"</param>
	<param name="idProtections">Les IDs des protections</param>
	<param name="nbrProtections">Le nombre de protections</param>
	<param name="numeroAssure">L'ordinal de l'assuré dont on veut la liste des protections</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ObtenirRapportId(System.Int32@,System.String@,System.String@)">
	<summary>
 Obtenir le numero d'identifiant d'un rapport
 </summary>
	<param name="numeroConcept">le numéro du concept (0 pour stantdard)</param>
	<param name="idRapport"> l'id du rapport</param>
	<param name="codeRapport">le code du rapport</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ObtenirInfoAssures(System.Collections.Generic.List{System.Int32}@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Int32}@,System.Int32@)">
	<summary>
 Cette fonction fait le traitement nécessaire pour obtenir
 l'âge, l'identifiant, le prenom et l'indicateur d'assurabilité
 de chaque assuré dans l'illustration.
 </summary>
	<param name="ages">Vecteur qui contient l'âge de l'ensemble des individus</param>
	<param name="idIndividus">Vecteur qui contient les identifiant de l'ensemble des individus</param>
	<param name="prenoms">Vecteur qui contient les prenoms de l'ensemble des individus</param>
	<param name="assurables">Vecteur qui contient l'indicateur d'assurabilité de l'ensemble des individus</param>
	<param name="nbrIndividus">Le nombre d'assurés pour lesquels nous retournons les informations</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ObtenirProtAssocie(System.String)">
	<summary>
 Fonction qui retourne toute les protections liÃ©es Ã  une base.
 </summary>
	<param name="idProtBase">L'id de la protection de base</param>
	<returns>Liste de toutes les protections associÃ©s Ã  la base en paramÃ¨tre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.CoordonneesIndividu(System.String,System.Int32@,System.String@)">
	<summary>
 Cette fonction indique le numéro ordinal d'assuré ainsi que la lettre lorsque celui-ci est un assuré conjoint.
 </summary>
	<param name="idIndividu">Le Id de l'individu</param>
	<param name="numeroAssure">Numéro ordinal de l'assuré pour cet individu</param>
	<param name="numeroConjoint">Lettre indiquant qu'il s'agit d'un conjoint (A, B, C, D, E)</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.AvantAllerDansPropo">
	<summary>
 Cette fonction permet d'initialiser les champs "Modifiable", pour chacun des individus avant l'appel de la PE.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ActualiserAge(System.Boolean)">
	<summary>
 Cette fonction permet d'actualiser l'âge de tous les individus de chacun des scénarios qui doivent l'être.
 </summary>
	<param name="recalculerAge">True  = actualiser
 False = remet la date de naissance a blanc</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ActualiserAge(System.Boolean,System.DateTime,System.Boolean)">
	<summary>
 Cette fonction permet d'actualiser l'âge de tous les individus de chacun des scénarios qui doivent l'être.
 </summary>
	<param name="recalculerAge">True  = actualiser
 False = remet la date de naissance a blanc</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.IsProfilIncomplet(System.String)">
	<summary>
 Cette fonction fait le traitement afin de vérifier si un des contractants détient un profil incomplet
 </summary>
	<param name="idIndividu">L'id de l'individu</param>
	<returns>Si le profil investisseur est rempli. Retourne False si rempli ou si le profil n'est pas nécessaire</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ObtenirConceptApplication">
	<summary>
 Cette fonction permet de nous retourner le concept de l'application en cours.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase.ObtenirListeIndividusVerificationValeursNonDefinies(System.Int32)">
	<summary>
 Comme le nom le dit, c'est une fonction qui obtient la listes des individus qu'il faut
 vérifier dans la vérification des valeurs non-définies (sexe et statut à Sélectionner une valeur)
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Donnees.UtilsDossierBase">
	<summary>
 Fonction permettant de gérer le dossier de base.</summary>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 =====================================================================
 Tremblay, Victor  2008-05-06   Correction de la fonction 
                                Presence1IndividuAssure2fois.
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.BarreApplicative.ActivateConsult(System.Boolean)">
	<summary>
 Méthode pour activer le bouton consultation
 </summary>
	<param name="activate">Vrai - On doit activer le bouton. Faux - On ne doit pas.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.BarreApplicative.ActivateExigences(System.Boolean)">
	<summary>
 Méthode pour activer le bouton des exigences médicales
 </summary>
	<param name="activate">Vrai - On doit activer le bouton. Faux - On ne doit pas.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.BarreApplicative.ButtonExigences_Click(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient quand on clique sur le bouton des Exigences Médicales
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.#ctor(System.String)">
	<summary>
 Initialisation des variabes d'instance nécessaires pour le dialogue.
 </summary>
	<param name="idProt">L'id de la protection</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.AfficherTitreFenetre">
	<summary>
 Méthode pour afficher le titre du dialogue
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.AfficherTexteFenetre">
	<summary>
 Méthode qui affiche les notes sur le coût d'assurance si nécessaire
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.UnloadData(System.Object)">
	<summary>
 Méthode qui fait le déchargement des données du dialogue
 </summary>
	<param name="sender"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.ValiderSurchargeAvenantBase">
	<summary>
 Méthode qui valide la présence (ou non) sur l'avenant et la base
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
	<summary>
 Traite une touche de commande.
 </summary>
	<param name="msg">System.Windows.Forms.Message, passé par référence, qui représente le message de fenêtre à traiter.</param>
	<param name="keyData">Une des valeurs System.Windows.Forms.Keys qui représente la touche à traiter. </param>
	<returns>True si le caractère a été traité par cette méthode; sinon False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.DeterminerDisponibiliteCoutAssurance">
	<summary>
 Méthode qui détermine si le champ cout d'assurance est disponible
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.InitialiserValeurs">
	<summary>
 Méthode qui fait l'initialisation des champs du dialogue
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.RafraichirPourcentageFinal">
	<summary>
 Méthode qui rafraichi le champ pourcentage final
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.AfficherSectionAvenantMethode">
	<summary>
 Méthode par défaut pour le Delegate
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.DialogueSurprimes_Load(System.Object,System.EventArgs)">
	<summary>
 Évènement load de la form. Ne fait que appeler l'init des valeurs.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.DataWindowPrincipale_ItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Gère le changement de valeur d'un champ.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Gère le click pour le bouton quitter.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.DataWindowPrincipale_PostItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Gère les données lorsque le changement est approuvé.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime.DataWindowPrincipale_ItemError(System.Object,Sybase.DataWindow.ItemErrorEventArgs)">
	<summary>
 Gestion des erreurs.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueModifierPrime">
	<summary>
 Dialogue qui permet d'ajouter des surprimes à une protection.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.StrategieSelectionnee">
	<summary>
 Propriété qui retourne le service de Statégie
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.GestionnaireConceptia">
	<summary>
 Propriété qui retourne le service de GestionConceptia
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.ReglesAffaireConceptia">
	<summary>
 Propriété qui retourne le service de ReglesAffaireConceptia
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click de la DataWindowPrincipale
 Cette méthode gère les évènements Click de l'élément p_close
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement Click de la DataWindow. Ces arguments contiennent
 des valeurs spécifiques au DataWindow</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.DataWindowPrincipale_PostItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Gère la sélection d'une stratégie dans la liste déroulante. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.FormulaireConceptia_Load(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient lors du chargement du formulaire
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.FormulaireConceptia_SwitchLangue(System.Object)">
	<summary>
 Évènement qui survient lors du changement de langue de l'application
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.btnVisualiserStrategie_Click(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur clique sur le bouton btnVisualiserStrategie
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.DataWindowPrincipale_Click(System.String)">
	<summary>
 Méthode qui fait l'éguillage selon le nom du champ sur lequel l'utilisateur a cliqué
 </summary>
	<param name="controle"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.CreerObjetExcel">
	<summary>
 Méthode qui crée l'objet d'Excel
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.LoadData(System.Object)">
	<summary>
 Méthode qui est appelée pour le chargement des données du formulaire
 </summary>
	<param name="sender"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.RemplirListeDeroulanteConcepts(System.Boolean)">
	<summary>
 Rempli la liste déroulante de stratégies.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.GetConceptPathAndFileName">
	<summary>
 Retourne le répertoire et le fichier contenant la liste des stratégies. Ces valeurs proviennent de la base de registre.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.GetRTFConceptPathAndFileName">
	<summary>
 Retourne le répertoire et le fichier contenant la description de la présentation selon la langue de l'usager.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.GetTemplatePathAndFileName">
	<summary>
 Retourne le répertoire et le fichier du template de la présentation à créer.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.GetTempPathAndFileName">
	<summary>
 Retourne un nom de fichier temporaire pour la création de la présentation. Le répertoire provient de la clé de registre SavePath.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.GetHelpPathAndFile">
	<summary>
 Retourne le répertoire et le fichier du template de la présentation à créer.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.VisualiserStrategie">
	<summary>
 Lance les validations sur la stratégie sélectionnée et lance la génération de la présentation
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.AfficherFonctionnementGlobalStrategie">
	<summary>
 Affiche dans le controle RTF la description de la stratégie sélectionné
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.AfficherAide">
	<summary>
 Affiche l'aide sur l'écran Conceptia
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.DefinirStrategieSelectionnee(System.String)">
	<summary>
 Permet de définir la variable membre StrategieSelectionnee à la sélection de l'usager.
 </summary>
	<param name="id">id de l'item sélectionné dans la liste déroulante.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.AfficherPrimesContrat">
	<summary>
 Cette fonction fait le traitement nécessaire pour l'affichage
 à l'écran de la prime minimum et maximum
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireConceptia.DecrypterFichier(System.String)">
	<summary>
 Méthode qui décrypte un fichier de type RTF pour ConceptIA
 </summary>
	<param name="fichier"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.DataWindowsPtsSaillants">
	<summary>
 Propritété qui indique le nom de la datawindow des points saillants
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.DataWindowsTitrePtsSaillants">
	<summary>
 Propriété qui indique le nom de la datawindow du titre des points saillants
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.ObtenirListRapport(System.String,System.Boolean)">
	<summary>
 Permet d'obtenir la liste des pages d'un rapport à partir de GestionListesChoix
 </summary>
	<param name="nomRapport"></param>
	<param name="accapOnly"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.GetBasDePage">
	<summary>
 Formater l'information du bas de page.
 </summary>
	<returns>String contenant l'information du bas de la page.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.GetHautDePage">
	<summary>
 Formater l'information du haut de page.
 </summary>
	<returns>L'information pour le haut de page.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.ObtenirNomImageHeader">
	<summary>
 Obtient le nom de l'image des header du rapport selon le produit en cours
 </summary>
	<returns>Nom de l'image pour le header des rapports</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.FormatterTelephone(System.String,System.Boolean)">
	<summary>
 Cette fonction permet de formatter un numéro de téléphone
 </summary>
	<param name="numero"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetPageTitre">
	<summary>
 Chargement de la page titre 
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetIntroduction(System.String,System.String,System.String)">
	<summary>
 Chargement de l'introduction.
 </summary>
	<param name="orientation">Orientation de la page ( 1-Portrait 2-Paysage )</param>
	<param name="infoHeader">Information de l'entête pour l'introduction</param>
	<param name="importstring">String contenant les données de l'introduction</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetPtsSaillantsMg(System.String,System.String,System.String)">
	<summary>
 Chargement des points saillants pour Maladie Grave
 </summary>
	<param name="orientation">Orientation des pts saillants 1-Portrait 2-Paysage</param>
	<param name="infoHeader">Entête des maladies graves</param>
	<param name="importstring">String contenant les données des pts saillants</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetPtsSaillants(System.String,System.String,System.String,System.String)">
	<summary>
 Chargement des points saillants sur 2 colones
 </summary>
	<param name="orientation">Orientation de la page ( 1-Portrait 2-Paysage )</param>
	<param name="infoHeader">Information de l'entête des pts saillants</param>
	<param name="importstring">String contenant les données des pts saillants</param>
	<param name="titreSection">S'il y a un titre avant le texte des pts saillants</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.ConvertirIndentificateur(System.String@)">
	<summary>
 Convertir les identificateurs [ret] et [tab] pour des retour
 de chariots et des tabulations.
 </summary>
	<param name="temp"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetIndividus(System.String,System.String)">
	<summary>
 Chargement des individus
 </summary>
	<param name="nameNested">Nom du nested</param>
	<param name="importstring">String contenant les données des individus</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetCouvertures(System.String,System.String)">
	<summary>
 Chargement des couvertures
 </summary>
	<param name="nameNested">Nom du nested</param>
	<param name="importstring">String contenant les données des couvertures</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.InitialiserNomClient">
	<summary>
 Initialisation des noms de clients
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.obtenirLibelleEsperanceVie">
	<summary>
 Permet d'obtenir la note de bas de page des tableaux quand lé spérance de vie est affichée
 </summary>
	<returns>la note qui sera affiché sur le tableau</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetTableauIllusvie(System.String,System.Boolean)">
	<summary>
 Préparation des tableaux
 </summary>
	<param name="tableauID">No du tableau</param>
	<param name="affNopage">Afficher ou non le nopage dans le footer</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetExigenceMedicale(System.String,System.String,System.String)">
	<summary>
 Chargement des exigences medicales
 </summary>
	<param name="orientation">Orientation de la page ( 1-Portrait 2-Paysage )</param>
	<param name="infoHeader">Information de l'entête des exigences medicales</param>
	<param name="importstring">String contenant les données des exigences medicales</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.ModifierExigencesMedicales(Sybase.DataWindow.DataWindowChild)">
	<summary>
 Pour modifier la couleur des lignes/rectangles
 </summary>
	<param name="section"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.ModifierExigencesMedicalesNotes(Sybase.DataWindow.DataWindowChild)">
	<summary>
 Pour modifier la couleur des lignes/rectangles
 </summary>
	<param name="section"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetSurprimes(System.String,System.String)">
	<summary>
 Chargement des surprimes
 </summary>
	<param name="infoHeader">Information de l'entête des surprimes</param>
	<param name="importstring">String contenant les données des surprimes</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetGraphiqueIllusvie(System.String,System.Int32)">
	<summary>
 Préparation des graphiques
 </summary>
	<param name="graphId">No du graphique</param>
	<param name="duree">La Durée</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.ObtenirAnneeMax">
	<summary>
 Permet de nous donner le nombre d'année maximum pour notre application, 100 par défaut.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.DetermineChoixAnnee(System.Int32,System.Int32)">
	<summary>
 Détermine le choix des années pour les tableaux dans les rapports selon la sélection de l'usager.
 </summary>
	<param name="age">Si = 0 on prend celui illustration, sinon celui en paramètre</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.AjouterEnTete(System.String)">
	<summary>
 Ajoute la section d'entête sur un rapport.
 </summary>
	<param name="infoHeader">Information de l'entête pour l'introduction</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.SetRapportComm(IAFG.IA.VI.AP.Illustration.Services.InfoGestionTableaux.Tableau)">
	<summary>
 Méthode qui fait l'initialisation du rapport des commissions
 </summary>
	<param name="infoTableau"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.ValiderPresenceAnnotation(System.Int32,System.String@)">
	<summary>
 Validation de la présence de l'annotation
 </summary>
	<param name="noCol">no de la colonne à vailder</param>
	<param name="texteAnnotation">annotation à ajouter</param>
	<returns>true - l'annotation est valide / false - elle est invalide</returns>
	<remarks>demandé par éric st-pierre que ça soit fait à botch ( confirmé par nicolas morneau 2009-08-06) f.c.</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.ValiderColonne(System.Int32)">
	<summary>
 Validation si la colonne peut êter affichée
 </summary>
	<param name="noCol">no de la colonne à valider</param>
	<returns>true - la colonne st valide / false - la colonne est invalide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.ColonneCommissionEngine">
	<summary>
 Retourne le numéro de la colonne de commission actualisé.
 </summary>
	<returns>Le numéro de la colonne de commission actualisé.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.NoteBasPageCommission">
	<summary>
 ajout de la note sur le rapport de comission pour genesis
 </summary>
	<returns>vide si il n'y a pas de note, sinon la note elle-même</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.ValeurCom(System.Decimal@,System.Decimal@)">
	<summary>
 valeur des sommes du rapport de commission
 </summary>
	<param name="com10">somme des 10 premières années</param>
	<param name="comAll">somme de toutes les années</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport.GenererRapportStandard(System.String)">
	<summary>
 Générer la section à imprimer selon celle passé en paramètre 
 </summary>
	<param name="section">Nom de la section.</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Utils.GenererRapport">
	<summary>
 Objet de gestion de la génération du rapport de IllusVie
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.AgeEquivalent">
	<summary>
 Propriété pour l'âge équivalent
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.Scenario">
	<summary>
 Propriété qui retourne le scénario
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.NumeroAssure">
	<summary>
 Propriété qui retourne le numéro de l'assuré
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.Proposition">
	<summary>
 Propriété qui retourne la proposition du sécnario en cours
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.TypeAssurance">
	<summary>
 Propriété qui retourne le type d'assurance du contrat
 </summary>
	<returns></returns>
	<remarks>Pour palier au principe de l'oeuf ou la poule, on considère, s'il n'y a pas de protection
 que le contrat est individuel.</remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.EstSurProtectionBaseContrat">
	<summary>
 Propriété qui indique si la protection est sur la protection de base du contrat
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.EstDisponible(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.VI.AF.Proposition.Protection,System.Boolean)">
	<summary>
 Méthode qui permet de savoir si le plan Illustration passé en paramètre est disponible
 dans la liste des protections
 </summary>
	<param name="infoDispo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.EstDisponible(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui permet de savoir si le plan Illustration passé en paramètre est disponible
 dans la liste des protections
 </summary>
	<param name="infoDispo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserParametresGeneraux(IAFG.IA.VI.AF.Illustration.Scenario,System.Int32)">
	<summary>
 Méthode qui doit être appelé avec d'appeler PlanIllustrationDisponible
 </summary>
	<param name="scenario"></param>
	<param name="numeroAssure"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.ObtenirVerificationChangementScenario(IAFG.IA.VI.AF.Illustration.Scenario,System.Int32)">
	<summary>
 fonction qui retourne la chaine des paramètres qui sont déterminant pour savoir s'il faut ou non réinitialisé les paramètres
 </summary>
	<param name="oScenario"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.DoitReinitialiserParametresGeneraux(IAFG.IA.VI.AF.Illustration.Scenario,System.Int32)">
	<summary>
 fonction qui permet de savoir si l'objet de scénario à changer depuis le dernier appel.
 On vérifie seulement les propriétés nécessaires.
 </summary>
	<param name="oScenario"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.ConvertirReponseBoolean(IAFG.IA.VI.ENUMs.TypeReponse)">
	<summary>
 Méthode pour convertir le type de réponse en boolean
 </summary>
	<param name="typeReponse"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserPourPlanIllus(System.String)">
	<summary>
 on modifie le plan sur les protections à tester
 </summary>
	<param name="plan">Le nouveau code de plan</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierDisponibilite">
	<summary>
 Fonction qui retourne si au moins une des protections créé est disponible
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.AffecterDisponibiliteCollection(System.Boolean)">
	<summary>
 Méthode qui affecte la disponibilite passé en paramètre
 </summary>
	<param name="dispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.AssuranceConjointePermise(IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 fonction qui nous permet de savoir si la protection peut être prise en conjointe
 </summary>
	<param name="protectionDP"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserConcept">
	<summary>
 Méthode qui initialise le concept interdit
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserOptionDeces(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Méthode qui initialise la prestation de décès permise
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserTypeAssurance">
	<summary>
 Méthode qui initialise le paramètre TypeAssurancePermis
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserParametresProtections">
	<summary>
 Méthode qui boucle sur toutes les protections de l'assurés ordinal et setter les paramètres généraux
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserOptionPermise(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Méthode qui initialise le membre privé _optionPermise qui permet de statuer si on
 peut prendre une option pour l'assuré en cours
 </summary>
	<param name="protection"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserParametreCapitalAssure(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Méthode qui accumule les capitals d'assurance vie et maladie grave
 </summary>
	<param name="protection"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserNumeroAssureEnfant(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Méthode qui initialise si nécessaire le numéro de protection enfant
 </summary>
	<param name="protection"></param>
	<remarks>On fait ceci car on ne peut pas avoir une protection enfants 
 sur l'assuré 1 et une autre sur l'assuré 2</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserSurprimes(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Méthode qui initialise le paramètre _surprimeConjointe et la collection _idIndividusSurprimes
 </summary>
	<param name="protection"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserNiveleEpargne(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Méthode qui initialise le paramètre _presenceNiveleEpargne
 </summary>
	<param name="protection"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserProtectionsInterne(System.Boolean)">
	<summary>
 Méthode pour initialiser la collection de protections à tester
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.InitialiserLienProtectionBase(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Initialise la propriété LienProtectionBase de la liste des protections à tester
 </summary>
	<param name="lienProtectionBase"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierParametresGeneraux(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 On vérifie les paramètres généraux avant d'aller boucler sur toutes les protections
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierPlanUsageInterne(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Cette méthode vérifie la disponibilité selon la configuration spéciales. On vérifie si la clé
 correspondant au plan Illus est dans les registres sous la branche "HKEY_CURRENT_USER\Software\Interface Suite Configuration"
 et contient "Y".
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierBannierePSMIP(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire la banniere PSMIP
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierTypeAssurance(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire le type d'assurance
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierTypeAssuranceContrat(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire le type d'assurance du contrat et pas celui de l'assuré
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierOptionDeces(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire la prestation décès des protections
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierOptionDecesContrat(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire la prestation décès du contrat
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierConcept(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Vérifie si le plan est disponible en fonction du concept.
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierDeuxDecesLiberePremierAdditionnelle(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire la prestation décès
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierAssurePrincipalAdditionnel(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire la disponibilité sur l'assuré princ ou add.
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierNombreVies(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire le nombre de vies
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierTypeContractant(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire le nombre de vies
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierTypeCoutOption(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire le type de cout
 </summary>
	<param name="infoDispo"></param>
	<remarks>Cette validation est seulement pour les options</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierNumeroAssureEnfant(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire le numéro des protections enfants
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierNumeroAssureContractant(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire le numéro d'assuré (pour les garanties du contractants)
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierDecesContractant(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie si nécessaire les critères pour les garanties du contractant
 qui sont du type EPD
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierAssuranceConjointePermise(IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui fait la vérification si on peut prendre une protection en conjointe
 </summary>
	<param name="protectionDP">la protection</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierParametresParProtection(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration)">
	<summary>
 Méthode qui vérifie protection par protection si elle peut-être ajouté si nécessaire
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierAgeAssureCouvertPrincipal(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui vérifie l'âge de l'assuré couvert et de l'assuré principal
 </summary>
	<param name="infoDispo"></param>
	<param name="protectionDP"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierEmissionOption(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection@)">
	<summary>
 Méthode qui vérifie la disponibilité des options
 </summary>
	<param name="infoDispo"></param>
	<param name="protectionDP"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierCapital(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui vérifie si nécessaire la présence de capital assurance vie si nécessaire
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierCapitalProtectionBase(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui vérifie le capital de la protection à laquelle la protection est attachée
 </summary>
	<param name="infoDispo"></param>
	<remarks>Doit servir seulement pour l'avenant de prestation majorée dans Transition</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierSurprimeProtectionBase(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui vérifie les surprimes de la protection à laquelle la protection est attachée
 </summary>
	<param name="infoDispo"></param>
	<remarks>Doit servir seulement pour l'avenant de prestation majorée dans Transition</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierAvenantProtectionBase(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui vérifie les avenant relié à une protection de base
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierAvenantAutreProtectionBaseAssure(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui vérifi si un avenant existe déjà sur une autre protection de base du même assuré
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierAge(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui vérifie l'âge de la protection
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierAgeContractant(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui vérifie qu'au moins un assuré est dans les limites d'âge si nécessaire
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierAssurable(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui vérifie qu'au moins un assuré assurable peut-avoir la protection si nécessaire
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan.VerifierSurprimes(IAFG.IA.VI.UtilitairesDonneesVie.RetourPlanIllustration,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection)">
	<summary>
 Méthode qui vérifie que les assurés de la protection n'ont pas de surprimes si la protection
 ne le permet pas, seulement si nécessaire
 </summary>
	<param name="infoDispo"></param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlan">
	<summary>
 Classe de type Service qui retourne la disponibilité d'un plan illustration.
 Le tout se fait via la fonction publique EstDisponible qui reçoit un 
 plan illustration (l'ENUMs et non la string) en paramètre.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueExigencesMedicales.#ctor">
	<summary>
 Constructeur
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueExigencesMedicales.DialogueExigencesMedicales_Load(System.Object,System.EventArgs)">
	<summary>
 Ouverture de la fenêtre des exigences médicales
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueExigencesMedicales.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur clique sur la DWPrincipale
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueExigencesMedicales.lienExigences_Click(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur clique sur le lien des exigences
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueExigencesMedicales.lienExigences_MouseEnter(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur fait passé le curseur au dessus du lien des exigences
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueExigencesMedicales.lienExigences_MouseLeave(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur fait sortir le curseur d'au dessus du lien des exigences
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueExigencesMedicales.ObtenirInformationExigences(System.String@)">
	<summary>
  Fonction qui retourne la string qui contient l'ensemble des informations des exigences médicales
 </summary>
	<param name="exigence">Retourne les exigence médicales des assurés</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.SetUp">
	<summary>
 Utilisé pour ajouter du code à exécuter AVANT chaque test.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TearDown">
	<summary>
 Utilisé pour ajouter du code à exécuter APRÈS chaque test.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterAjoutAssure">
	<summary>
 Teste pour être sur que si on ajoute un assuré, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterAjoutContractant">
	<summary>
 Teste pour être sur que si on ajoute un assuré, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterAjoutProtection">
	<summary>
 Teste pour être sur que si on ajoute un assuré, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterAjoutSurprime">
	<summary>
 Teste pour être sur que si on ajoute un assuré, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterCasSimple">
	<summary>
 Teste pour être sur que si on ne change rien, on ne reload pas
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementAge">
	<summary>
 Teste pour être sur que si on change l'âge on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementDateDeNaissance">
	<summary>
 Teste pour être sur que si on change la date de naissance, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementNumeroAssure">
	<summary>
 Teste pour être sur que si on change le numéro d'assuré on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementAssurabilite">
	<summary>
 Teste pour être sur que si on change l'assurabilité d'un assuré on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementPlan">
	<summary>
 Teste pour être sur que si on le plan d'une protection, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementMontantTotal">
	<summary>
 Teste pour être sur que si on modifie le montantTotal d'une protection, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementOptionDeces">
	<summary>
 Teste pour être sur que si on modifie l'option au décès d'une protection, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementTypeAssurance">
	<summary>
 Teste pour être sur que si on modifie le type d'assurance d'une protection, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementTypeMortalite">
	<summary>
 Teste pour être sur que si on modifie le type de mortalite d'une protection, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementConcept">
	<summary>
 Teste pour être sur que si on modifie le concept, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementNbrVies">
	<summary>
 Teste pour être sur que si modifie le nombre de vies, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.DisponibilitePlanTest.TesterChangementsAucunImpact">
	<summary>
 Teste pour être sur que si modifie le nombre de vies, on reload
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssure.#ctor(System.Int32,System.Boolean)">
	<summary>
 Constructeur de la classe.
 </summary>
	<param name="age">L'âge de l'assuré</param>
	<param name="assurable">Le paramètre d'assurabilité (oui ou non)</param>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssure.Id">
	<summary>
 Propriété Id qui est la même que dans la classe de proposition
 </summary>
	<value>La valeur</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssure.Age">
	<summary>
 On retourne l'âge que nous avons initialisé dans le constructeur de la classe
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssure.EstAssurable">
	<summary>
 On retourne la paramètre d'assurabilité initialisé dans le constructeur de la classe
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssure.DateNaissance">
	<summary>
 On retourne Date.MinValue car le service n'a pas besoin de la date de naissance.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssure">
	<summary>
 Classe utilitaire pour le service DisponibilitePlan. Cette classe
 représente un assure sur une protection. 
 </summary>
	<remarks>Elle implémente l'interface IAFG.IA.VI.AF.PDFs.IAssure du projet IAFG.IA.VI.AF.Proposition.</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.IServiceFormatsExcel.Initialise">
	<summary>
 Initialise le fournisseur de formats Excel.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Services.IServiceFormatsExcel">
	<summary>
 Définit l'interface du fournisseur de formats Excel.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.#ctor(IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance,IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssures)">
	<summary>
 Constructeur de la classe
 </summary>
	<param name="typeAssurance">Le type d'assurance de la protection</param>
	<param name="assuresDP">La collection d'assurés de la protection</param>
	<remarks></remarks>
</member><member name="F:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection._protectionPDF">
	<summary>
 On se garde/crée une protection de type IAFG.IA.VI.AF.PDFs.Protection pour
 avoir toutes les facilités du PDF des protections
 </summary>
	<remarks></remarks>
</member><member name="F:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection._assuresDP">
	<summary>
 Un variable pour garder les assurés de la protection
 </summary>
	<remarks></remarks>
</member><member name="F:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection._disponible">
	<summary>
 Membre interne qui indique si elle est disponible
 </summary>
	<remarks></remarks>
</member><member name="F:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection._plan">
	<summary>
 Membre interne qui indique le plan de la protection
 </summary>
	<remarks></remarks>
</member><member name="F:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection._typeAssurance">
	<summary>
 Membre interne qui indique le type d'assurance (Individuelle, 1er décès ...)
 </summary>
	<remarks></remarks>
</member><member name="F:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection._lienProtectionBase">
	<summary>
 Membre interne pour garder le lienProtectionBase s'il est passé au constructeur
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.ProtectionPDF">
	<summary>
 Propriété qui retourne la protection PDF de la protection en cours.
 </summary>
	<returns>La classe utilitaires du PDF pour les protections</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.Age">
	<summary>
 Return l'âge de la protection
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.Assures">
	<summary>
 Retourne la collection des assurés
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.CodeProtection">
	<summary>
 On retourne par défaut NonApplicable car le service
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.DateEmission">
	<summary>
 On retourne par défaut Today car le service de disponibilité évalue toujours l'émission de la
 protection en date du jour
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.DateVersionProduit">
	<summary>
 On retourne la date de version du produit courant car à ce stade il n'est pas nécessaire d'être exactement sur le bon barème de prime car
 cette classe ne fait pas de calcul de prime.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.DateLiberationSysteme">
	<summary>
 On retourne par défaut Nothing car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.DateMaturiteSysteme">
	<summary>
 On retourne par défaut NonApplicable car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.EtatProtection">
	<summary>
 On retourne par défaut Nouveau car le service de disponibilité évalue toujours l'émission de la
 protection avec le statut nouveau.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.LienProtectionBase">
	<summary>
 On retourne par défaut Nothing car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.Disponible">
	<summary>
 Propriété pour indiquer si la protection est disponible ou non.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.Plan">
	<summary>
 On retourne le plan que l'on a initialisé dans le constructeur
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.TypeAssurance">
	<summary>
 On retourne le type d'assurance que l'on a initialisé dans le constructeur
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.TypeMortalite(System.Boolean)">
	<summary>
 On retourne par défaut NonApplicable car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.OptionDePaiementAcc(System.Boolean)">
	<summary>
 On retourne par défaut Nothing car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.OptionAuDecesEmission">
	<summary>
 On retourne par défaut NonApplicable car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.LienProtectionBaseContrat">
	<summary>
 On retourne par défaut Nothing car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.ProtectionBaseContrat">
	<summary>
 On retourne par défaut Nothing car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.TypeOption">
	<summary>
 On retourne par défaut Nothing car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.ProtectionOACA">
	<summary>
 On retourne par défaut Nothing car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.ModifierPlan(System.String)">
	<summary>
 Méthode qui permet de changer le plan de la protection
 </summary>
	<param name="plan"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.SetLienProtectionBase(IAFG.IA.VI.AF.Proposition.Protection)">
	<summary>
 Permet de forcer la propriété LienProtectionBase
 </summary>
	<param name="lienProtectionBase"></param>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.Periode">
	<summary>
 On retourne par défaut 0I car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.TauxInteret">
	<summary>
 On retourne par défaut 0.0R car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.TypeCapital">
	<summary>
 On retourne par défaut Inconnu car le services
 DisponibilitePlan ne se sert pas de cette propriété
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection.Proposition">
	<summary>
 Retourne nothing car on a pas besoin
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanProtection">
	<summary>
 Classe utilitaire pour le service DisponibilitePlan. Cette classe
 représente une protection 
 </summary>
	<remarks>Elle implémente l'interface IAFG.IA.VI.AF.PDFs.IAssures du projet IAFG.IA.VI.AF.Proposition.</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.#ctor">
	<summary>
 Constructeur de la classe 
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.#ctor(System.Int32)">
	<summary>
 Constructeur de la classe 
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.PassageParametre">
	<summary>
 Liste des paramètres string
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.PassageParamBool">
	<summary>
 Liste des paramètres boolean
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.ButtonAnnuler_Click(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient lorsque l'utilisateur clique sur le bouton Annuler
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.DialogueContractant_Load(System.Object,System.EventArgs)">
	<summary>
 Chargement de la fenêtre DialogueContractant
 </summary>
	<param name="sender">Objet ayant levé l'événement</param>
	<param name="e">Arguments de l'objet ayant levé l'événement. N'est pas utilisé</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'événement Click de la DataWindowPrincipale.</summary>
	<isnew>2008-05-12</isnew>
	<param name="sender">Objet ayant levé l'événement.</param>
	<param name="e">Arguments de l'objet ayant levé l'événement.
 Dans ce cas, on utilise le nom du contrôle de la datawindow.</param>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.DataWindowPrincipale_ItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'événement ItemChanged de la DataWindowPrincipale
 </summary>
	<param name="sender">Objet ayant levé l'événement</param>
	<param name="e">Arguments de l'objet ayant levé l'événement.
 Dans ce cas, on utilise le nom du contrôle de la colonne de Datawindow</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.DataWindowPrincipale_ItemError(System.Object,Sybase.DataWindow.ItemErrorEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'événement 
 ItemError de la DataWindowPrincipale.</summary>
	<isnew>2008-04-01</isnew>
	<param name="sender">Objet ayant levé l'événement.</param>
	<param name="e">Arguments de l'objet ayant levé l'événement.  Dans ce 
 cas, on utilise le nom du contrôle de la colonne de Datawindow.</param>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.DataWindowPrincipale_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 L'évenement MouseMOve de la DatawindowPrincipale de modifier la couleur de l'objet sous la souris
 </summary>
	<param name="sender">Objet ayant levé l'événement</param>
	<param name="e">Arguments de l'objet ayant levé l'événement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.InitValeurs">
	<summary>
 Cette fonction initialise les valeurs contenant dans cette fenêtre
 </summary>
	<returns>Le nombre de contractant non assuré</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.GererErreurDuDossier">
	<summary>
 Gestion des erreurs du gestionnaire de dossier.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.AppliquerChangements(System.Boolean@)">
	<summary>
 Cette fonction applique les changements effectués dans la fenêtre des contractants.
 </summary>
	<param name="pConceptReset">On le mets à TRUE si le choix du concept a été ré-initialisé</param>
	<returns>
 TRUE: On retourne TRUE si l'onglet protection doit être rechargé
 FALSE: On retourne FALSE si l'onglet protection n'a pas besoin d'être reloadé
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.SupprimerContractant(System.Int32,System.Boolean)">
	<summary>
 Cette fonction supprime un contractant.
 </summary>
	<param name="pRow">La rangé de la datawindow à supprimer</param>
	<param name="pNeedToConfirm">Indique si nous devons faire confirmer l'agent avant la suppression</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.ConfirmeChangementACorpo(System.String)">
	<summary>
 Cette fonction demande à l'agent de confirmer (si nécessaire) le changement de type de contractant.
 </summary>
	<param name="pIndividuId">ID du nouveau contractant tentatif.</param>
	<returns>
 TRUE: On retourne TRUE le changement peut être effectué.
 FALSE: On retourne FALSE l'agent a annulé le changement de type.
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.ValiderChangement">
	<summary>
 Cette fonction effectue des validations sur le type de contractant
 </summary>
	<returns>
 TRUE si les changements sont valide.
 FALSE si les changements ne sont pas valide.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.UnloadData(System.Object)">
	<summary>
 Cette fonction fait la gestion de la fermeture de la fenêtre et de l'enregistrement des informations.
 </summary>
	<param name="sender">Objet ayant levé l'événement</param>
	<returns>
 Retourne True si réussi,
 false sinon
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
	<summary>
 Traite une touche de commande.
 </summary>
	<param name="msg">System.Windows.Forms.Message, passé par référence, qui représente le message de fenêtre à traiter.</param>
	<param name="keyData">Une des valeurs System.Windows.Forms.Keys qui représente la touche à traiter. </param>
	<returns>True si le caractère a été traité par cette méthode; sinon False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.GererChampsContractant">
	<summary>
 Cette méthode fait la gestion de la visibilité ou de la disponibilité
 des champs de la datawindow des infos du contractant
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.InsertDefaultValues(System.Int32,System.String)">
	<summary>
 Cette fonction permet d'insérer les valeurs par défaut ou les valeurs d'un individu 
 dans la rangée passée en paramètre.  Les valeurs par défaut sont fournies par le
 service de pilotage alors que les valeurs d'un individu sont obtenues grâce à 
 son ID contenu dans la variable pTypeContractant.</summary>
	<isnew>2008-05-12</isnew>
	<param name="pRow">Le numéro de la rangée dans laquelle 
 nous devons insérer les valeurs par défaut.</param>
	<param name="pTypecontractant">Le type de contractant pour 
 lequel nous allons insérer des valeurs par défaut (Il faut 
 passer l'ID de l'individu pour un assuré).</param>
	<remarks>Passer l'ID de l'individu pour un assuré.</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant.ChargerListeAssure">
	<summary>
 Charge la liste de choix de contractant avec tous les assurés disponibles.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueContractant">
	<summary>
 Gestion des informations du contractant.</summary>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 =====================================================================
 Martel, Guy       2007-06-11   Création de la classe
 Tremblay, Victor  2008-04-01   Correction de l'anomalie #638 : 
                                assigner la valeur convertie de la 
                                date en VB dans le champ.
 Tremblay, Victor  2008-04-24   Correction de la fonction 
                                InsertIndividuValues.
 Tremblay, Victor  2008-05-06   Correction de la fonction 
                                DataWindowPrincipale_PostItemChanged.
 Tremblay, Victor  2008-05-12   Correction de la gestion de l'ajout, 
                                de la modification ou du remplacement 
                                des contractants.
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.#ctor(System.String,System.String)">
	<summary>
 Constructeur de la classe DialogueGarantiesDefaut
 </summary>
	<param name="pCicDefaut">Garantie CIC par défaut</param>
	<param name="pFaDefaut">Garantie FA par défaut</param>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.Cic_defaut">
	<summary>
 Propriété de la valeur CIC par défaut
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.Fa_defaut">
	<summary>
 Propriété de la valeur FA par défaut
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.Disponible">
	<summary>
 Propriété de la valeur Disponible 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.ParamRetourGarantieEpic">
	<summary>
 Propriété de la valeur ParamRetourGarantieEpic
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.ParamRetourGarantieFa">
	<summary>
 Propriété de la valeur ParamRetourGarantieFa
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.Items">
	<summary>
 Énum des items sur la datawindow
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.Controle">
	<summary>
 Contrôles sur la datawindow
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.Messages">
	<summary>
 Énumération contenant le nom des messages
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.DialogueGarantiesDefaut_Load(System.Object,System.EventArgs)">
	<summary>
 Chagement de la fenêtre DialogueGarantieDefaut
 </summary>
	<param name="sender">Objet ayant levé l'événement</param>
	<param name="e">Arguments de l'objet ayant levé l'événement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click de la DataWindowPrincipale
 </summary>
	<param name="sender">Objet ayant levé l'événement</param>
	<param name="e">Arguments de l'objet ayant levé l'événement. Dans ce cas le nom du controôle de la DatawindowPrincipale</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut.UnloadData(System.Object)">
	<summary>
 Cette fonction fait la gestion de la fermeture de la fenêtre et de l'enregistrement
 des informations.
 </summary>
	<param name="sender">Objet ayant levé l'événement</param>
	<returns>True si c'est un succès</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueGarantiesDefaut">
	<summary>
 La dialogue GarantieDefault permet de choisir quelle garantie doit s'afficher pas défaut
 </summary>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 =====================================================================
 Martel, Guy       2007-06-07   Création de la classe
 </pre>
	</history>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.GestionConceptia.ListeStrategies">
	<summary>
 Propriété Get ou Set de la liste de concepts
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.GestionConceptia.ListeColonnes">
	<summary>
 Propriété Get ou Set de la liste de concepts
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.GestionConceptia.XmlConceptia">
	<summary>
 Propriété protected du DOM de conceptia
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionConceptia.ChargerConceptia(System.String)">
	<summary>
 Méthode qui charge les informations sur les concepts
 </summary>
	<param name="filePath">Chemin du fichier boni</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionConceptia.CompareStrategies(IAFG.IA.IL.AP.IllusVie.Services.Strategie,IAFG.IA.IL.AP.IllusVie.Services.Strategie)">
	<summary>
 fonction qui retourne le résultats de la fonction System.String.Compare avec le nom 
 des 2 stratégies
 </summary>
	<param name="item1"></param>
	<param name="item2"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionConceptia.FindColumn(System.Int32)">
	<summary>
 Fonction qui retourne la colonne selon l'id passé en paramètre
 </summary>
	<param name="id"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Services.GestionConceptia">
	<summary>
 Objet de gestion des bonis - Couche "affaire"
 </summary>
	<remarks></remarks>
	<history>
		<pre>
 Auteur             Date         Description
 =====================================================================
 Martel,  Guy       2007-05-23   Programmation initiale 
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.IsProtectionDispoEcranProt(System.String,System.Int32)">
	<summary>
 Fonction qui permet de savoir si la protection interrogée est disponible dans la fenêtre de protection
 </summary>
	<param name="idRegles">L'identifiant de la règle d'affaire</param>
	<param name="concept">le numéro du concept de l'illustration en cours</param>
	<returns>True = Protection disponible, False = Protection non-disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValidationAssure(System.String)">
	<summary>
 Cette fonction permet d'obtenir si nous faisons les validations
 sur l'id de l'assuré ou du contractant
 </summary>
	<param name="idRegles">L'identifiant de la règle d'affaire</param>
	<returns>True = On se fit sur l'id de l'assuré pour les validations
 False = On se fit sur l'id du contractant pour les validation</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirCodeErreur(System.String)">
	<summary>
 Cette fonction permet d'obtenir le code du message d'erreur
 pour l'erreur de validation que nous venons d'avoir
 </summary>
	<param name="idRegles">L'identifiant de la regles d'affaire pour lequel nous voulons 
 obtenir le code d'erreur</param>
	<returns>Identifiant du code du message d'erreur</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirIndexRegleAffaire(System.String)">
	<summary>
 Cette fonction permet d'obtenir l'index de l'objet demandé dans la liste des
 règles d'affaires
 </summary>
	<param name="id">Id de l'objet demandé</param>
	<returns>Index de l'objet dans la liste</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirObjetRegleAffaire(System.String)">
	<summary>
 Cette fonction retourne un l'objet ReglesAffaireBase correspondant au Id passé
 en paramètre
 </summary>
	<param name="id">Id de l'objet demandé</param>
	<returns>Objet de type ReglesAffaireBase trouvé dans la liste</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.EnregistrerReglesAffaire(System.String,System.String,System.String,System.String)">
	<summary>
 Cette méthode permet d'enregistrer un objet de règles d'affaire dans le gestionnaire
 </summary>
	<param name="id">L'identifiant de la règles d'affaire que nous voulons
 enregistrer. Dans le cas d'un objet de règles d'affaire d'une couverture, cet argument
 contiendrait idéalement le code de plan de la couverture</param>
	<param name="espaceNom">Le namespace complet de la classe que l'ont veut instancier</param>
	<param name="nom">Le nom de l'objet contenant les régles d'affaires que nous
 désirons enregistrer. Cet objet doit être un descendant de ReglesAffaireBase</param>
	<param name="nomAssembly">Le nom de l'assembly qui contient la classe</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.Initialiser">
	<summary>
 Cette méthode permet de faire les initialisations nécéssaire pour la gestion
 d'un produit. Le code doit être placé dans le déscendant de cet objet
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValiderValeur(System.String,System.String,System.DateTime,System.Boolean)">
	<summary>
 Cette fonction permet de valider la valeur passée en paramètre en faisant appel à l'objet 
 des règles d'affaires
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à qui nous voulons
 faire appel pour la validation</param>
	<param name="idItem">Le nom de l'objet pour lequel nous devons valider la date</param>
	<param name="valeurItem">La valeur de type Date à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValiderValeur(System.String,System.String,System.Decimal,System.Boolean)">
	<summary>
 Cette fonction permet de valider la valeur passée en paramètre en faisant appel à l'objet 
 des règles d'affaires
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à qui nous voulons
 faire appel pour la validation</param>
	<param name="idItem">Le nom de l'objet pour lequel nous devons valider la date</param>
	<param name="valeurItem">La valeur de type Decimal à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValiderValeur(System.String,System.String,System.Double,System.Boolean)">
	<summary>
 Cette fonction permet de valider la valeur passée en paramètre en faisant appel à l'objet 
 des règles d'affaires
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à qui nous voulons
 faire appel pour la validation de la date</param>
	<param name="idItem">Le nom de l'objet pour lequel nous devons valider la date</param>
	<param name="valeurItem">La valeur de type Double à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValiderValeur(System.String,System.String,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de valider la valeur passée en paramètre en faisant appel à l'objet 
 des règles d'affaires
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à qui nous voulons
 faire appel pour la validation</param>
	<param name="idItem">Le nom de l'objet pour lequel nous devons valider la date</param>
	<param name="valeurItem">La valeur de type Integer à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValiderValeur(System.String,System.String,System.Int64,System.Boolean)">
	<summary>
 Cette fonction permet de valider la valeur passée en paramètre en faisant appel à l'objet 
 des règles d'affaires
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à qui nous voulons
 faire appel pour la validation</param>
	<param name="idItem">Le nom de l'objet pour lequel nous devons valider la date</param>
	<param name="valeurItem">La valeur de type Long à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValiderValeur(System.String,System.String,System.Single,System.Boolean)">
	<summary>
 Cette fonction permet de valider la valeur passée en paramètre en faisant appel à l'objet 
 des règles d'affaires
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à qui nous voulons
 faire appel pour la validation</param>
	<param name="idItem">Le nom de l'objet pour lequel nous devons valider la date</param>
	<param name="valeurItem">La valeur de type Single à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValiderValeur(System.String,System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de valider la valeur passée en paramètre en faisant appel à l'objet 
 des règles d'affaires
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à qui nous voulons
 faire appel pour la validation</param>
	<param name="idItem">Le nom de l'objet pour lequel nous devons valider la date</param>
	<param name="valeurItem">La valeur de type String à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirValeurDefautDecimal(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur par défaut pour un item à partir
 de l'objet de réegles d'affaires donc l'identifiant est passé en paramètre
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à partir
 duquel nous voulons obtenir la valeur par défaut</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir la valeur
 par défaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en
 vigueur</param>
	<returns></returns>
	<remarks>Valeur de type Decimal contenant la valeur par défaut de l'item</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirValeurDefautInt(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur par défaut pour un item à partir
 de l'objet de réegles d'affaires donc l'identifiant est passé en paramètre
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à partir
 duquel nous voulons obtenir la valeur par défaut</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir la valeur
 par défaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en
 vigueur</param>
	<returns></returns>
	<remarks>Valeur de type Integer contenant la valeur par défaut de l'item</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirValeurDefautLong(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur par défaut pour un item à partir
 de l'objet de réegles d'affaires donc l'identifiant est passé en paramètre
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à partir
 duquel nous voulons obtenir la valeur par défaut</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir la valeur
 par défaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en
 vigueur</param>
	<returns></returns>
	<remarks>Valeur de type Long contenant la valeur par défaut de l'item</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirValeurDefautString(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur par défaut pour un item à partir
 de l'objet de réegles d'affaires donc l'identifiant est passé en paramètre
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à partir
 duquel nous voulons obtenir la valeur par défaut</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir la valeur
 par défaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en
 vigueur</param>
	<returns></returns>
	<remarks>Valeur de type String contenant la valeur par défaut de l'item</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirValeurMaxDecimal(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur maximale pour un item à partir de l'objet 
 d'affaire donc l'identifiant est passé en paramètre
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à partir duquel
 nous voulons obtenir la valeur maximale</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir la valeur 
 maximale</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Decimal représentant la valeur maximale de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirValeurMaxInt(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur maximale pour un item à partir de l'objet 
 d'affaire donc l'identifiant est passé en paramètre
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à partir duquel
 nous voulons obtenir la valeur maximale</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir la valeur 
 maximale</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Integer représentant la valeur maximale de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirValeurMaxLong(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur maximale pour un item à partir de l'objet 
 d'affaire donc l'identifiant est passé en paramètre
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à partir duquel
 nous voulons obtenir la valeur maximale</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir la valeur 
 maximale</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Long représentant la valeur maximale de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirValeurMinDecimal(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur minimale pour un item à partir de l'objet 
 d'affaire donc l'identifiant est passé en paramètre
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à partir duquel
 nous voulons obtenir la valeur minimale</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir la valeur 
 minimale</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Decimal représentant la valeur minimale de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ObtenirValeurMinInt(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur minimale pour un item à partir de l'objet 
 d'affaire donc l'identifiant est passé en paramètre
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaires à partir duquel
 nous voulons obtenir la valeur minimale</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir la valeur 
 minimale</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Integer représentant la valeur minimale de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.SectionVisible(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir le statut de visibilité d'une section selon
 les règles d'affaires contenu dans l'objet donc l'identifiant est passé en
 paramètre
 </summary>
	<param name="idRegles">L'identifiant de l'objet des règles d'affaire à partir duquel
 nous oulons obtenir le statut de visibilité.</param>
	<param name="idItem">Le nom de l'objet pour lequel nous devons obtenir le statut de visibilité</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la section est visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ItemVisible(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir le statut de visibilité d'un item 
 (ordinairement un champ) selon les règles d'affaires contenu dans l'objet donc 
 l'identifiant est passé en paramètre duquel nous voulons obtenir 
 le statut de visibilité</summary>
	<param name="idRegles">L'identifiant de l'objet des regles d'affaire à partir
 duquel nous voulons obtenir le statut de visibilité</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir le 
 statut de visibilité</param>
	<param name="isInForce"></param>
	<returns>True si l'item est fiaible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ItemDisponible(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir le statut de disponibilité d'un item 
 (ordinairement un champ) selon les règles d'affaires contenu dans l'objet donc 
 l'identifiant est passé en paramètre duquel nous voulons obtenir 
 le statut de visibilité</summary>
	<param name="idRegles">L'identifiant de l'objet des regles d'affaire à partir
 duquel nous voulons obtenir le statut de disponibilité</param>
	<param name="idItem">Le nom de l'objet pour lequel nous voulons obtenir le 
 statut de disponibilité</param>
	<param name="isInForce"></param>
	<returns>True si l'item est disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.NbVieVisible(System.String,System.String,System.String)">
	<summary>
 Cette fonction permet de déterminer si le champ "Nombre de vie" doit être visible ou non
 </summary>
	<param name="idRegles">L'identifiant de la regles d'affaire qui contient la logique de détermination de visibilité</param>
	<param name="idItem">Le nom de l'item (champ) pour lequel nous devons déterminer la visibilité</param>
	<param name="typeProtection">Argument contenant la valeur du type de protection</param>
	<returns>True si le champ doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValiderCommission(System.Decimal)">
	<summary>
 validation de la commission
 </summary>
	<param name="valeur">la valeur décimale à valider</param>
	<returns>0 : valeur rejetée, 1 : valeur acceptée, 2 : valeur acceptée mais avertissement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValideCriteresConcept(System.Int32,System.String,System.String)">
	<summary>
 Cette fonction permet de déterminer si le concept passé en 
 paramêtre est valide selon la validation et la valeur passée  
 en argument
 </summary>
	<param name="concept">Le type de concept pour lequel nous devons vérifier la
 validité</param>
	<param name="validation">Quel validation voulons nous faire</param>
	<param name="valeur">Valeur selon laquel nous devons vérifier la 
 validité du concept</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ValiderAgeConfig(System.Int32,System.String)">
	<summary>
 fonction pour valider l'age entré dans la config
 </summary>
	<param name="age">age a valider</param>
	<returns>Valeur de l'énumération statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.GetCompteTransitoire">
	<summary>
 Cette fonction permet de déterminer Le nom du compte transitoire que l'on force si TAI non-admissible au 
 compte transitoire
 </summary>
	<returns>Le nom du compte transitoire</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.IsProtectionDisponible(System.String,System.Int32,System.Decimal[],System.Decimal[],System.Decimal,System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32[],System.String[],System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.String[],System.Int32,System.Decimal,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si les conditions de disponibilité de la protection sont rempli
 </summary>
	<param name="idRegles">L'identifiant de la regles d'affaire qui contient la logique de détermination de l'option</param>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous vérifions
 la disponibilité de la protection</param>
	<param name="capitalAssureVie">Le montant de capital assuré des protections "vie" de chaque individu disponible pour la protection</param>
	<param name="capitalAssureMg">Le montant de capital assuré des protections "Maladie grave" de chaque individu disponible pour la protection</param>
	<param name="primeMinimum">La prime minimum du contrat</param>
	<param name="ageIllus">L'age de l'illustration</param>
	<param name="nbContractants">Le nombre d'items contenu dans la liste des âges des contractants</param>
	<param name="ageContractant">Liste qui contient l'âge de chacun des contractants</param>
	<param name="nbAssuresCj">Le nombre d'items contenu dans la liste des âges des assurés conjoint de la protection</param>
	<param name="ageAssuresCj">Vecteur qui contient l'âge de chacun des assurés 
 conjoint de la protection.</param>
	<param name="assurable">Vecteur des indicateurs d'assurabilité des assurés
 conjoint</param>
	<param name="typeProtection">Le type de protection (Individuelle ou conjointe)</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="nbAssuresIllus">Le nombre d'assuré dans l'ilustration</param>
	<param name="applicantIsCorp">Indicateur qui spécifie si le contractant est une corporation</param>
	<param name="isApplicantPresent">Indicateur de la présence d'un contractant pour l'assuré courant</param>
	<param name="typeCout">Le type de coûts de la protection de base</param>
	<param name="isApplicantOther">Indicateur de la présence d'un contractant qui n'est pas un assuré</param>
	<param name="isSurprimePresent">Indicateur de la présence d'une protection surprimée</param>
	<param name="noAssureEnfant"> Le numéro de l'assuré qui détient des garanties enfant
 (ME ou MGE)</param>
	<param name="ageEquivalent">L'age équivalent</param>
	<param name="assurableContr">Liste des indicateurs d'assurabilité des contractants</param>
	<param name="nbVies">Le nombre d'assuré conjoint présent pour l'assuré 1
 lorsque nous sommes en assurance conjointe</param>
	<param name="montantBase">Le montant de capital de la protection de base</param>
	<param name="concept">Le concept</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en 
 vigueur.</param>
	<returns>True si les conditions de disponibilité de la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.IsProtectionDisponible(System.String,System.Int32,System.Decimal[],System.Decimal[],System.Decimal,System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32[],System.String[],System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32[],System.Int32,System.Decimal,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si les conditions de disponibilité de la protection sont rempli
 </summary>
	<param name="idRegles">L'identifiant de la regles d'affaire qui contient la logique de détermination de l'option</param>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous vérifions
 la disponibilité de la protection</param>
	<param name="capitalAssureVie">Le montant de capital assuré des protections "vie" de chaque individu disponible pour la protection</param>
	<param name="capitalAssureMg">Le montant de capital assuré des protections "Maladie grave" de chaque individu disponible pour la protection</param>
	<param name="primeMinimum">La prime minimum du contrat</param>
	<param name="ageIllus">L'age de l'illustration</param>
	<param name="nbContractants">Le nombre d'items contenu dans la liste des âges des contractants</param>
	<param name="ageContractant">Liste qui contient l'âge de chacun des contractants</param>
	<param name="nbAssuresCj">Le nombre d'items contenu dans la liste des âges des assurés conjoint de la protection</param>
	<param name="ageAssuresCj">Vecteur qui contient l'âge de chacun des assurés 
 conjoint de la protection.</param>
	<param name="assurable">Vecteur des indicateurs d'assurabilité des assurés
 conjoint</param>
	<param name="typeProtection">Le type de protection (Individuelle ou conjointe)</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="nbAssuresIllus">Le nombre d'assuré dans l'ilustration</param>
	<param name="applicantIsCorp">Indicateur qui spécifie si le contractant est une corporation</param>
	<param name="isApplicantPresent">Indicateur de la présence d'un contractant pour l'assuré courant</param>
	<param name="typeCout">Le type de coûts de la protection de base</param>
	<param name="isApplicantOther">Indicateur de la présence d'un contractant qui n'est pas un assuré</param>
	<param name="isSurprimePresent">Indicateur de la présence d'une protection surprimée</param>
	<param name="noAssureEnfant"> Le numéro de l'assuré qui détient des garanties enfant
 (ME ou MGE)</param>
	<param name="ageEquivalent">L'age équivalent</param>
	<param name="assurableContr">Liste des indicateurs d'assurabilité des contractants</param>
	<param name="nbVies">Le nombre d'assuré conjoint présent pour l'assuré 1
 lorsque nous sommes en assurance conjointe</param>
	<param name="montantBase">Le montant de capital de la protection de base</param>
	<param name="concept">Le concept</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en 
 vigueur.</param>
	<returns>True si les conditions de disponibilité de la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.IsCBXDeactivateVisible">
	<summary>
 Cette fonction indique si la case à cocher sur la page d'acceuil est visible ou non
 </summary>
	<returns>True si la protection est permise en base conjointe</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ProtInfo.NomPlan">
	<summary>
 Nom du plan
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ProtInfo.RegleAffaire">
	<summary>
 Règle d'affaire
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase.ProtInfo">
	<summary>
 Classe interne pour la gestion des protections - couche "affaire"
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Affaires.GestionProduitBase">
	<summary>
 Cette classe fait la gestion des règles d'affaires de la section 
 Illustration qui est commune à tous les produits.</summary>
	<isnew>2008-04-24</isnew>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 ===========================================================================
 Lachance, Dominik 2007-05-29   Création de la classe et des méthodes
 Tremblay, Victor  2008-04-24   Ajout de la règle d'affaires 
                                IsStatutVisibleAjoutAssureRetourPropo.
 </pre>
	</history>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.Statut">
	<summary>
 Cette énumération est utilisé pour les fonction retournant un statut
 particulier
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.Produit">
	<summary>
 Le produit
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionBase">
	<summary>
 Fonction qui permet de savoir si c'est une protection de base ( Genesis )
 </summary>
	<returns>True = c'est une protection de base / False = Ce n'est pas une protection de base</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionDispoEcranProt(System.Int32)">
	<summary>
 Fonction qui permet de savoir si la protection est disponible dans la fenêtre de protection
 </summary>
	<param name="concept">le numéro du concept de l'illustration en cours</param>
	<returns>True = Protection disponible, False = Protection non-disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirAgeMax2L1">
	<summary>
 Fonction pour obtenir l'âge Maximum lorsque le type d'assurance est 2e deces Libbéré au premier
 </summary>
	<returns>l'âge Maximum lorsque le type d'assurance est 2e deces Libbéré au premier</returns>
	<remarks>Codé dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirAgeMin2L1">
	<summary>
 Fonction pour obtenir l'âge Minimum lorsque le type d'assurance est 2e deces Libbéré au premier
 </summary>
	<returns>l'âge Minimum lorsque le type d'assurance est 2e deces Libbéré au premier</returns>
	<remarks>Codé dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionMultiterme">
	<summary>
 Fonction pour savoir s'il s'agit d'une protection Multiterme
 </summary>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsTypeCapitalDisponible(System.Int32,System.Int32,System.Int32)">
	<summary>
 Fonction pour savoir si le type de capital est disponible
 </summary>
	<param name="age">L'âge de l'assuré</param>
	<param name="typeAssurance"> le type d'assurance 0 = Individuelle ...</param>
	<returns>True = Type de capital disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionTransition">
	<summary>
 Fonction qui retourne s'il s'agit d'une protection de type Transition
 </summary>
	<returns>True = il s'agit d'une protection de type Transition
 False = il ne s'agit pas d'une protection de type Transition</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionTransitionEvolution">
	<summary>
 Fonction qui retourne s'il s'agit d'une protection de type Transition
 </summary>
	<returns>True = il s'agit d'une protection de type Transition
 False = il ne s'agit pas d'une protection de type Transition</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirTypeProtection">
	<summary>
 Fonction pour obtenir le type de protection de l'objet de règles d'affaires
 </summary>
	<returns>1=Base, 2=Étendue</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValidationAssure">
	<summary>
 Cette fonction permet d'obtenir si nous faisons les validations
 sur l'id de l'assuré ou du contractant
 </summary>
	<returns>True = On se fit sur l'id de l'assuré pour les validations
 False = On se fit sur l'id du contractant pour les validation</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirPlanIllusRemplacement(System.String)">
	<summary>
 Méthode qui retourne le planIllus de remplacement. Lorsqu'il ne reste qu'une
 protection et que celle-ci n'est plus valide.
 </summary>
	<param name="ancienPlanIllus">L'ancien planIllus</param>
	<returns>Retourne le nouveau planIllus pour la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsAvenantPrestationMajoree">
	<summary>
 Méthode qui permet de savoir si la protection est un avenant Prestation Majorée
 </summary>
	<returns>true = La protection est un avenant Prestation majorée,
 false = La protection n'est pas un avenant de Prestation majorée</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsCodePlanPilotagePE">
	<summary>
 Méthode qui permet de savoir si on doit gérer le code de plan via
 le service de pilotage de proposition électronique
 </summary>
	<returns>True = On doit générer le code de plan via le pilotage de PE,
 False = On doit générer le code de plan via la dll de code de plan</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsTransitionT100">
	<summary>
 Méthode qui permet d'obtenir si la protection est une protection
 de type Transition T100
 </summary>
	<returns>True = La protection est de type Transition T100
 False = La protection n'est pas de type Transition T100</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.AffecteNbrProtection">
	<summary>
 Méthode qui retourne si la protection affecte le calcul du nombre 
 de protections disponibles
 </summary>
	<returns>True = la protection affecte le calcul du nombre de protections disponible
 False = la protection n'affecte pas le calcul du nombre de protections disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderROP(System.String,System.Int32,System.String)">
	<summary>
 Méthode qui valide si le retour de primes (ROP) passé en paramètre est valide
 </summary>
	<param name="planIllusBase">Le planIllus de la protection de base</param>
	<param name="age">L'âge de l'assuré</param>
	<param name="ROP">Le code du retour de prime de la protection en cours</param>
	<returns>True = Le ROP est valide, False = le ROP est invalide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirTypeRemboursement(System.String,System.Int32)">
	<summary>
 Méthode pour obtenir la liste des retours de primes disponibles
 </summary>
	<param name="planIllus">le plan illus de la protection</param>
	<param name="ageAssure">L'âge de l'assuré</param>
	<returns>une liste contenant tous les choix de retour de primes</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsSameProtection(System.String)">
	<summary>
 Cette fonction retourne si le planIllus passé en paramètre est du même
 type que la protection de l'objet de la règle d'affaire.
 </summary>
	<param name="planIllus">Le planIllus pour lequel on veut savoir si il est du même
 type que la protection de l'objet de la règle d'affaire</param>
	<returns>True = les protections sont du même type, False = Ne sont pas du même type</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionDisponibleCmp(System.String,System.String,System.Int32)">
	<summary>
 Fonction pour savoir si la protection est disponible dans le comparatif pour le type
 de protection passée en paramètre.
 </summary>
	<param name="planIllusProtBase">Le planIllus de la protection de base</param>
	<param name="planIllusProt">Le planIllus de la protection à vérifier la disponibilité</param>
	<param name="age">l'âge de l'assuré</param>
	<returns>True = la protection est disponible, false = protection non-disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionIncluseCmp(System.String,System.Int32)">
	<summary>
 Fonction pour savoir si la protection est incluse dans le comparatif pour le type
 de protection passée en paramètre.
 </summary>
	<param name="age">l'âge de l'assuré</param>
	<returns>True = la protection est disponible, false = protection non-disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsAvenantTransition">
	<summary>
 Fonction pour savoir s'il s'agit d'un avenent transition
 </summary>
	<returns>True = Est un avenant Transition, false = n'est pas un avenant transition</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirProduit">
	<summary>
 fonction pour obtenir le produit
 </summary>
	<returns>le produit</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.Initialiser">
	<summary>
 Cette méthode permet de définir les initialisations nécessaire pour la gestion
 d'une règle d'affaire d'un produit. Le code doit être placé dans 
 le descendant de cet objet
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirCodeErreur">
	<summary>
 Cette fonction permet d'obtenir le code du message d'erreur
 pour l'erreur de validation que nous venons d'avoir
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirValeurDefautDecimal(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur par défaut pour un item donc l'identifiant est
 passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'objet pour lequel nous devons obtenir la valeur par
 défaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Decimal représentant la valeur par défaut de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirValeurDefautLong(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur par défaut pour un item donc l'identifiant est
 passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'objet pour lequel nous devons obtenir la valeur par
 défaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Long représentant la valeur par défaut de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirValeurDefautString(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur par défaut pour un item donc l'identifiant est
 passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'objet pour lequel nous devons obtenir la valeur par
 défaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type String représentant la valeur par défaut de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirValeurMaxDecimal(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur maximum pour un item donc l'identifiant est
 passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'objet pour lequel nous devons obtenir la valeur maximum</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Decimal représentant la valeur maximum de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirValeurMaxInt(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur maximum pour un item donc l'identifiant est
 passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'objet pour lequel nous devons obtenir la valeur maximum</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Integer représentant la valeur maximum de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirValeurMaxLong(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur maximum pour un item donc l'identifiant est
 passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'objet pour lequel nous devons obtenir la valeur maximum</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Long représentant la valeur maximum de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirValeurMinDecimal(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur minimum pour un item donc l'identifiant est
 passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'objet pour lequel nous devons obtenir la valeur minimum</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Decimal représentant la valeur minimum de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirValeurMinInt(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir la valeur minimum pour un item donc l'identifiant est
 passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'objet pour lequel nous devons obtenir la valeur minimum</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de type Integer représentant la valeur minimum de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderValeur(System.String,System.DateTime,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type Date passée en paramètre pour
 un item donc l'identifiant est également passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la date</param>
	<param name="valeurItem">La valeur qui doit être validée</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderValeur(System.String,System.Decimal,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type Decimal passée en paramètre pour
 un item donc l'identifiant est également passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la valeur</param>
	<param name="valeurItem">La valeur qui doit être validée</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statu</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderValeur(System.String,System.Double,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type Double passée en paramètre pour
 un item donc l'identifiant est également passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la valeur</param>
	<param name="valeurItem">La valeur qui doit être validée</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statu</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderValeur(System.String,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type Integer passée en paramètre pour
 un item donc l'identifiant est également passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la valeur</param>
	<param name="valeurItem">La valeur qui doit être validée</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statu</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderValeur(System.String,System.Int64,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type Long passée en paramètre pour
 un item donc l'identifiant est également passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la valeur</param>
	<param name="valeurItem">La valeur qui doit être validée</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statu</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderValeur(System.String,System.Single,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type Single passée en paramètre pour
 un item donc l'identifiant est également passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la valeur</param>
	<param name="valeurItem">La valeur qui doit être validée</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statu</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderValeur(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de valider une valeur de type String passée en paramètre pour
 un item donc l'identifiant est également passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons valider la valeur</param>
	<param name="valeurItem">La valeur qui doit être validée</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statu</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.SectionVisible(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir le statut de visibilité d'une section pour
 la règle d'affaire que représente cet objet
 </summary>
	<param name="idItem">Le nom de la section pour lequel nous désirons obtenir le statut
 de visilibité</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la section est visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ItemVisible(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir le statut de visibilité d'un item (champ) pour
 la règle d'affaire que représente cet objet
 </summary>
	<param name="idItem">Le nom de l'item (champ) pour lequel nous désirons obtenir le statut
 de visilibité</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si l'item est visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ItemDisponible(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir le statut de disponibilité d'un item (champ) pour
 la règle d'affaire que représente cet objet
 </summary>
	<param name="idItem">Le nom de l'item (champ) pour lequel nous désirons obtenir le statut
 de disponibilité</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si l'item est disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.TypeProtection">
	<summary>
 Cette fonction indique le type de la protection (couverture, avenant ou garantie)
 </summary>
	<returns>Type de protection ("1" = Couverture, "2" = Avenant, "3" = Garantie)</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsOption">
	<summary>
 Cette fonction indique si la protection, auquel ce objet de réegles d'affaurs est lié, 
 se trouve est une option de paiement rapide
 </summary>
	<returns>True si la protection est une option</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsGarantieContractant">
	<summary>
 Cette fonction indique si la protection, auquel cette objet de règles d'affaire est lié,
 est une garantie du contractant 
 </summary>
	<returns>True si la protection est une garantie du contractant</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsTypeCoutsOption(System.String)">
	<summary>
 Cette fonction indique si le type de coût passé en paramètre correspond à un
 coût avec option de paiement rapide
 </summary>
	<param name="typeCout">Le type de coût choisi par l'usager</param>
	<returns>True si le type de coût est un type avec option de paiement
 rapide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsMaladieGrave">
	<summary>
 Cette fonction indique si la protection, auquel cet objet de règles d'affaires est lié,
 est une protection avenant maladie grave
 </summary>
	<returns>True si la protection est une avenant maladie grave</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsGarantieContractantCorpo">
	<summary>
 Cette fonction indique si la protection, auquel cet objet de règles d'affaires est lié,
 est un garantie du contractant ou le contractant est une corporation
 </summary>
	<returns>True si la protection est une garantie du contractant</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsRevenuAppoint">
	<summary>
 Cette fonction indique si la protection, auquel cet objet de règles d'affaires est lié,
 est une protection avenant Revenu d'appoint
 </summary>
	<returns>True si la protection est une avenant Revenu d'appoint</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsDependantAssVie">
	<summary>
 Cette fonction indique si la protection, auquel cet objet de règles d'affaires est lié,
 est dépendante des montants des protections "vie"
 </summary>
	<returns>True si la protection est dépendante des montants des protections "vie"</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.CategorieRa(System.String)">
	<summary>
 Cette fonction indique la catégorie d'avenant Revenu d'appoint dont le code
 est passé en paramètre
 </summary>
	<param name="item">Le code de l'avenant RA pour lequel il faut retourner
 la catégorie</param>
	<returns>Catégorie d'avenant Revenu d'appoint ("1" = Accident, "2" = Accident et Maladie)</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsTypeCoutsOptionPermis(System.String,System.Int32)">
	<summary>
 Cette fonction indique si le type de coût passé en paramètre permet
 les options de paiement rapide
 </summary>
	<param name="typeCout">Le type de coût</param>
	<param name="age">L'âge de l'assuré ou l'âge équivalent en ass. conj.</param>
	<returns>True si le type de coût passé en paramètre est un coût qui permet
 les options de paiement rapide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsGarantieEnfant">
	<summary>
 Cette fonction indique si la protection, auquel cet objet de règles d'affaires est lié,
 est une garantie pour les enfants
 </summary>
	<returns>True si la protection est une garantie pour les enfants</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirTypeCoutOptionDefaut(System.String)">
	<summary>
 Cette fonction retourne le type coût avec option de paiement rapide qui est
 associé au type de coût passé en paramètre. Ex : Type de coût "Nivelée" retourne
 "Nivelée plus option"
 </summary>
	<param name="typeCoutDepart">Le type de coût de départ</param>
	<returns>Le type de coût avec option de paiement rapide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionVie">
	<summary>
 Cette fonction permet de vérifier si la couverture est 
 une couverture vie (T10, T20, Genesis1 etc.) 
 </summary>
	<returns>True si c'est une couverture vie</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsDependantMg">
	<summary>
 Cette fonction indique si la protection, auquel cet objet de règles d'affaires est lié,
 est dépendante des montants des protections "Maladie grave"
 </summary>
	<returns>True si la protection est dépendante des montants des protections
 "Maladie grave"</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsGarantieDeces">
	<summary>
 Cette fonction indique si la couverture, auquel cet objet de règles d'affaires est lié,
 est une garantie de type décès accidentel
 </summary>
	<returns>True si la couverture est une garantie de type décès accidentel</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsAvenantRenouvelable">
	<summary>
 Cette fonction indique si l'avenant est renouvelable
 </summary>
	<returns>True si l'avenant est renouvelable</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsPrimeIncluse(System.String)">
	<summary>Cette fonction indique si la la prime de la protection, auquel cet objet de règles d'affaires est lié,
 est incluse dans la prime minimum</summary>
	<param name="typeCout">Le type de coût</param>
	<returns>True si la prime de la protection est incluse dans la prime minimum</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsTypeCoutsZSROptionPermis(System.String)">
	<summary>Cette fonction indique si le type de coût passé en paramètre permet les
 options de paiement rapide. Cette fonction est utilisée pour la détermination de la
 disponibilité du choix "Option de paiement rapide" dans la zone de sélection
 rapide de la fenêtre des protections</summary>
	<param name="typeCout">Le type de coût</param>
	<returns>True si le type de coût passé en paramètre est un type qui permet
 les options de paiement rapide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsGarantieAssurabilite">
	<summary>
 Cette fonction indique si la protection, auquel cet objet de règles d'affaires est lié,
 est une avenant garantie assurabilité
 </summary>
	<returns>True si la couverture est une avenant garantie assurabilité</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsGAPVE">
	<summary>
 Cette fonction indique si la protection, auquel cet objet de règles d'affaires est lié,
 est une avenant GAPVE
 </summary>
	<returns>True si la couverture est une avenant GAPVE</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsStatutVisibleAjoutAssureRetourPropo(System.Int32)">
	<summary>Cette fonction indique si la liste déroulante du statut 
 doit être affichée lors de l'ajout d'un assuré, au retour 
 de la Proposition électronique, selon son âge.</summary>
	<isnew>2008-04-24</isnew>
	<param name="ageAssure">L'âge de l'assuré</param>
	<returns>True si l'âge de l'assuré fait en sorte qu'on doit 
 faire apparaître la liste de sélection du statut de 
 tabagisme de l'assuré; False sinon.</returns>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirValeurDefautInt(System.String,System.Boolean)">
	<summary>
 Cett fonction permet d'obtenir la valeur par défaut pour un item donc l'identifiant
 est passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'item pour lequel nous devons obtenir la valeur par défaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur par défaut de l'item</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.AppliquerADisponible(System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ "Appliquer à" doit être
 disponible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer
 la disponibilité du champ "Appliquer à"</param>
	<param name="typeProt">Le type de protection (Individuelle, Conj. lier décès, etc.)</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le champ doit être disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ACalculerVisible(System.Int32,System.String,System.Boolean,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le texte "À calculer" pour le VMAX doit être
 visible ou non
 </summary>
	<param name="noAssure">L'Ordinal de l'assuré pour lequel nous voulons déterminer
 la visibilité du texte "À calculer"</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="calculAFaire">Indicateur qui spécifie si le calcul du montant
 d'assurance est à faire pour le VMAX</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection
 en vigueur</param>
	<returns>True si le texte "À calculer" doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.CalcDebutNivellement(System.String,System.Int32,System.Boolean)">
	<summary>
 Cette fonction fait le calcul de l'année à laquel doit débuter le 
 nivellement des coûts
 </summary>
	<param name="typeCout">Le type de coût de la protection</param>
	<param name="age">L'âge de l'assuré auquel la protection est associé</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en
 vigueur</param>
	<returns>Année à laquelle doit débuter le nivellement des coûts</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.CalcDuree(System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
	<summary>
 Cette fonction fait le calcul de la durée de la protection
 </summary>
	<param name="noAssure">L'ordinal de l'assuré' à qui la protection est assigné,
 pour lequel nous voulons calculer la duree de la protection</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="age">L'âge de l'assuré auquel la protection est associée</param>
	<param name="dureeMinimisation">La durée de minimisation de la protection</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>La durée de la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.CalcDureeRestante(System.Int32,System.Int32,System.Boolean)">
	<summary>
 Cette fonction fait le calcul de la durée restante qui s'applique à la réduction du
 capital de la protection
 </summary>
	<param name="age">L'âge de l'Assuré auquel la protection est associée</param>
	<param name="duree">La durée inscrite dans le champ "Durée"</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en
 vigueur</param>
	<returns>La durée restante pour la réduction du capital</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.CalculDureeMinimisation(System.Int32,System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction calcul la durée réelle pour la valeur de la liste
 de choix passé en paramètre. Cette fonction est utilisé par la fonction de gestion de la liste
 de choix de la durée de minimisation afin de remplacer les DataValues provenant du service
 de liste de choix par les durée correspondantes selon l'âge de l'illustration
 </summary>
	<param name="duree">La valeur de la list de choix (Valeurs possibles : 5 = "5 ans", 
 -60 = "Jusqu'à 60 ans", -65 = "Jusqu'à 65 ans", 100 = "Jusqu'à 100 ans"</param>
	<param name="age">L'âge de l'assuré pour qui nous devons calculer la durée réel
 de minimisation pour le choix passé en paramètre</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Durée de minimisation</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.CalculatriceMontantCapVisible(System.Int32,System.String,System.Boolean)">
	<summary>
Cette fonction permet de déterminer si le bouton de la calculatrice du montant de capital
 doit être visible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer
 la visibilité du bouton de la calculatrice</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="isInForce">le traitement est fait pour une protection en vigueur</param>
	<returns>True si le bouton doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.DeterminerBloc(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32[],System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer quel bloc de choix doit être afficher pour le champ
 passé en paramètre
 </summary>
	<param name="idItem">Le nom d l'item (champ) pour lequel nous devons détermienr le
 bloc de la liste de choix de cet item</param>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer la visibilité des champs concernant
 la minimisation</param>
	<param name="typeProt">Le type de protection (Individuelle, Conj. lier décès, etc.)</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="nbAssurable">Le nombre d'assurés assurables</param>
	<param name="ageAssures">Liste qui contien l'âge de chacun des assurés conjoint</param>
	<param name="nbAssures">Le nombre d'items contenu dans la liste des âges des assurés conjoint</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Le numéro du bloc de choix pour la liste de choix de l'item passé en paramètre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.DureeDisponible(System.Int32,System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ de la durée de la protection doit être
 disponible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer
 la disponibilité du champ "Durée"</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="typeCout">Le type de coût de la protection</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le champ doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.DureeNivellementVisible(System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ "début de nivellement" doit être visible
 ou non
 </summary>
	<param name="typeCout">Le type de coût de la protection</param>
	<param name="isInForce">Indique si le traitement est fait por une protection en vigueur</param>
	<returns>True si le champ doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.InfoMinimisationVisible(System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si les champs permettant de saisir les informations sur
 la minimisation du capital doivent être visibles ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer
 la visibilité des champs concernant la minimisation</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="isInForce">Indique si le traitement est fait pour un protection
 en vigueur</param>
	<returns>True si les champs doivent être visibles</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsAssConjointePermis(System.String,System.Boolean)">
	<summary>
 Cette fonction indique si la protection, auquel est lié cet objet de règles d'affaires,
 est permise en base conjointe ("Tous les assurés conjoints")
 </summary>
	<param name="typeProt">Le type de protection (Indivuduelle, Conj. lier décès, etc.)</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la protection est permise en base conjointe</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsAssIndivPermis(System.String,System.Boolean)">
	<summary>
 Cette fonction indique si la protection, auquel est lié cet objet de règles d'affaires,
 est permise en base individuelle 
 </summary>
	<param name="typeProt">Le type de protection (Indivuduelle, Conj. lier décès, etc.)</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la protection est permise en base individuelle</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionValide(System.String,System.Int32,System.Decimal[],System.Decimal[],System.Decimal,System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32[],System.String[],System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.String[],System.Int32,System.Decimal,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si les conditions de validité de la protection sont
 respectées
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous vérifions la
 disponibilité de la protection</param>
	<param name="capitalAssureVie">Le montant de capital assuré des protection "vie" de
 chaque individu disponible pour la protection</param>
	<param name="capitalAssureMg">Le montant de capital assuré des protections
 "Maladie grave" de chaque individu disponible pour la protection</param>
	<param name="primeMinimum">La prime minimum du contrat</param>
	<param name="ageIllus">L'âge de l'illustration</param>
	<param name="nbContractants">Le nombre d'items contenu dans lla liste des âges des
 contractants</param>
	<param name="ageContractant">Liste qui contient l'âge de chacun des contractants</param>
	<param name="nbAssuresCj">Le nombre d'items contenu dans le vecteur des âges</param>
	<param name="ageAssuresCj">Liste qui contient l'âge de chacun des assurés conjoint de la
 protection</param>
	<param name="assurable">Liste des indicateurs d'assurabilité des assurés conjoints</param>
	<param name="typeProtection">Le type de protection (Individuelle ou conjointe)</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="nbAssuresIllus">Le nombre d'assuré dans l'illustration</param>
	<param name="applicantIsCorp">Indicateur qui spécifie si le contractant est une corporation</param>
	<param name="isApplicantPresent">Indicateur de la présence d'un contractant pour l'assuré courant</param>
	<param name="typeCout">Le type de coût de la protection de base</param>
	<param name="isApplicantOther">Indicateur de la présence d'un contractant qui n'est pas un assuré</param>
	<param name="isSurprimePresent">Indicateur de la présence d'une protection surprimée</param>
	<param name="noAssureEnfant">Le numéro de l'assuré qui détient des garanties enfant (ME ou MGE)</param>
	<param name="ageEquivalent">L'âge équivalent</param>
	<param name="assurableContr">Liste des indicateurs d'assurabilité des contractans</param>
	<param name="nbVies">Le nombre d'Assuré conjoint présent pour l'assuré 1 lorsque nous sommes en assurance conjointe</param>
	<param name="montantBase">Le montant de capital de la protection de base</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en
 vigueur</param>
	<returns>True si les conditions de validé de la protection sont respecté</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.MontantCapPlancherDisponible(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ du capital plancher doit être disponible
 ou non
 </summary>
	<param name="prestDeces">La prestation au décès choisi par l'usager</param>
	<param name="age">L'âge de l'assuré auquel la protection est associée</param>
	<param name="dureeMinimisation">La durée de minimisation saisie par l'usager</param>
	<param name="calculAFaire">Indicateur qui spécifie si le calcul du montant d'assurance
 est à faire pour le VMAX</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le champ doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.MontantDisponible(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ du montant de la protection doit être
 disponible ou non
 </summary>
	<param name="typeGar">Le type de garantie du contractant</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le champ doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.MontantRedCapVisible(System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ "Montant pour la réduction de capital"
 doit être visible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré à qui la protection est assignée pour lequel
 nous voulons déterminer si la déruction de capital est permise</param>
	<param name="prestDeces">la prestation au décès</param>
	<param name="duree">La durée de la protection tel que saisie par l'usager</param>
	<param name="age">L'âge de l'assuré. Cet âge peut être l'âge de l'assuré le plus jeune 
 des assurés conjoint lorsque nous sommes en assurance conjointe dernier décès et dernier décès
 libéré au 1ier ou l'âge du plus vieux lorsque nous sommes en assurance conjointe premier
 décès</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le champ doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirAgeNivellementMax(System.Boolean)">
	<summary>
 Cette fonction retourne l'âge maximale auquel le nivellement est permis.
 </summary>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur.</param>
	<returns>L'âge maximale auquel le nivellement est permis.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirDureeMax(System.Int32,System.Int32,System.Boolean)">
	<summary>
 Cette fonction retourne la valeur maximale permise pour la
 durée de la protection courante
 </summary>
	<param name="noAssure">L'ordinal de l'assuré à qui la protection est assigné pour lequel
 nous voulons obtenir la durée maximum de la protection</param>
	<param name="age">L'âge de l'assuré auquel la protection est associée</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>La valeur maximale permise pour la durée de cette protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirDureeMinimisationDefaut(System.String,System.Boolean)">
	<summary>
 Cette fonction retourne la durée de minimisation par défaut selon la prestation au décès
 </summary>
	<param name="prestDeces">La prestation au `décès choisi par l'usager</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection
 en vigueur</param>
	<returns>La durée de minimisation par défaut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirDureeMinimisationMax(System.String,System.Int32,System.Boolean)">
	<summary>
 Cette fonction retourne la durée de minimisation maximum permise selon la prestation au décès
 </summary>
	<param name="prestDeces">La prestation au décès choisie par l'usager</param>
	<param name="age">L'âge de l'assuré auquel la protection est associée</param>
	<param name="isInForce">Indique si le traitmeent est fait pour une protection en vigueur</param>
	<returns>La durée de minimisation maximum permise</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirDureeMinimisationMin(System.String,System.Decimal,System.Decimal,System.Boolean)">
	<summary>
 Cette fonction retourne la durée de minimisation minimum permise selon la
 prestation au décès
 </summary>
	<param name="prestDeces">La prestation au décès choisie par l'usager</param>
	<param name="volume">Le volume de la protection Vmax</param>
	<param name="volumeOptimalVmax">Le volume optimal de la vmax</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection
 en vigueur</param>
	<returns>La durée de minimisation minimim permise</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirDureeNivellementMax(System.Int32,System.Boolean)">
	<summary>
 Cette fonction retourne la valeur maximale permise pour la durée de nivellement
 de la protection courante
 </summary>
	<param name="age">L'âge de l'assuré auquel la protection est associéee</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>La valeur maximale permise pour la durée de nivellement de cette protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirDureeNivellementMin(System.String,System.Boolean)">
	<summary>
 Cette fonction retourne la valeur minimum permise pour la durée de nivellement de la
 protection courante
 </summary>
	<param name="typeProtection">Le type de protection</param>
	<param name="isInForce">Indique si le traitement est fait por une protection en vigueur</param>
	<returns>La valeur minimale permise pour la durée de nivellement de cette protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirDureeProt(System.Int32,System.Boolean)">
	<summary>
 Cette fonction retourne la durée de protection de protection
 </summary>
	<param name="age">L'âge associé à la protection</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>La durée de base de la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirMontantCapPlancherDefaut(System.String,System.Int32,System.Int32,System.Decimal,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer le montant par défaut du capital plancher pour les 
 prestations au décès "VMAX" et "Capital + fonds avec option VMAX"
 </summary>
	<param name="prestDeces">La prestation au décès choisi par l'usager</param>
	<param name="dureeMinimisation">La durée de minimisation saisie par l'usager</param>
	<param name="age">L'âge de l'assuré auquel la protection est associée</param>
	<param name="mntDepart">Le montant de départ</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Le montant du capital plancher par défaut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirMontantMax(System.Int32,System.String,System.Int32,System.String,System.Decimal,System.Boolean)">
	<summary>
 Cette fonction retourne le montant maximum qui peut être saisi par l'usager
 pour la protection
 </summary>
	<param name="noAssure">L'ordinal de l'assuré</param>
	<param name="typeProt">Le type de protection (individuelle ou conjoint) sélectionné
 par l'usager</param>
	<param name="ageIllus">L'âge de l'illustration</param>
	<param name="prestDeces">La prestation au décès choisi par l'usager</param>
	<param name="montantDepart">Le montant de départ servant à la détermination du montant maximum</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Le montant maximum qui peut être saisi par l'usager pour la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirMontantRedCapDefaut(System.Decimal,System.Boolean)">
	<summary>
 Cette fonction retourne le montant par défaut de la réduction de capital de la protection
 </summary>
	<param name="montantDepart">Le montant de départ servant à la détermination du montant
 par défaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Le montant par défaut de la réduction de capital de la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirOptionDefaut(System.Boolean)">
	<summary>
 Cette fonction retourne l'option de paiement rapide par défaut qui doit être insérer lorsque l'usager choisi
 un type de coût avec option
 </summary>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>L'option de paiement rapide par défaut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirStatutAssureDefaut(System.Int32,System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction retourne le code de tabagisme (statut) de l'assuré selon les critères de l'âge
 </summary>
	<param name="age">L'âge de l'assuré</param>
	<param name="statut">Le code de tabagisme (statut) de l'assuré</param>
	<param name="typeCout">le type de coût de la protection de base</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Le statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirStatutProtDefaut(System.Int32,System.String,System.Double,System.String,System.Boolean)">
	<summary>
 Cette fonction retourne le code de tabagisme (statut) de la protection selon les 
 crétères du statut préférentiel
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer la
 pertinence du statut préférentiel</param>
	<param name="typeProt">Le type de protection (individuelle ou conjoint) sélectionné par l'suager</param>
	<param name="montant">Le montant de covuerture pour la protection</param>
	<param name="statut">Le code de tabagisme (statut) de l'assuré</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Le statut selon les critères du statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirTypeCoutDefaut(System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction retourne le code de tabagisme (statut) de la protection selon les critères
 du statut préférentiel
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer
 la ptertinence du statut préférentiel</param>
	<param name="typeProt">Le type de protection (individuelle ou conjoint) sélectionné
 par l'usager</param>
	<param name="prestDeces">La prestation au décès choisi par l'usager</param>
	<param name="typeCoutDepart">Le type de coût au départ</param>
	<param name="age">L'âge de l'assuré ou l'âge équivalent en ass. conjoint</param>
	<param name="typeOption">Le type d'option que l'usager a choisi sur cette protection</param>
	<param name="isInForce">Indique si le traitement st fait pour une protection en vigueur</param>
	<returns>Le type de coût par défaut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ProtectionDisponible(System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ de la protection doit être disponible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer la
 disponibilité dh champ "Protection"</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le champ doit être disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.StatutAssureVisible(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ "Statut" de l'assuré doit être visible
 ou non
 </summary>
	<param name="age">L'âge de l'assuré</param>
	<param name="typeCout">Le type de coût</param>
	<param name="dureeNiv">La durée du nivellement de la protection de base</param>
	<param name="avenRenouv">Indicateur qui indique si l'assuré à un avenant renouvelable</param>
	<param name="isInForce">Indique si le traitement est fait pour un assuré en vigueur</param>
	<returns>True si le champ doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.StatutProtVisible(System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ "Statut" de la protection doit être
 visible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer la 
 visibilité du texte "À calculer"</param>
	<param name="typeProt">Le type de protection (individuelle ou conjoint) sélectionné par l'usager</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le champ "Statut" doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.SupprimeProtVisible(System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le bouton de suppression de la protection
 doit être visible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer la visibilité
 du bouton de suppression de la protection</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le bouton doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.TypeCoutDisponible(System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ du type de coût de la protection 
 doit être disponible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer
 la disponibilité du champ "Type de coût"</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le champ doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderAgeParProduit(System.String,System.Int32,System.Boolean)">
	<summary>
 Valide l'âge selon le produit sélectionné (Transition ou Transition Evolution)
 </summary>
	<param name="produit">Le produit pour lequel on veut savoir si l'âge est valide</param>
	<param name="age">L'âge de l'assuré</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderBoutonAjouterContractant(System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le bouton ajouter un contractant devrait être actif ou inactif
 </summary>
	<param name="nbContractant"></param>
	<param name="typeContractant"></param>
	<param name="isInForce"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderDebutNivellement(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
	<summary>
 Cette fonction fait la validation de l'année de début du nivellement passé en paramètre selon 
 l'âge de l'assuré et le type de coût
 </summary>
	<param name="typeCout">Le type de coût de la protection</param>
	<param name="typeProtection">Le type de protection</param>
	<param name="age">L'âge de l'assuré auquel la protection est associée</param>
	<param name="valeur">L'année de début de nivellement tel que saisie par l'usager</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en 
 vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderDuree(System.Int32,System.Int32,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de valider la durée saisie par l'usager
 </summary>
	<param name="noAssure">L'ordinal de l'assuré à qui la protection est assignée
 pour lequel nous voulons valider la durée de la protection saisie</param>
	<param name="age">L'âge de l'assuré auquel la protection est associée</param>
	<param name="duree">La durée à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderIndicAssurable(System.Int32,System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si l'indicateur d'assurabilité passé en paramètre est valide
 </summary>
	<param name="nbAssures">Le nombre d'assuré conjoint (nombre de vie)</param>
	<param name="nbAssurable">Le nombre d'assuré assurable</param>
	<param name="valeurItem">La valeur de l'indicateur d'assurabilité de l'assuré qui vient d'être modifié</param>
	<param name="isInForce">Indique si le traitmeent est fait pour une protection en vigueur</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderIndicContractant(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si l'assuré peut être contractant
 selon son âge. Elle vérifie également le nombre d'assuré conjoint qui sont 
 contractant afin de valider si nous avons atteint le maximum de 2
 </summary>
	<param name="age">L'âge de l'assuré que l'on veut déterminer si peut être contractant</param>
	<param name="nbContractants">Le nombre de contractants</param>
	<param name="valeurItem">La valeur de l'indicateur</param>
	<param name="type">Le type</param>
	<param name="isInForce">Indique si le traitement est fait pour un assuré en vigueur</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderMontantCapPlancher(System.Decimal,System.Decimal,System.Boolean)">
	<summary>
 Cette fonction permet de valider le montant du capital plancher saisie par l'usager
 </summary>
	<param name="montantProt">Le montant de départ servant à la validation du montant 
 du capital plancher pour le VMAX</param>
	<param name="valeur">Le montant saisi par l'usager qui doit être validé</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderMontantRedCap(System.Decimal,System.Decimal,System.Boolean)">
	<summary>
 Cette fonction permet de valider le montant de réduction du capital plancher saisi par l'usager
 </summary>
	<param name="montantProt">Le montant de départ servant à la validation du montant 
 de réduction du capital</param>
	<param name="valeur">Le montant saisi par l'usager qui doit être validé</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderStatut(System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de valider le statut selon l'âge de l'assuré
 en question
 </summary>
	<param name="age">L'âge de l'assuré pour lequel nous voulons valider le statut</param>
	<param name="valeurItem">Le statut à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour un assuré en vigueur</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsMultiProtection(System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si on peut avoir 2 protections identique pour une personne
 </summary>
	<param name="noAssure">Le numéro de l'assuré</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si il peut y avoir plusieurs protection identique</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirNbrProtectionMax(System.Boolean)">
	<summary>
 Cette fonction retourne le nombre de protections du même produit sur sa tête
 </summary>
	<param name="isInForce"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.SupprimeProtVisibleTrad(System.Int32,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le bouton de suppression de la 
 protection doit être visible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer la visibilité
 du bouton de suppression de la protection</param>
	<param name="noProtection">Le numéro de la protection, 1ere, 2e ...</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le bouton doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.AppliquerADisponibleTrad(System.Int32,System.String,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ "Appliquer à" doit être disponible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer la 
 disponibilité du champ "Appliquer à"</param>
	<param name="typeProt">Le type de protection (Individuelle, Conj lier décès, etc.)</param>
	<param name="noProtection">Le numéro de la protection, 1ere, 2e ...</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si c'est un succès</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ProtectionDisponibleTrad(System.Int32,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ de la protection doit être disponible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer la 
 disponibilité du champ "Protection"</param>
	<param name="noProtection">Le numéro de la protection, 1ere, 2e ...</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en
 vigueur</param>
	<returns>True si le champ doit être disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsAssuranceInvalidite(System.Boolean)">
	<summary>
 Cette fonction vérifie si la protection est de type invalidité ou pas
 </summary>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la protection est de type assurance invalidité</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.DeterminerBlocTrad(System.String,System.Int32,System.String,System.String,System.Int32,System.Collections.Generic.List{System.Int32},System.Int32,System.Boolean,System.Int32,System.Decimal,System.Boolean,System.String)">
	<summary>
 Cette fonction permet de déterminer quel bloc de choix doit être afficher pour le champ
 passé en paramètre
 </summary>
	<param name="idItem">Le nom de l'item (champ) pour lequel nous devons déterminer le bloc de la
 liste de choix</param>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer
 la visibilité des champs concernant la minimisation</param>
	<param name="typeProt">lLe type de protection (Individuelle, Conj. 1ier décès, etc.)</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="nbAssurable">Le nombre d'assurés assurables</param>
	<param name="ageAssures">Liste qui contient l'âge de chacun des assurés conjoints</param>
	<param name="nbAssures">Le nombre d'items contenu dans la liste des âges des assurés conjoint</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<param name="noProtection">Le numéro de la protection</param>
	<returns>le numéro du bloc de choix pour la liste de choix de l'item passé en paramètre</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.PrimeVisible(System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le label de la prime est visible ou non
 </summary>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le champ doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirHeight(System.Boolean,System.Boolean)">
	<summary>
 Cette fonction retourne la hauteur de la ligne de protection
 </summary>
	<param name="isInGroupe">Indique si la protection fait partie d'un groupe</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>La hauteur de la ligne de protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsGroupable(System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si la protection peut
 faire partie d'un groupe
 </summary>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la protection peut faire partie d'un groupe</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderDureeFlexible(System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
	<summary>
 Cette fonction permet de valider la durée saisie par l'usager
 </summary>
	<param name="noAssure">L'ordinal de l'assuré à qui la protection est assignée pour
 lequel nous voulons valider la durée de la protection saisie</param>
	<param name="age">L'âge de l'assuré auquel la protection est associée</param>
	<param name="duree">La durée à valider</param>
	<param name="typeAssurance">Le type d'assurance (ind="0", 1st="1",1nd="2",2l1="3")</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirHierarchie">
	<summary>
 Cette fonction retourne le degré d'héritage de protection
 </summary>
	<returns>Aucun = 0, Prot. Mére = 1, Prot. enfaut = 2</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.StatutProtVisibleTrad(System.Int32,System.String,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si le champ "Statut" de la protection doit être visible ou non
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous voulons déterminer la visibilité
 du texte "À calculer"</param>
	<param name="typeProt">le type de protection (individuelle ou conjoint) sélectionné par l'usager</param>
	<param name="nbrAssure">Le nombre d'assuré sur la protection</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si le champ "Statut" doit être visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.PermetSurprimeAssure(System.Int32)">
	<summary>
 Cette fonction retourne si la protection permet des surprimes sur l'assuré. Ne pas confondre
 individu et assuré
 </summary>
	<param name="nbrVie">Le nombre de vie</param>
	<returns>True si la protection permet des surprimes sur l'assuré</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirNbrProtectionMaxCj(System.Boolean)">
	<summary>
 Cette fonction retourne le nombre de protections du même produit sur sa tête en conjointe
 </summary>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Le nombre de protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ForcerIndividu">
	<summary>
 Cette fonction permet de déterminer si on doit forcer un nouvel indidivu
 </summary>
	<returns>True si on doit forcer un nouvel individu</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsEpic(System.Boolean)">
	<summary>
 Cette fonction retourne si la protectio nest epic ou pas
 </summary>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la protection est de type epic</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.SetMntDaDma(System.Decimal)">
	<summary>
 Cette méthode affecte le montant min de DA ou DMA codé dans le descendant
 </summary>
	<param name="param">Le montant minimum de da et dma</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderDureeMinimisation(System.String,System.Int32,System.Decimal,System.Decimal,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de valider la durée de minimisation saisie par l'usager
 </summary>
	<param name="prestDeces">La prestation au décès choisi par l'usager</param>
	<param name="age">L'âge de l'assuré auquel la protection est associé</param>
	<param name="volume">Le volume de la protection VMAX</param>
	<param name="volumeOptimalVMAX">Le volume optimal de la VMAX</param>
	<param name="valeur">La durée à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Valeur de l'énumération Statut</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsFa">
	<summary>
 Cette fonction indique si la protection est une fa
 </summary>
	<returns>True si la protection est une fa</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsParamedical">
	<summary>
 Cette fonction indique si la protection est une paramédical
 </summary>
	<returns>True si la protection est une paramédical</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsCouvertureIndivConj">
	<summary>
 Cette fonction indique si on peut avoir une protection individuelle et conjointe
 </summary>
	<returns>True si on peut avoir une protection individuelle et conjointe</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderTypeProtection(System.String)">
	<summary>
 Cette fonction permet de valider le type de protection de l'illustration
 </summary>
	<param name="typeProtection">Le type de protection de l'illustration</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionDispo(System.String)">
	<summary>
 Cette fonction permet de déterminer si les conditions de disponibilité de la protection sont remplies
 </summary>
	<param name="protection">La protection à vérifier</param>
	<returns>True si la protection est disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionExclusive">
	<summary>
 Cette fonction permet de déterminer si cette protection est exclusive à l'affichage par 
 rapport à une autre protection
 </summary>
	<returns>True si la protection est exclusive</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsCic(System.Boolean)">
	<summary>
 Cette fonction retourne si le protection est de type cic ou pas
 </summary>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la protection n'est pas de type cic</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirMontantMaxPsmip(System.Decimal,System.Decimal)">
	<summary>
 Cette fonction retourne le montant maximum qui peut être saisi par l'usager
 pour la protection
 </summary>
	<param name="montantTotal">Le montant total des protections</param>
	<param name="montantProtection">Le montant de la protection qui change</param>
	<returns>Le montant maximum qui peut être saisi par l'usager
 pour la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionHospitalisation">
	<summary>
 Cette fonction permet de déterminer si c'est une protection hospitalisation
 </summary>
	<returns>True si c'est une protection hospitalisation</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionHospitalisationDom">
	<summary>
 Cette fonction permet de déterminer si c'est une protection hospitalisation et soins à domicile
 </summary>
	<returns>True si c'est une protection hospitalisation et soins à domicile</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ProtHasDuration">
	<summary>
 Cette fonction permet de déterminer si la protection possède une durée
 </summary>
	<returns>True si la protection possède une durée</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ValiderMontant(System.Int32,System.String,System.Int32,System.Decimal,System.Decimal,System.Decimal,System.String,System.Decimal,System.Decimal,System.Boolean,System.Decimal)">
	<summary>
 Cette fonction permet de valider un montant
 </summary>
	<param name="noAssure">L'ordinal de l'assuré</param>
	<param name="typeProt">Le type de protection (individielle ou conjoint) sélectionné par l'usager</param>
	<param name="ageIllus">L'âge de l'illustration</param>
	<param name="capitalAssureVie">Le montant de capital assuré des protections "vie" de disponible pour la protection</param>
	<param name="primeMinGc">La prime minimale permise pour la garantie du contractant</param>
	<param name="primeMaxGc">La prime maximale permise pour la garantie du contractant</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="montantCalc">Le montant de capital pour le VMAX</param>
	<param name="montant">Le montant à valider</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<param name="totalProtection">Montant total de toutes les protections</param>
	<returns>1 si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirMontantDefaut(System.String,System.Int32,System.Decimal,System.Boolean,System.Decimal)">
	<summary>
 Cette fonction retourne le montant par défaut de la protection
 </summary>
	<param name="typeGar">Le type de garantie du contractant</param>
	<param name="Age">L'âge de l'assuré auquel la protection est associé</param>
	<param name="montantDepart">Le montant de depart servant à la détermination du montant par défaut</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<param name="protectionTotal">La valeur total des protections</param>
	<returns>Le montant par défaut de la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionDisponible(System.String,System.Int32,System.Decimal[],System.Decimal[],System.Decimal,System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32[],System.String[],System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.String[],System.Int32,System.Decimal,System.Int32,System.Boolean)">
	<summary>
 Cette fonction permet de déterminer si les conditions de disponibilité
 de la protection sont remplis
 </summary>
	<param name="noAssure">L'ordinal de l'assuré pour lequel nous vérifions la
 disponibilité de la protection</param>
	<param name="capitalAssureVie">Le montant de capital assuré des protections "vie"
 de chaque individu disponible pour la protection</param>
	<param name="capitalAssureMg">Le montant de capital assuré des protections "Maladie grave" de chaque individu
 disponible pour la protection</param>
	<param name="primeMinimum">La prime minimum du contrat</param>
	<param name="ageIllus">L'âge de l'illustration</param>
	<param name="nbContractants">Le nombre de d'items contenu dans la liste des âges des contractants</param>
	<param name="ageContractant">Liste qui contient l'âge de chacun des contractants</param>
	<param name="nbAssuresCj">Le nombre d'items contenu dans la liste des âges des assurés conjoint
 de la protection</param>
	<param name="ageAssuresCj">Liste qui contient l'âge de chacun des assurés conjoint de la protection</param>
	<param name="assurable">Liste des indicateurs d'assurabilité des assurés conjoint</param>
	<param name="typeProtection">Le type de protection (Individuelle ou conjointe)</param>
	<param name="prestDeces">La prestation au décès</param>
	<param name="nbAssuresIllus">Le nombre d'Assuré dans l'illustration</param>
	<param name="applicantIsCorp">Indicateur qui spécifie si le contractant est une corporation</param>
	<param name="isApplicantPresent">Indicateur de la présence d'un contractant pour l'assuré courant</param>
	<param name="typeCout">le type de coût de la protection de base</param>
	<param name="isApplicantOther">Indicateur de la présence d'un contractant qui n'est pas un assuré</param>
	<param name="isSurprimePresent">Indicateur de la présence d'une protection surprimée</param>
	<param name="noAssureEnfant">Le numéro de l'assuré qui détient des garanties enfants (ME ou MGE)</param>
	<param name="ageEquivalent">L'âge équivalent</param>
	<param name="assurableContr">Liste des indicateurs d'assurabilité des contractants</param>
	<param name="nbVies">Le nombre d'assuré conjoint présent pour l'assuré 1 lorsque nous sommes en
 assurance conjointe</param>
	<param name="montantBase">Le montant de capital de la protection de base</param>
	<param name="concept">Le concept</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si les conditions de disponibilité de la protection sont remplis</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirMontantMin(System.String,System.Int32,System.Boolean)">
	<summary>
 Cette fonction retourne le montant minimum qui peut être saisie par l'usager pour
 la protection
 </summary>
	<param name="idItem">Le nom de l'item (champ) pour lequel nous devons
 déterminer le montant minimum</param>
	<param name="ageIllus">L'age de l'illustration</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>Le montant minimumqui peut être saisie par l'usager pour
 la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsProtectionDispoPsmip(System.Int32,System.Collections.Generic.List{System.Decimal})">
	<summary>
 Cette fonction permet de déterminer si les conditions de disponibilité de la protection
 sont remplis selon le montant total des protection
 </summary>
	<param name="ageIllus">Àge de l'illustration</param>
	<param name="montantTotal">Montant total des protections</param>
	<returns>True si la protection est disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsMsgErreurPsmip">
	<summary>
 Cette fonction permet de déterminer si les conditions de disponibilité de la protection 
 sont remplis selon le montant total des protections
 </summary>
	<returns>True si le message est pour psmip</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsEligibleStatutPref">
	<summary>
 Cette fonction vérifie si la protection peut avoir un statut pref
 </summary>
	<returns>True si la protection peut avoir un statut pref</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.ObtenirInfoDocument(System.String@,System.String@)">
	<summary>
 Méthode qui passe en paramètre toutes les informations pour obtenir le nom
 du document à ouvrir
 </summary>
	<param name="niveau">le niveau ( correspondant à niveau dans le service de pilotage)</param>
	<param name="cle">la clé (correspondant à la clé dans le service de pilotage)</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.IsContributionContractant">
	<summary>
 Cette fonction indique si la protection auquel cetobjet de regles d'affaire est lier se trouve être une
  contribution au contractant.
 </summary>
	<returns>True - La protection est une contribution au contractant
 False - La protection n'est pas une contribution au contractant
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase.UtiliseRenouvellementBase">
	<summary>
 Nous dit si cette protection doit utiliser le typer de renouvellement de sa base.
 </summary>
	<returns>True - Utiliser la type de renouvellement de la base, False - Ne pas l'utiliser.</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Affaires.ReglesAffaireBase">
	<summary>
 Cette classe fait la gestion des réegles d'affaires de la section 
 Illustration qui est commune à tous les produits.</summary>
	<isnew>2008-04-24</isnew>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 ===========================================================================
 Lachance, Dominik 2007-05-25   Création de la classe et des méthodes
 Tremblay, Victor  2008-04-24   Ajout de la règle d'affaires 
                                IsStatutVisibleAjoutAssureRetourPropo.
 </pre>
	</history>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueConfigDefautRapport">
	<summary>
 Classe contenant les méthodes et les évènements de DialogueConfigDefautRapport
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.NumeroAssure">
	<summary>
 Contient l'ordinal de l'assuré qui est représenter dans le formulaire actuel.
 </summary>
	<value>L'ordinal de l'assure que represente ce formulaire</value>
	<returns>Le numéro d'assuré du formulaire actuel</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.PremiumReloadFlag">
	<summary>
 Propriété qui indique la nécessité de rafraichir les informations 
 dans la datawindow de la section scénarios de primes.
 </summary>
	<value>True or False</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.InsuredReloadFlag">
	<summary>
 Propriété qui indique la nécessité de rafraichir les informations 
 dans la datawindow de la section des protections.
 </summary>
	<value>True or False</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.BoniReloadFlag">
	<summary>
 Propriété qui indique la nécessité de rafraichir les informations 
 dans la datawindow de la section scénarios des bonis.
 </summary>
	<value>True or False</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.CoverageReloadFlag">
	<summary>
 Propriété qui indique la nécessité de rafraichir les informations 
 dans la datawindow de la section des couvertures.
 </summary>
	<value>True or False</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.LogiqueFormulaire">
	<summary>
 Propriété qui donne accès à l'instance de l'objet qui contient la la logique
 d'affaire de ce formulaire
 </summary>
	<value>L'instance de l'objet qui contient la logique d'affaire pour ce formulaire</value>
	<returns>L'instance de l'objet qui contient la logique d'affaire pour ce formulaire</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.SetShowWindowFlag">
	<summary>
 Cette fonction fait le traitement nécessaire pour déterminer,
 d'après le service de pilotage, si l'option "Voir toutes les
 protections" sera sélectionner ou non.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.CalculPrimesVersees">
	<summary>
 Calcul le résultat de la prime selon le type de prime choisie
 et l'inscrit à l'écran dans le champs montant de la section 
 des primes
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.ObtenirListeProtectionFromPDF(IAFG.IA.IL.AP.Illustration.ENUMs.EmplacementAffichage,System.Int32,System.String[]@,IAFG.IA.VI.AF.Proposition.Protection,System.Boolean)">
	<summary>
 fonction qui retourne les éléments à ajouter dans la liste des protections en ordre
 </summary>
	<param name="descriptions">un vecteur qui contient les descriptions des éléments à ajouter</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.ObtenirListeTermeFromPDF(System.Int32,System.String[]@,System.String[]@,IAFG.IA.VI.AF.Proposition.Protection,System.Boolean,IAFG.IA.IL.AP.Illustration.ENUMs.EmplacementAffichage)">
	<summary>
 fonction qui retourne les éléments à ajouter dans la liste de terme en ordre
 </summary>
	<param name="descriptions">un vecteur qui contient les descriptions des éléments à ajouter</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.ObtenirListeProtectionFromPDF(IAFG.IA.IL.AP.Illustration.ENUMs.EmplacementAffichage,System.Int32,System.String[]@)">
	<summary>
 fonction qui retourne les éléments à ajouter dans la liste des protections en ordre
 </summary>
	<param name="descriptions">un vecteur qui contient les descriptions des éléments à ajouter</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.ModifierAssure(System.Int32,System.String)">
	<summary>
 Fonction qui permet de déverrouller les champs d'un assuré suite au retour de la proposition électronique. 
 </summary>
	<param name="row"> La rangée, dans la datawindow des assurés, ou se retrouve l'assure
 pour lequel il faut dévérrouiller les champs.</param>
	<param name="idIndividu">L'identifiant de l'individu qui est assuré</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.RemplacerAssure(System.Int32,System.String,System.Int32,System.String)">
	<summary>
	</summary>
	<param name="al_row"></param>
	<param name="as_nouveau_individu_id"></param>
	<param name="ai_ordinal_assure"></param>
	<param name="as_ancien_individu_id"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.GetGuidIndivOrigine(System.Int32)">
	<summary>
  Cette fonction permet d'obtenir l'identifiant de l'individu
  se trouvant à la rangée passée en paramêtre dans la datawindow
  des assurés
 </summary>
	<param name="ai_row">
 La rangée de l'assuré, dans la datawindow des assurées, pour lequel nous devons obtenir l'identifiant.
 </param>
	<returns>
 l'identifiant de l'individu
 </returns>
	<remarks>
   Cette fonction est générique. Elle doit être codée dans l'objet déscendant.
 </remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.ValidationHeadoffice">
	<summary>
 Cette fonction permet de valider les champs en mode IsHeadOfficeStaff "Y"
 </summary>
	<returns>
    True = Passe la validation
	   False = Ne passe pas la validation
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.ValidationValeurNonDefini(System.String@)">
	<summary>
 Cette fonction permet de valider les champs sexe et statut fumeur pour s'assurer qu'ils ne sont plus à non défini.
 </summary>
	<param name="parametreMessage">Les paramètres à mettre dans le message d'erreur.</param>
	<returns>
    True = Passe la validation
	   False = Ne passe pas la validation
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.ValidationUnload">
	<summary>
 Cette fonction permet de valider s'il y a des primes à 0. S'il
 y en a, on ne permet pas de changer d'onglet
 </summary>
	<returns>
    True = Passe la validation
	   False = Ne passe pas la validation
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.AcceptTextPanel(System.Windows.Forms.Panel)">
	<summary>
 Appelle AcceptText sur toutes le DW incluses dans un panel.
 </summary>
	<param name="myPanel">Le panel qu'il faut vérifié</param>
	<returns>Vrai si tout a bien fonctionné, faux si il y une erreur de validation</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.AcceptText">
	<summary>
 Appelle AcceptText sur toutes le DW incluses dans le formulaire.
 </summary>
	<returns>Vrai si tout a bien fonctionné, faux si il y une erreur de validation</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.Validate">
	<summary>
 Valide toutes les DWs du formulaire
 </summary>
	<returns>Vrai si c'est valide, sinon faux</returns>
	<remarks>Place le focus sur la datawindow invalide si c'est le cas</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.ValidateDatawindow(IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow)">
	<summary>
 Valide la datawindow passée en paramètre
 </summary>
	<param name="requestor">la datawindow actuelle, qu'on ne valide pas</param>
	<param name="myDatawindow">un pointeur sur la datawindow à valider</param>
	<returns>Vrai si c'est valide, sinon faux</returns>
	<remarks>Place le focus sur la datawindow invalide si c'est le cas</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.ValidatePanel(IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow,System.Windows.Forms.Panel)">
	<summary>
 Valide les DWs à l'intérieur d'un panel, sauf celle passée en paramètre
 </summary>
	<param name="requestor">La datawindow actuelle, qu'on ne valide pas</param>
	<param name="panel">un pointeur sur le panel à valider</param>
	<returns>Vrai si c'est valide, sinon faux</returns>
	<remarks>Place le focus sur la datawindow invalide si c'est le cas</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.Validate(IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow)">
	<summary>
 Valide toutes les DWs du formulaire , sauf celle passée en paramètre
 </summary>
	<param name="requestor">La datawindow actuelle, qu'on ne valide pas</param>
	<returns>Vrai si c'est valide, sinon faux</returns>
	<remarks>Place le focus sur la datawindow invalide si c'est le cas</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.Switch">
	<summary>
 Méthode qui est appelé lors du changement de langue de l'application
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.PositionnerFocusTabShiftTab(System.String)">
	<summary>
 Méthode servant à mettre le focus sur le bon champ de la bonne datawindow
 dependant la provenance du focus
 </summary>
	<param name="activeCtrlName">Non du contrôle d'ou provient le focus</param>
	<remarks>Cette méthode est utiliser par la classe "FormulaireOnglets" afin de
 positionner le focus correctement lorsque l'usager fait un Tab ou Shift-Tab
 lorsque le focus est sur les bouton "Précédent" ou "Suivant" de cette classe</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireIllustrationBase.FormulaireIllustrationBase_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
	<summary>
 Évènement qui survient lors de la validation du formulaire
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireRapport">
	<summary>
 Classe contenant les méthodes et les évènements de FormulaireRapport
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueConceptiaValidation.Erreurs">
	<summary>
 Propriété qui retourne les erreurs dans une liste of String
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueConceptiaValidation.DialogueConceptiaValidation_Load(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient lors du chargement du dialogue
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.DialogueConceptiaValidation.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click de la DataWindowPrincipale
 Cette méthode gère les évènements Click de l'élément p_close
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement Click de la DataWindow. Ces arguments contiennent
 des valeurs spécifiques au DataWindow</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.Items">
	<summary>
 Cette énumération est utilisée pour les items contenus dans la fenêtre
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.Messages">
	<summary>
 Énumération contenant le nom des messages
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.FormulairePropElec_Load(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Load de la DataWindow principale
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click de la DataWindow principale
 Cette méthode gère les évènements Click de l'élément st_prp_bouton_propo
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement Click de la DataWindow. Ces arguments contiennent
 des valeurs spécifiques au DataWindow</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.FormulairePropElec_Resize(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Resize du FormulairePropElec
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.FormulairePropElec_switchLang(System.Object)">
	<summary>
 Méthode utilisé pour la gestion de l'évènement switchLang du formulaire
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.p_propo_Click(System.Object,System.EventArgs)">
	<summary>
 Méthode pour la gestion de l'évènement Click de p_propo
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.LoadData(System.Object)">
	<summary>
 Fonction utilisée pour le chargement de données
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.SetFocusLoad">
	<summary>
 Met le focus sur le champ de numéro de propo.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
	<summary>
 Traite une touche de commande.
 </summary>
	<param name="msg">System.Windows.Forms.Message, passé par référence, qui représente le message de fenêtre à traiter.</param>
	<param name="keyData">Une des valeurs System.Windows.Forms.Keys qui représente la touche à traiter. </param>
	<returns>True si le caractère a été traité par cette méthode; sinon False.</returns>
	<remarks>Cette méthode est nécessaire pour contourner un bogue de tabulation dans datawindow .Net 2.0</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.ToutesValidations">
	<summary>
 Permet d'effectuer toutes les validations nécessaires avant d'aller dans la 
 proposition électronique
 </summary>
	<returns>True si toutes les validations sont correctes</returns>
	<remarks>Lorsqu'on ajoute une validation dans cette fonction, il ne 
 faut pas oublier d'aller ajouter cette validation dans 
 validationsProposition de ApplicationIllusVieBase</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.ValiderNoPropo">
	<summary>
 Permet de valider si le numéro de proposition saisi est du
 bon format et si ce numéro n'est pas un numéro d'une 
 proposition électronique existante
 </summary>
	<returns>True si le numéro de proposition saisi est
 du bon format</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.PreparerPropo">
	<summary>
 Fait les validations et les sauvegardes avant de démarrer la propo.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec.DemarrerPropo">
	<summary>
 Cette méthode démarre une proposition
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulairePropElec">
	<summary>
 Classe contenant les méthodes et les évènements de FormulaireBaseDataWindow
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.Items">
	<summary>
 Cette énumération est utilisée pour les items contenus dans la fenêtre
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.MsgDiagCalcul">
	<summary>
 Propriété qui contient le message d'erreur à afficher après les calculs
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.DataWindowPrincipale_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement KeyDown de la DataWindowPrincipale.
 Cette méthode gère les évènements KeyDown Keys.Down et Keys.Up
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.DataWindowPrincipale_ScrollVertical(System.Object,Sybase.DataWindow.ScrollVerticalEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement ScrollVertical de la DataWindowPrincipale
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement ScrollVertical de la DataWindow. Ces arguments contiennent
 des valeurs spécifiques au DataWindow</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click de la DataWindowPrincipale.
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement Click de la DataWindow. Ces arguments contiennent
 des valeurs spécifiques au DataWindow</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.DataWindowChoix_Postitemchanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Postitemchanged de la DataWindowChoix.
 Cette méthode gère les évènements PostItemChanged de l'élément choix_tab_gra
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement PostItemChanged de la DataWindow. Ces arguments contiennent
 des valeurs spécifiques au DataWindow</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.DataWindowChoix_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Gestion de la méthode KeyDown de la datawindowChoix
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.DataWindow2_ScrollVertical(System.Object,Sybase.DataWindow.ScrollVerticalEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement ScrollVertical de la DataWindow2
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement ScrollVertical de la DataWindow. Ces arguments contiennent
 des valeurs spécifiques au DataWindow</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.DataWindow2_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement KeyDown de la DataWindow2.
 Cette méthode gère les évènements KeyDown Keys.Down et Keys.Up
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.DataWindow2_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click de la DataWindow2
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement Click de la DataWindow. Ces arguments contiennent
 des valeurs spécifiques au DataWindow</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.FormulaireResultats_Resize(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Resize de FormulaireResultats
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.FormulaireResultats_Load(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Load de FormulaireResultats
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.FormulaireResultats_switchLang(System.Object)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement switchLang de FormulaireResultats
 </summary>
	<param name="sender">Objet ayant lancé l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.FormulaireResultats_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement KeyDown de FormulaireResultats.
 Cette méthode gère les évènements KeyDown Control + E pour aller directement à la 
 proposition électronique
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ConfigurerTabGra_Click(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click du bouton ConfigurerTabGra
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ExportationExcel_Click(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click du bouton ExportationExcel
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ServiceKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Méthode utilisée pour faire la gestion de l'évènement KeyDown
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.LoadData(System.Object)">
	<summary>
 Méthode utilisée pour faire le chargement des données
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.EffectuerCalcul">
	<summary>
 Méthode qui effectue les calculs pour les 5 scénarios
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.OnPostOutputCalculations(System.EventArgs)">
	<summary>
 Méthode qui produit les OutPut QA si nécessaire (ROBOT)
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ResetUpdate">
	<summary>
 Méthode utilisée pour faire le reset d'un update
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.DetectChange(System.Object)">
	<summary>
 Fonction utilisé pour détecter un changement
 </summary>
	<returns>True si il y a eu un changement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.AcceptText">
	<summary>
 Cette fonction permet de faire un acceptText
 </summary>
	<returns>True si le AcceptText a fonctionné</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ObtenirNombreAnneesIllustrees">
	<summary>
 Fonction qui retourne le nombre d'année que les résultats doivent affichées
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.AjouterDonneesTableaux(System.Int32,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
	<summary>
 Cette méthode permet d'ajouter des données dans les tableaux
 </summary>
	<param name="NbCol">Nombre de colonne</param>
	<param name="NumScenarios">Liste des numéros de scénarios</param>
	<param name="NumColonnes">Liste des numéros de colonnes</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ObtenirColonneDuMoteur(System.Int32,System.Int32,System.Collections.Generic.List{System.Double}@)">
	<summary>
 Méthode qui obtient une colonne du moteur selon les paramètres
 </summary>
	<param name="colonneId"></param>
	<param name="scenarioId"></param>
	<param name="tableColonne"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
	<summary>
 Traite une touche de commande.
 </summary>
	<param name="msg">System.Windows.Forms.Message, passé par référence, qui représente le message de fenêtre à traiter.</param>
	<param name="keyData">Une des valeurs System.Windows.Forms.Keys qui représente la touche à traiter. </param>
	<returns>True si le caractère a été traité par cette méthode; sinon False.</returns>
	<remarks>Cette méthode est nécessaire pour contourner un bogue de tabulation dans datawindow .Net 2.0</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ExportToExcel">
	<summary>
 Cette méthode permet l'exportation vers Excel
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.EnregistrerInfobulle">
	<summary>
 Méthode qui enregistre les infobulles du formulaires
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.TabGraDisponible(System.String,System.Collections.Generic.List{System.String})">
	<summary>
 Cette fonction permet de vérifier si l'Id (tableau ou graphique) est disponible
 </summary>
	<param name="idCourant">Id du tableau/graphique</param>
	<param name="listeId">Liste d'id</param>
	<returns>True si l'id est disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.GererListeTabGra(System.Boolean)">
	<summary>
 Cette méthode permet de générer une liste de tableau/graphique
 </summary>
	<param name="changerTypeResultats">Changer le type de résultats</param>
	<returns>True = on affiche les résultats, False = on n'affiche pas les résultats</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.GererDispoTabGra(System.Boolean)">
	<summary>
 Méthode qui fait la gestion de la disponibilité des tabbleaux et graphiques
 </summary>
	<param name="disponible">Si les tableaux/graphiques sont disponible</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.AfficherResultat">
	<summary>
 Cette méthode permet d'afficher les résultats
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.CreerGraphique(System.String,System.String)">
	<summary>
 Cette méthode est utilisée pour la création d'un graphique
 </summary>
	<param name="graphiqueId">Id du graphique</param>
	<param name="pathFile">Chemin d'accès du fichier</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.SetTableauGeneral(System.String)">
	<summary>
 Cette méthode permet de charger le tableau passé en paramètre
 </summary>
	<param name="tableauId">Id du tableau à construire</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.AddDynamicColumn">
	<summary>
 Construit une chaîne de caractère des colonnes à créer 
 dans le tableau 2
 </summary>
	<returns>True si c'est un succès</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.AddDynamicTitre">
	<summary>
 Construit une chaîne de caractère des Entêtes de colonnes à  
	créer dans les tableaux DataWindowPrincipale et DataWindow2
 </summary>
	<returns>True si c'est un succès</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.AddDynamicFormat">
	<summary>
 Construit une chaîne de caractère du format de colonnes à  
	modifier dans les tableaux DataWindowPrincipale et DataWindow2
 </summary>
	<returns>True si c'est un succès</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.AfficherPrimeMinimale">
	<summary>
 Méthode qui affiche la prime minimale
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.AfficherPrimeMaximale">
	<summary>
 Méthode qui affiche la prime maximale
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.AfficherPrimesContrat">
	<summary>
 Cette méthode fait le traitement nécessaire pour l'affichage
 à l'écran de la prime minimum et maximum
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ProduireOutputQa(System.Int32)">
	<summary>
 Cette méthode permet de produire l'output des colonnes du moteur
 </summary>
	<param name="scenario">Numéro de scénario</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ProduireOutputQANonTrad(System.Int32,System.Text.StringBuilder,System.IO.StreamWriter)">
	<summary>
 Méthode qui crée les OutPut QA pour NONTRAD
 </summary>
	<param name="scenario"></param>
	<param name="output"></param>
	<param name="sw"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.PersonnaliserTabGra">
	<summary>
 Cette méthode permet de personnaliser un tableau ou un graphique
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ChangementPictureBoxConfigurer">
	<summary>
 Cette méthode permet de changer le picture box Configurer
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.PostLoad">
	<summary>
 Méthode de la gestion du PostLoad
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.Init">
	<summary>
 Initialisation ds valeurs du formulaire
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.AjusterHauteurDataWindowPrincipale">
	<summary>
 Méthode utilisée pour ajuter la hauteur de la DataWindowPrincipale
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.InitInfobulles">
	<summary>
 Permet de faire l'enregistrement des infobulles de toutes les colonnes.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats.ClearInfobulles">
	<summary>
 Permet d'enlever tous les infobulles ajouter par le précédent tableau.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireResultats">
	<summary>
 Classe contenant les méthodes et les évènements de FormulaireResultats
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.My.Resources.Resources.ResourceManager">
	<summary>
  Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
</summary>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.My.Resources.Resources.Culture">
	<summary>
  Remplace la propriété CurrentUICulture du thread actuel pour toutes
  les recherches de ressources à l'aide de cette classe de ressource fortement typée.
</summary>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.My.Resources.Resources.ConceptiaExcelPassword">
	<summary>
  Recherche une chaîne localisée semblable à t7utw6te.
</summary>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.My.Resources.Resources">
	<summary>
  Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
</summary>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.Utilitaires.InitialiserContexte">
	<summary>
 Initialise l'objet de contexte en début de traitement.
 </summary>
	<remarks>
 L'initilisation doit être TOUJOURS faite dans le SetUp d'une classe!!!!
 </remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.Utilitaires.RelacherContexte">
	<summary>
 Destruction de l'objet de contexte en fin de traitement.
 </summary>
	<remarks>
 La destruction doit être TOUJOURS faite dans le TearDown d'une classe!!!!
 </remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.Utilitaires.SauvegarderEtRecharger(IAFG.IA.VI.AF.Base.ObjetTete)">
	<summary>
 Applique deux sauvegardes/rechargements consécutif et s'assure que la structure XML du fichier de sauvegarde n'a pas changé durant le traitement.
 </summary>
	<param name="illus">L'objet TempsArret sur lequel on doit appliquer le test.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.NUnit.Utilitaires.SupprimerNoeudXML(System.String,System.String[])">
	<summary>
 Supprime une liste de noeuds dans une chaîne XML et retourne la nouvelle chaîne XML.
 </summary>
	<param name="chaineXML">Chaîne XML à modifier.</param>
	<param name="noeudsASupprimer">Liste des noms de noeuds à supprimer.</param>
	<returns>La nouvelle chaîne avec les modifications appliquées.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.LoadTabForce">
	<summary>
 Propriété en écriture seulement qui indique si on force le chargement des onglets
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.DeletingInsured">
	<summary>
 Propriété en lecture-seule qui indique si on est en train de supprimer un assuré
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.AddingInsured">
	<summary>
 Propriété en lecture-seule qui retourne si on est en train d'ajouter un assuré
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.CurrentTab">
	<summary>
 Onglet logique courant
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Si on le change, l'onglet se sélectionne.</remarks>
</member><member name="E:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.TabChanged">
	<summary>
 Évènement qui survient lors du changement d'onglet
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.FormulaireOnglets_Load1(System.Object,System.EventArgs)">
	<summary>
 Évènement qui survient lors du chargement du formulaire
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.DataWindowTab_Click1(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Gestion du click sur les éléments graphiques.</summary>
	<isnew>2008-04-24</isnew>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.ReinitialiserOnglet(System.Int32)">
	<summary>
 Méthode qui fait le traitement pour réinitialiser un assuré (donc qui a préalablement été supprimé)
 </summary>
	<param name="noAssure">Le numéro d'assuré ordinal</param>
	<returns>Return true si le traitement est un succès et nous permet d'afficher l'onglet</returns>
	<remarks>Est overridé dans EVIA</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.LoadOngletPermis(System.Int32)">
	<summary>
 Permet de savoir si on peut loader l'onglet sur lequel on vient de cliquer
 </summary>
	<param name="noSousFormulaire"></param>
	<returns></returns>
	<remarks>Overridé dans EVIA</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.ChangerOngletCourant(System.Int32)">
	<summary>
 Méthode qui fait le changement d'onglet courant. Il active l'onglet dont l'index est passé en paramètre
 </summary>
	<param name="nouvelIndex">le nouvel index</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.FormulaireOnglets_TabChanged(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.FormulaireBaseOnglets.TabChangedEventArgs)">
	<summary>
 Évènement qui survient lorsqu'il y a changement d'onglet
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.FormulaireOnglets_switchLang(System.Object)">
	<summary>
 Évènement qui survient lorsque du changement de langue de l'application
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.GetRealTabNumberFromLogicTab(System.Int32)">
	<summary>
 Retourne le tab physique selon le tab logique ( on en montre seulement 4 physique à la fois )
 </summary>
	<param name="index"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.InsertTab(System.String,System.Boolean,IAFG.IA.VI.AP.Commun.Services.GestionFormulaires.InfoSousFormulaire)">
	<summary>
 Insère un onglet
 </summary>
	<param name="tabText">Pas pris en compte en raison de la méthode AssignerLibeleesOnglets</param>
	<param name="active"></param>
	<param name="infoFormOnglet"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.ChangeTab(System.Int32,System.Boolean)">
	<summary>
 Permet de changer L'onglet et de dire si on valide ou non.
 </summary>
	<param name="tab"></param>
	<param name="validate"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.DoTabChange(System.Int32)">
	<summary>
 Effectue le changement d'ongle logique
 </summary>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.AssignerLibeleesOnglets">
	<summary>
 Cette fonction fait le traitement nécessaire pour faire 
 l'affectation des libellées des onglets selon les 
 assurés donc nous visionnons et s'il y a des contractants
 dans les onglets.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.IsApplicantPresent(System.Int32)">
	<summary>
 vérifie que l'onglet contient le contractant
 </summary>
	<param name="newRowId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.GererDisposition">
	<summary>
 Cette fonction fait le traitement nécessaire pour la gestion
                du positionnement ou la visibité des boutons servant à 
                la navigation, ajout et suppression de assurés.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.AfficherPrimeMinimale">
	<summary>
 Méthode qui affiche la prime minimale
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.AfficherPrimeMaximale">
	<summary>
 Méthode qui affiche la prime maximale
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.AfficherPrimesContrat">
	<summary>
 Cette fonction fait le traitement nécessaire pour l'affichage
 à l'écran de la prime minimum et maximum.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.SetShowAllCoveragesFlag(System.Boolean)">
	<summary>
 Méthode qui affecte le flag "Afficher toutes les protections" selon le paramètre
 </summary>
	<param name="ashowDialogueBaseCoverages"></param>
	<remarks>TODO - À convertir en Propriété</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.GetShowAllCoveragesFlag">
	<summary>
 Fonction qui retourne le flag "Afficher toutes les protections"
 </summary>
	<returns></returns>
	<remarks>TODO - À convertir en Propriété</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.GetInsuredCount">
	<summary>
 Retourne le nombre d'onglet
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.GetIdIndividuAjout">
	<summary>
 Retourne l'ID de l'individu à ajouter.</summary>
	<isnew>2008-04-24</isnew>
	<returns>L'ID de l'individu à ajouter.</returns>
	<remarks>Pour l'ajout d'un individu lorsqu'on connait son identité.</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.SetIdIndividuAjout(System.String)">
	<summary>
 Assigne l'ID de l'individu à ajouter.</summary>
	<isnew>2008-04-24</isnew>
	<param name="IdIndividuAjout">L'ID de l'individu à ajouter.</param>
	<remarks>Pour l'ajout d'un individu lorsqu'on connait son identité.</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.SetVisibilitePrimeMax(System.Boolean)">
	<summary>
 Cette fonction applique la visibilité du libellé prime max
						selon le paramètre passé
 </summary>
	<param name="visibilite"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.PresenceIndAutreAss(System.String,System.Int32)">
	<summary>
 Cette fonction retourne si L'individu est présent sur un autre 
 assuré que celui passé en param
 </summary>
	<param name="IdIndividu">l'id de l'individu</param>
	<param name="NoAssure"> Le numéro de l'assuré en cours</param>
	<returns>True : L'individu est présent sur un autre assuré que celui passé en param
			 False: L'individu n'est pas présent sur un autre assuré que celui passé en param
</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.AddInsured">
	<summary>
 Fonction qui permet d'ajouter un assuré.</summary>
	<isnew>2008-04-24</isnew>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.RemoveTab">
	<summary>
 Supprime le dernier onglet.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.ObtenirIndividuEnVigueur(System.String)">
	<summary>
 nous permet de savoir si un individu est En Vigueur 
 </summary>
	<param name="idIndividu">l'id de l'individu</param>
	<returns></returns>
	<remarks>est overridé dans EVIA</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.SupprimerOngletAssure(System.Int32)">
	<summary>
 Efface l'assuré.</summary>
	<param name="noAssure">No assuré à effacer</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.SupprimerRafraichirOngletAssure(System.Int32,System.Boolean)">
	<summary>
 Efface l'assuré et rafraichie l'ensemble du formulaire.</summary>
	<isnew>2008-04-24</isnew>
	<param name="noAssure">No assuré à effacer</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.SetDwText">
	<summary>
 affiche le texte des onglets selon la langue
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
	<summary>
 Traite une touche de commande.
 </summary>
	<param name="msg">System.Windows.Forms.Message, passé par référence, qui représente le message de fenêtre à traiter.</param>
	<param name="keyData">Une des valeurs System.Windows.Forms.Keys qui représente la touche à traiter. </param>
	<returns>True si le caractère a été traité par cette méthode; sinon False.</returns>
	<remarks>Cette méthode est nécessaire pour contourner un bogue de tabulation dans datawindow .Net 2.0</remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.ServiceKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Méthode qui est appelé lorsque l'utilisateur appuie sur une touche
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets.ObtenireNoAssureAvecIndex(System.Int32)">
	<summary>
 Pertmet d'obtenir le numéro d'assuré associé à un onglet.
 </summary>
	<param name="index"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.CtrlIU.FormulaireOnglets">
	<summary>
 Gestion du formulaire de l'onglet.</summary>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 ===========================================================================
 Tremblay, Victor  2008-04-24   Corrections apportées aux fonctions qui se 
                                rapportent à la gestion des individus.
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.AccesServices.#ctor">
	<summary>
 Uniquement déclarer pour faire en sorte que FXCop ne souligne l'erreur 
 "Static holder types should not have constructors"
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.UtilsDonneesVie">
	<summary>
 Propriété qui retourne le service "UtilsDonneesVie"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.ReglesApplicatives">
	<summary>
 Propriété qui retourne le service "ReglesApplicatives"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Validateur">
	<summary>
 Propriété qui retourne le service "Validateur"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.GestionDossier">
	<summary>
 Propriété qui retourne le service "GestionDossier"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.UtilsDossier">
	<summary>
 Propriété qui retourne le service "UtilsDossier"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.DisponibilitePlan">
	<summary>
 Propriété qui retourne le service "DisponibilitePlan"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.GestionCalcul">
	<summary>
 Propriété qui retourne le service "GestionCalcul"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.RegleAffaires">
	<summary>
 Propriété qui retourne le service "RegleAffaires"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.GestionBoni">
	<summary>
 Propriété qui retourne le service "GestionBoni"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.EsperanceVie">
	<summary>
 Propriété qui retourne le service "EsperanceVie"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.GestionFormatsExcel">
	<summary>
 Propriété qui retourne le service "GestionFormatsExcel"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Colonnes">
	<summary>
 Propriété qui retourne le service "Colonnes"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Graphiques">
	<summary>
 Propriété qui retourne le service "Graphiques"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Tableaux">
	<summary>
 Propriété qui retourne le service "Tableaux"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.TauxImpot">
	<summary>
 Propriété qui retourne le service "TauxImpot"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Fonctions">
	<summary>
 Propriété qui retourne le service "Fonctions"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Formulaires">
	<summary>
 Propriété qui retourne le service "Formulaires"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Langues">
	<summary>
 Propriété qui retourne le service "Langues"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.AideContextuelle">
	<summary>
 Propriété qui retourne le service "AideContextuelle"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Application">
	<summary>
 Propriété qui retourne le service "Application"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.MenuContextuel">
	<summary>
 Propriété qui retourne le service "MenuContextuel"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Messages">
	<summary>
 Propriété qui retourne le service "Messages"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.ListesChoix">
	<summary>
 Propriété qui retourne le service "ListesChoix"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Pilotage">
	<summary>
 Propriété qui retourne le service "Pilotage"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Styles">
	<summary>
 Propriété qui retourne le service "Styles"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Resources">
	<summary>
 Propriété qui retourne le service "Resources"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.AccesServices.Intermediaire">
	<summary>
 Propriété qui retourne le service "Intermediaire"
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssures.#ctor">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="F:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssures._assures">
	<summary>
 Membres interne privé qui contient la liste des assurés
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssures.Collection">
	<summary>
 Propriété qui retourne la Collection interne des assurés
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssures.Count">
	<summary>
 Retourne le nombre d'assurés dans la collection
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssures.GetAgePlusJeune(System.Boolean)">
	<summary>
 Fonction qui retourne l'age du plus jeune assurés de la collection
 </summary>
	<param name="AssNonAssurableInclus">Est-ce qu'on inclus les assurés non-assurable</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssures.GetAgePlusVieux(System.Boolean)">
	<summary>
 Fonction qui retourne l'age de l'assuré le plus vieux de la collection
 </summary>
	<param name="AssNonAssurableInclus">Est-ce qu'on inclus les assurés non-assurable</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssures.Item(System.Int32)">
	<summary>
 Permet de retourne un assuré selon l'index passé en paramètre.
 </summary>
	<param name="Index">le numéro de l'index de l'assuré désiré</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Services.DisponibilitePlanAssures">
	<summary>
 Classe utilitaire pour le service DisponibilitePlan. Cette classe
 représente une collection d'assures sur une protection. 
 </summary>
	<remarks>Elle implémente l'interface IAFG.IA.VI.AF.PDFs.IAssures du projet IAFG.IA.VI.AF.Proposition.</remarks>
</member><member name="F:IAFG.IA.IL.AP.IllusVie.Services.GestionFormatsExcel.PATTERN_REQUETE_XPATH">
	<summary>
 Défini la requête XPath recherchant un format Excel selon
 un format de colonne et un nom de culture.
 </summary>
	<remarks></remarks>
</member><member name="F:IAFG.IA.IL.AP.IllusVie.Services.GestionFormatsExcel._documentXml">
	<summary>
 Conserve une référence vers un XmlDocument contenant
 les données de conversion.
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.IllusVie.Services.GestionFormatsExcel.DocumentXml">
	<summary>
 Obtient une référence vers un XmlDocument contenant
 les données de conversion.
 </summary>
	<remarks>
 Cette propriété implémente le mécanisme d'instanciations 
 retardées (lazy instantiation pattern).
 </remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormatsExcel.ChargerXml(System.String)">
	<summary>
 Charge le fichier XML spécifié en mémoire.
 </summary>
	<param name="fichier">Chemin d'accès aux fichiers XML de conversion.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.IllusVie.Services.GestionFormatsExcel.ObtenirFormatExcel(System.String,System.Globalization.CultureInfo)">
	<summary>
 Fonction qui obtient le format Excel
 </summary>
	<param name="formatColonne"></param>
	<param name="culture"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.IllusVie.Services.GestionFormatsExcel">
	<summary>
 Cette clase permet d'obtenir un format Excel localisé équivalent 
 à un format de colonne d'application de l'Interface IA.
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>