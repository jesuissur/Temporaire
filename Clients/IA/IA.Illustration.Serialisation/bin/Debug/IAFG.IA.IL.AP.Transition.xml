<?xml version="1.0"?>
<doc>
<assembly>
<name>
IAFG.IA.IL.AP.Transition
</name>
</assembly>
<members>
<member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.VerifierInfoAddProtection(System.String)">
	<summary>
 Obtenir des informations supplémentaire sur le plan en paramêtre en rapport avec la comparaison.
 Disponibilité, annocation...
 </summary>
	<param name="plan"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.AjusterPosition">
	<summary>
 Méthode qui fait la gestion des positions des objets de la fenêtre
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.AffecterCodeROP">
	<summary>
 Méthode qui affecte la valeur initiale à la liste du ROP
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.IsProtectionDisponibleCmp(System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeProtectionInfoAdd,System.Int32,IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration)">
	<summary>
 Fonction qui permet de savoir si le type d'infoAdd passé en paramètre est disponible sur 
 le code de plan est disponible
 </summary>
	<param name="codePlan">Le code de plan de la protection de Base</param>
	<param name="typeInfoAdd">Le type de l'avenant</param>
	<param name="age">l'âge de l'individu</param>
	<returns>True = Le type de l'avenant est dispo sur le code de plan. False = Elle ne l'est pas</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.IsAvenantInclus(System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeProtectionInfoAdd)">
	<summary>
 Fonction qui permet de savoir si le type d'avenant passé en paramètre est inclus
 dans la protection de base passée en paramètre
 </summary>
	<param name="codePlan">Le code de plan de la protection de base</param>
	<param name="typeInfoAdd">le type d'avenant</param>
	<returns>true = l'avenant est inclus, False = il ne l'est pas</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.AjusterMessageProtections">
	<summary>
 Méthode qui gère les disponibilités des protections
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.Calculer">
	<summary>
 Méthode pour lancer les calculs
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.TrierRequete(IAFG.IA.IL.AP.IllusVie.PDF.Requetes.PlansDisponiblesComparatif)">
	<summary>
 Méthode qui trie les extraits dans l'ordre désiré
 </summary>
	<param name="requete">la requete contenant les plan à trier</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.InitialiserComparatif">
	<summary>
 Cette méthode initialise le traitement pour le moteur de calcul
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.VerifierDispoAvenants">
	<summary>
 Méthode qui vérifie si les avenants présents sont valides
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.GererProduit(System.String)">
	<summary>
 Méthode qui fait la gestion des produits dans la fenêtre du comparatif
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.UnloadData(System.Object)">
	<summary>
 Fonction qui retourne on continuer de décharger les données du dialogue
 </summary>
	<param name="sender"></param>
	<returns>True = On continue, False = on arrête</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.ObtenirHauteurFenetre">
	<summary>
 Fonction pour obtenir la hauteur du dialogue
 </summary>
	<returns>La hauteur que le dialogue doit avoir</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
	<summary>
 Traite une touche de commande.
 </summary>
	<param name="msg">System.Windows.Forms.Message, passé par référence, qui représente le message de fenêtre à traiter.</param>
	<param name="keyData">Une des valeurs System.Windows.Forms.Keys qui représente la touche à traiter. </param>
	<returns>True si le caractère a été traité par cette méthode; sinon False.</returns>
	<remarks>Cette méthode est nécessaire pour contourner un bogue de tabulation dans datawindow .Net 2.0</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif.AffecterProtectionValide(System.Boolean,System.Int32)">
	<summary>
 Méthode pour activer ou désactiver une rangée dans la section des protections.
 </summary>
	<param name="dispo">True = On active la rangée, False = On désactive la rangée</param>
	<remarks>Mets des "-" sur toute la ligne si non valide</remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.LogiqueFormulaire">
	<summary>
 Propriété qui donne accès à l'instance de l'objet qui contient la la logique
 d'affaire de ce formulaire
 </summary>
	<value>L'instance de l'objet qui contient la logique d'affaire pour ce formulaire</value>
	<returns>L'instance de l'objet qui contient la logique d'affaire pour ce formulaire</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.LoadData(System.Object)">
	<summary>
 Chargement des données
 </summary>
	<param name="sender">Objet ayant levé l'événement</param>
	<returns>
 TRUE : si le chagement est complété avec succès. 
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.AjouterContractantCorporation">
	<summary>
 Méthode qui ajoute un contractant par défaut de type corporation
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.AjouterContractant(System.String)">
	<summary>
 Méthode qui ajouter l'id de l'individu reçu en paramètre à la collection de contractants
 SI on n'est pas TransPropPart et qu'il n'y a pas de contractant yet.
 </summary>
	<param name="idInd"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.CalculPrimesVersees">
	<summary>
 Calcul le résultat de la prime selon le type de prime choisie
 et l'inscrit à l'écran dans le champs montant de la section des primes
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.AfficherComparatif(IAFG.IA.IL.AP.IllusVie.Trad.CtrlIU.InfoProtectionsTrad,System.Int32)">
	<summary>
 Méthode pour faire afficher le comparatif
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.GererAlignementSectionPrimes">
	<summary>
 Méthode pour gérer l'alignement de la section des primes
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.ObtenirProchainAssure(System.String,System.String)">
	<summary>
 Cette fonction permet de déterminer le prochain assure
 qui peut avoir la protection de base passé en paramètre.
 as_id_assure aura la valeur "0" si aucun assuré peut recevoir la protection
 </summary>
	<param name="idBase">L'id de la protection de base</param>
	<param name="idProtection">L'id de la protection</param>
	<returns>L'id du prochain assuré disponible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.ChangerProduit">
	<summary>
 Méthode utilisée pour la gestion du changement de produit
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
	<summary>
 Traite une touche de commande.</summary>
	<isnew>2008-05-08</isnew>
	<param name="msg">System.Windows.Forms.Message, passé par référence, qui représente le message de fenêtre à traiter.</param>
	<param name="keyData">Une des valeurs System.Windows.Forms.Keys qui représente la touche à traiter. </param>
	<returns>True si le caractère a été traité par cette méthode; sinon False.</returns>
	<remarks>Cette méthode est nécessaire pour contourner un bogue de tabulation dans datawindow .Net 2.0</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.PositionnerFocusTabShiftTab(System.String)">
	<summary>
 Méthode servant à mettre le focus sur le bon champ de la bonne datawindow
 dependant la provenance du focus
 </summary>
	<param name="activeCtrlName">Non du contrôle d'ou provient le focus</param>
	<remarks>Cette méthode est utiliser par la classe "FormulaireOnglets" afin de
 positionner le focus correctement lorsque l'usager fait un Tab ou Shift-Tab
 lorsque le focus est sur les bouton "Précédent" ou "Suivant" de cette classe</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.SetFocusLoad">
	<summary>
 Méthode pour faire le focus sur le premier champs du formulaire lors
 du load de l'objet. Cette méthode est appelée dans le Gestionnaire de formulaire
 </summary>
	<remarks>Coder dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure.FormulaireAssure_switchLang(System.Object)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement SwitchLang du formulaire
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure">
	<summary>
 Gestion du formulaire de l'assuré.</summary>
	<isnew>2008-05-09</isnew>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 ===========================================================================
 Tremblay, Victor  2008-05-09   Correction des problèmes de la tabulation 
                                dans la DataWindow des protections.
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.PropositionPartagee.PropositionPartagee_Load(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Load du formulaire PropositionPartagee
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.PropositionPartagee.InitResize">
	<summary>
 Méthode qui permet d'initialiser le Resize des éléments de la 
 DataWindow1
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.CtrlIU.PropositionPartagee">
	<summary>
 Classe contenant les méthodes et les évènements de PropositionPartagee
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapportComparatif.GenererRapportComparatif(IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow,System.String,System.String,System.Boolean)">
	<summary>
 Méthode qui fait l'impression ou l'aperçu du comparatif
 </summary>
	<param name="dwAssure">la dw des assurés</param>
	<param name="dwRecherche">la dw de la recherche</param>
	<param name="dwProtections">la dw des protections</param>
	<param name="dwParam">la dw des paramètres</param>
	<param name="idProtection">l'id de la protection</param>
	<param name="idIndividu">l'id de l'individu</param>
	<param name="print">True = on imprime, false = on apperçu :)</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapportComparatif.AjouterSection(System.String,System.String,System.String)">
	<summary>
 Méthode pour ajouter une section
 </summary>
	<param name="name">le nom de la section</param>
	<param name="dwName">le nom de la datatwindowObject</param>
	<param name="importString">la string à importer dans la DW</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapportComparatif.ObtenirNomFichier">
	<summary>
 fonction qui retourne le nom de fichier à utiliser
 </summary>
	<returns>le nom de fichier à utiliser</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapportComparatif.AjouterSectionSurprime">
	<summary>
 Méthode qui fait l'ajout de la section des surprimes
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapportComparatif.InitialiserSurprimeCMP(System.String,System.String)">
	<summary>
 Méthode qui fait l'initialisation de la section des surprimes
 </summary>
	<param name="idProtection"></param>
	<param name="idIndividu"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapportComparatif.ModifierSectionSurprime">
	<summary>
 Méthode qui modifie la section des surprimes
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapportComparatif.InitialiserParam(IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow)">
	<summary>
 Méthode qui initialise la section des paramètres
 </summary>
	<param name="dwParam">la dw des paramètres</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapportComparatif.ModifierSectionProtections">
	<summary>
 Méthode qui modifie la section des protections
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapportComparatif.DeplacerChamps(Sybase.DataWindow.DataWindowChild)">
	<summary>
 Méthode qui déplace les champs de la section des protections
 </summary>
	<param name="section"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapportComparatif.InitialiserSectionAssure(IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow)">
	<summary>
 Méthode qui initialise la section des assurés
 </summary>
	<param name="dwAssure"></param>
	<param name="dwRecherche"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.AccesServices.#ctor">
	<summary>
 Uniquement déclarer pour faire en sorte que FXCop ne souligne l'erreur 
 "Static holder types should not have constructors"
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.GenererRapport(System.Boolean)">
	<summary>
 Construit le rapport en format PDF
 </summary>
	<param name="ab_print">True - Impression, False - Aperçu</param>
	<returns>Chaine vide si erreur dans le traitement, sinon Nom du rapport</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.InitialiserRapportProprietePartage">
	<summary>
 Générer les sections à imprimer du rapport standard
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.ObtenirTauxImpot(System.String)">
	<summary>
 Obtient le taux d'imposition à afficher
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.InitialiserRapportStandard">
	<summary>
 Générer les sections à imprimer du rapport standard
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.ObtenirAssureAvecGarEnfant">
	<summary>
 Cette fonction fait le traitement nécessaire pour déterminer
 quel assuré détient une garantie enfant dans l'illustration.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.GenererRapportStandard(System.String)">
	<summary>
 Générer la section à imprimer selon celle passé en paramètre 
 </summary>
	<param name="section">Nom de la section.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.GenererRapportProprietePartage(System.String)">
	<summary>
 Générer la section à imprimer selon celle passé en paramètre 
 </summary>
	<param name="section">Nom de la section.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.GetDureeProt(System.String)">
	<summary>
 Donne la durée de protection d'une protection.
 </summary>
	<param name="idProtection">l'ID de la protection</param>
	<returns> la durée 
</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.FormaterCouvertureAssure(System.String[],System.String[],System.Int32,System.String,System.String)">
	<summary>
 Formater l'information pour la section couverture des assurés.
 </summary>
	<param name="idIndividu">Vecteur contenant les individus</param>
	<param name="idProt">Vecteur contenant les couvertures</param>
	<param name="nbProt">Nombre de protection dans le vecteur des couvertures</param>
	<param name="format">Le format des champs numérique. ( Montant )</param>
	<param name="descPrMin">Texte contenant le description des primes minimum</param>
	<returns>Le importstring pour la datawindow.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.IsProtectionPresenteContrat(IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration)">
	<summary>
 Fonction qui retourne si une protection de type PlanIllus est présente sur
 l'ensemble des protections.
 </summary>
	<param name="planIllus">Le planIllus </param>
	<returns>True = la protection de type planIllus est présente
 False = la protection de type planIllus est absente</returns>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.SetDetailsPrimes(System.Boolean)">
	<summary>
 Chargement de la section du détails des primes
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.PresentationProprietePartagee">
	<summary>
 Chargement de la section "Présentation Propriété partagée
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.ObtenirNomImageHeader">
	<summary>
 Obtient le nom de l'image des header du rapport selon le produit en cous
 </summary>
	<returns>Nom de l'image pour le header des rapports</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.InitialiserTestSensibilite">
	<summary>
 Initialisation de la section Test de sensibilité
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.InitialiserPtsSaillants(System.Boolean,System.Boolean,System.String)">
	<summary>
 Initialisation des points saillants
 </summary>
	<param name="viewHeader">Si l'on affiche le header ou pas.</param>
	<param name="hasTitreSection">S'il y a un titre de section ou pas.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.ProtectionsRA(System.String[]@,System.Int32@)">
	<summary>
 Permet d'obtenir les protections Revenu d'Appoint
 </summary>
	<param name="idProtections">Id des protections</param>
	<param name="nbrProtections">Le nombre de protections Revenu d'Appoint</param>
	<returns>1 - L'action s'est effectuée avec succès
 -1 - Une erreur s'est produite durant le traitement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.PresenceRA">
	<summary>
 Cette fonction Indique si un Revenu d'Appoint est présent sur l'illustration 
 </summary>
	<returns>Si un Revenu d'Appoint est présent sur l'illustration</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.InitialiserPtsSaillantsRevAppoint(System.Boolean)">
	<summary>
 Initialisation des points saillants pour le revenu d'appoint
 </summary>
	<param name="viewHeader">Si l'on affiche le header ou pas.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.SetPageTitre">
	<summary>
 Chargement de la page titre 
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.SetIntroduction(System.String,System.String,System.String)">
	<summary>
 Chargement de l'introduction.
 </summary>
	<param name="orientation">Orientation de la page ( 1-Portrait 2-Paysage )</param>
	<param name="infoHeader">Information de l'entête pour l'introduction</param>
	<param name="importstring">String contenant les données de l'introduction</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.SetProduit">
	<summary>
 Initialisation de l'introduction
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.InitialiserSommaireMaladiesCouvertes(System.String)">
	<summary>
 Initialisation du sommaire des maladies et conditions couvertes
 </summary>
	<param name="TypeCouv">
 Valeurs permises: 
    MalGra : Sommaire des maladies graves
    MalJuv : Sommaire des maladies juvéniles
    MalEnf : Sommaire des maladies enfants
    Prev+ : Définition de la prestation prévention +
 </param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.SetSommaireMaladiesCouvertes(System.String,System.String,System.String,System.String)">
	<summary>
 Chargement des points saillants
 </summary>
	<param name="orientation">Orientation de la page ( 1-Portrait 2-Paysage )</param>
	<param name="infoHeader">Information de l'entête des pts saillants</param>
	<param name="importstring">String contenant les données des pts saillants</param>
	<param name="TypeCouv">Valeurs permises: 
    MalGra : Sommaire des maladies graves
    MalJuv : Sommaire des maladies juvéniles
    MalEnf : Sommaire des maladies enfants
    Prev+ : Définition de la prestation prévention +</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GenererRapport.ColonneCommissionEngine">
	<summary>
 Retourne le numéro de la colonne de commission actualisé.
 </summary>
	<returns>Le numéro de la colonne de commission actualisé.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Affaires.ReglesAffaireAffichage.SectionVisible(System.String,System.Boolean)">
	<summary>
 Cette fonction permet d'obtenir le statut de visibilité
 d'une section pour la regle d'affaire que représente cet
 objet
 </summary>
	<param name="idItem">Le nom de la section pour lequel nous désirons obtenir
 le statut de visiblité</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en 
 vigueur</param>
	<returns>Trus si l'item est visible</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Affaires.GestionProduit.ValiderCommission(System.Decimal)">
	<summary>
 validation de la commission
 </summary>
	<param name="valeur">la valeur décimale à valider</param>
	<returns>0 : valeur rejetée, 1 : valeur acceptée, 2 : valeur acceptée mais avertissement</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Affaires.GestionProduit.ValiderValeurProduit(System.String,System.Decimal)">
	<summary>
 Fonction pour valider la valeur passée en paramètre
 </summary>
	<param name="idItem">Le nom de l'item à valider</param>
	<param name="valeur">la valeur à valider</param>
	<returns>True = valeur valide, false = valeur invalide</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueAvenantsDefaut.ParamRetourAvenantRembPret">
	<summary>
 Paramètre de retour pour AvenantRembPret
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueAvenantsDefaut.ParamRetourAvenantRembFlexPrimes">
	<summary>
 Paramètre de retour pour AvenantRembFlexPrimes
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueAvenantsDefaut.ParamRetourAvenantPrestMajo">
	<summary>
 Paramètre de retour pour AvenantPrestMajo
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueAvenantsDefaut.Messages">
	<summary>
 Énumération contenant le nom des messages
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueAvenantsDefaut.#ctor(System.String,System.String,System.String)">
	<summary>
 Constructeur de la classe
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueAvenantsDefaut.DialogueGarantiesDefaut_Load(System.Object,System.EventArgs)">
	<summary>
 Chagement de la fenêtre DialogueGarantieDefaut
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueAvenantsDefaut.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click de la DataWindowPrincipale
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueAvenantsDefaut.UnloadData(System.Object)">
	<summary>
 Cette fonction fait la gestion de la fermeture de la fenêtre et de l'enregistrement
 des informations
 </summary>
	<param name="sender">Objet qui a levé l'évènement</param>
	<returns>True si c'est un succès</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Affaires.ReglesAffaireAssure.ValiderAgeParProduit(System.String,System.Int32,System.Boolean)">
	<summary>
 Valide l'âge selon le produit sélectionné (Transition ou Transition Evolution)
 </summary>
	<param name="produit">Le produit pour lequel on veut savoir si l'âge est valide</param>
	<param name="age">L'âge de l'assuré</param>
	<param name="isInForce">Indique si le traitement est fait pour une protection en vigueur</param>
	<returns>True si la valeur est valide</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Affaires.ReglesAffaireAssure.IsStatutVisibleAjoutAssureRetourPropo(System.Int32)">
	<summary>Cette fonction indique si la liste déroulante du statut 
 doit être affichée lors de l'ajout d'un assuré, au retour 
 de la Proposition électronique, selon son âge.</summary>
	<isnew>2008-05-06</isnew>
	<param name="ageAssure">L'âge de l'assuré.</param>
	<returns>True si l'âge de l'assuré fait en sorte qu'on doit 
 faire apparaître la liste de sélection du statut de 
 tabagisme de l'assuré; False sinon.</returns>
</member><member name="T:IAFG.IA.IL.AP.Transition.Affaires.ReglesAffaireAssure">
	<summary>
 Classe gérant les règles d'affaires pour les assurés.</summary>
	<isnew>2008-05-06</isnew>
	<remarks></remarks>
	<history>
		<pre>
 Auteur            Date         Description
 ===========================================================================
 Tremblay, Victor  2008-05-06   Ajout de la règle d'affaires 
                                IsStatutVisibleAjoutAssureRetourPropo.
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.Transition.Donnees.UtilsDossier.ObtenirRapportId(System.Int32@,System.String@,System.String@)">
	<summary>
 Obtenir le numero d'identifiant d'un rapport
 </summary>
	<param name="numeroConcept">le numéro du concept (0 pour standard)</param>
	<param name="idRapport"> l'id du rapport</param>
	<param name="codeRapport">le code du rapport</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Donnees.UtilsDossier.ObtenirConceptApplication">
	<summary>
 Cette fonction permet de nous retourner le concept de l'application en cours.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA._illus">
	<summary>
 Membre interne qui représente l'objet d'illustration
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.Proposition">
	<summary>
 Retourne la proposition
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.Illustration">
	<summary>
 Retourne l'illustration
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.Scenario">
	<summary>
 Retourne le scénario
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.TableauDecimal">
	<summary>
 Propriété qui retourne un tableau de décimal(99) vide
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.InitialiserPilotage">
	<summary>
 On initialise les pilotages nécessaire à la création du template
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.AjouterProtection(System.String)">
	<summary>
 Affecte l'information minimum pour une protection
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.Primes">
	<summary>
 Affecte l'information minimum des Primes
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.InformationsNecessaires">
	<summary>
 Affecte l'information minimum des InfosPU
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.TerminerCreation(System.String)">
	<summary>
 Termine la création du template
 </summary>
	<param name="filename">le nom du template</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.InitialiserVecteur">
	<summary>
 Méthode qui initialise les vecteurs de type Décimal, Integer et String (les 3 seuls possibles)
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.CreerTemplate(System.String)">
	<summary>
 Méthode qui crée un template de temps d'arrêt pour Genesis. 
 On retourne le nom du template à utiliser
 </summary>
	<param name="extension">l'extension que le template doit avoir.</param>
	<returns></returns>
	<remarks>Est l'appel interne</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Donnees.TemplateTA.CreerTemplateTempsArret(System.String,System.String,System.String)">
	<summary>
 Méthode qui crée un template de temps d'arrêt pour Genesis. 
 On retourne le nom du template à utiliser
 </summary>
	<param name="extension">l'extension que le template doit avoir.</param>
	<returns></returns>
	<remarks>Est appelé par le constructeur</remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.My.Resources.Resources.ResourceManager">
	<summary>
  Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
</summary>
</member><member name="P:IAFG.IA.IL.AP.Transition.My.Resources.Resources.Culture">
	<summary>
  Remplace la propriété CurrentUICulture du thread actuel pour toutes
  les recherches de ressources à l'aide de cette classe de ressource fortement typée.
</summary>
</member><member name="T:IAFG.IA.IL.AP.Transition.My.Resources.Resources">
	<summary>
  Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
</summary>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click de la DataWindowPrincipale
 Cette méthode gère les évènements Click pour l'éléments p_interrogation
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.DataWindowPrincipale_ItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement ItemChanged de la DataWindowPrincipale
 Cette méthode gère les évènements ItemChanged pour l'élément cfg_concept
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.DataWindowPrincipale_PostItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement PostItemChanged de la DataWindowPrincipale
 Cette méthode gère les évènementsPostItemChanged pour l'élément cfg_concept
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.DataWindowPrincipale_ItemError(System.Object,Sybase.DataWindow.ItemErrorEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement ItemError de la DataWindowPrincipale
 Cette méthode gère les évènements ItemError pour l'élément cfg_concept
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.FormulaireConcept_Load(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Load du FormulaireConcept
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.Switch">
	<summary>
 Méthode qui permet de faire la gestion de la langue
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.LoadData(System.Object)">
	<summary>
 Fonction qui permet de faire le chargement des données
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.VerifierTypeProtectionOpt10Opt20">
	<summary>
 Cette fonction permet de vérifier si il y a une protection 
 de types de T100 option 10 et T100 option 20
 </summary>
	<returns>True si un de ces type est présent</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.VerifierPresenceRetourPrimesFlexibles">
	<summary>
 Cette fonction permet de vérifier si l’assuré détient 
 l’avenant retour des primes flexibles
 </summary>
	<returns>True si si l’assuré détient 
 l’avenant retour des primes flexibles</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.VerifierPresenceProtectionInvalide">
	<summary>
 Cette fonction permet de vérifier la présence d'une protection
 qui empêcherait la sélection du concept Propriétés partagées 
 (avenant de prestation majorée, RA, FA, Transition enfant, Hospitalisation, 
 Hospitalisation SAD et EPIC)
 </summary>
	<returns>True si une de ces protections est trouvée</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.VerifierNombreProtectionTransition">
	<summary>
 Cette fonction permet de vérifier le nombre de protection Transition
 dans l'illustration
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.ChargerListeConcept">
	<summary>
 Cette méthode permet de charger la liste des concept dans le DropDown
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.GererErreurDuDossier">
	<summary>
 Méthode qui permet de gérer les erreurs du dossier
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept.AfficherPrimesContrat">
	<summary>
 Cette méthode fait le traitement nécessaire pour l'affichage
 à l'écran de la prime minimum et maximum
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireConcept">
	<summary>
 Classe contenant les méthodes et les évènements de FormulaireConcept
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.InitialiseParamApplicatif(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
	<summary>
 Méthode qui est exécuter au tout début de l'exécution de l'application
 </summary>
	<param name="commandLineArgs">la ligne de commande passée en paramètre à App</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.ButtonConfigPrintTransition(System.Object)">
	<summary>
 Affichage de la fenetre des parametres par défaut de l'impression.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.CreerGestionPilotage">
	<summary>
 Méthode qui fait l'instanciation de l'objet servant à la gestion des informations
 de pilotage pour l'application 
 </summary>
	<returns>Pointeur à l'instance de l'objet de gestion du pilotage</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.Statistiques">
	<summary>
 Initialise différents compteurs Sous IA Stats pour fin de statistiques
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.ConfigIllus(System.Object)">
	<summary>
 Affiche la fenêtre des configurations par défaut.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.RefreshMenu(System.Boolean)">
	<summary>
 Function qui gère les menus disponibles selon les conditions.
 </summary>
	<param name="reset">Si l'on vient de resetter le cas.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.ShowSplashScreen">
	<summary>
 Méthode qui fait l'affichage de la fenêtre d'introduction (splashscreen)
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.GererChangementScenario(System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Méthode qui fait le traitement nécessaire lors d'un changement de scénario
 Nécessaire dans les cas où il y a plus d'un assure sinon le changement de produit plante.
 </summary>
	<param name="scenario">Le numéro du scénario vers lequel l'usager veut aller</param>
	<param name="validateCurrentScenario">Indique si l'on veut valider les données
 du scénario courant avant de procéder avec le changement de scénario
 </param>
	<remarks>Si le scénario, donc le numéro est passé en paramètre, n'existe pas 
 dans le dossier alors il est créer avant de s'y positionner.</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.ObtenirObjetRapport">
	<summary>
 Permet d'obtenir un objet de rapport avec le bon type pour l'application en cours.
 </summary>
	<returns>Retourne l'objet de rapport utilisé par l'application courante.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.ButtonDefMaladies(System.Object)">
	<summary>
 Ouvrir le guide de tarif préférentiel.
 </summary>
	<param name="sender"></param>
	<remarks>NE pas enlever le paramètre sender mêm si FxCop dit qu'il est inutilisé. Ça plante au load de l'application</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.Application.ButtonPropPartagee(System.Object)">
	<summary>
 Ouvrir le guide de tarif préférentiel.
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="P:IAFG.IA.IL.AP.Transition.Utils.GestionFormulaireAssure.Parent">
	<summary>
 Propriété qui nous donne accès à l'instance de l'objet visuel auquel
 cette classe-ci est associé
 </summary>
	<value>Instance de l'objet visuel auquel cette classe est associé</value>
	<returns>Instance de l'objet visuel auquel cette classe est associé</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionFormulaireAssure.#ctor(IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAssure)">
	<summary>
 Constructeur de cette classe. Elle reçoit l'instance de l'objet visuel auquel 
 elle sera associé
 </summary>
	<param name="parent">Instance de l'objet visuel auquel cette classe est associé</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionFormulaireAssure.AjustementParametreDemarrage">
	<summary>
 Méthode qui fait les derniers ajustement par rapport au paramètre de démarrage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionFormulaireAssure.AjustementParametreDemarrageTransPropPart">
	<summary>
 Méthode qui fait les derniers ajustement par rapport au paramètre TransPropPart
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionFormulaireAssure.GererProduit">
	<summary>
 Méthode qui fait la gestion lors d'un changement de produit
 </summary>
	<remarks>Fonction coder dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionFormulaireAssure.AjouterProduit">
	<summary>
 Méthode qui fait l'ajout des informations Général sur le produit
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Utils.GestionFormulaireAssure">
	<summary>
 Classe qui contient la logigue d'affaire du formulaire de la section "Illustration"
 représenté par la classe "FormulaireAssure"
 </summary>
	<remarks>Cette classe sert à séparer la logique d'affaire de la classe visuelle 
 auquel elle est associée.Cette classe est instancié au niveau applicatif par la
 classe "FormulaireAssure".</remarks>
	<history>
		<pre>
 Auteur               Date       Description
 ==============================================================
 Robert Bastien    2007-10-02    Création
 </pre>
	</history>
</member><member name="T:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.Messages">
	<summary>
 Énumération contenant les messages d'erreurs
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click de la DataWindowPrincipale
 Cette méthode gère les évènements Click pour les éléments p_close, p_garanties_defaut, 
 p_avenant_defaut
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.DataWindowPrincipale_ItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement ItemChanged de la DataWindowPrincipale
 Cette méthode gère les évènements ItemChanged pour les éléments iga_age, montant_bloc_a, 
 cfg_pct_boni, nom, prenom, cfg_garantie_defaut, cfg_avenant_defaut, produit
 <param name="sender">Objet ayant envoyé l'évènement</param>
		<param name="e">Arguments de l'évènement</param>
	</summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.DataWindowPrincipale_ItemError(System.Object,Sybase.DataWindow.ItemErrorEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement ItemError de la DataWindowPrincipale
 Cette méthode gère les évènements ItemError pour les éléments iga_age, montant_bloc_a, 
 cfg_pct_boni, cfg_taux_com, nom, prenom
 <param name="sender">Objet ayant envoyé l'évènement</param>
		<param name="e">Arguments de l'évènement</param>
	</summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.DataWindowPrincipale_PostItemChanged(System.Object,Sybase.DataWindow.ItemChangedEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement PostItemChanged de la DataWindowPrincipale
 Cette méthode gère les évènements PostItemChanged pour les éléments province, cfg_pct_boni,
 cfg_taux_com, cfg_taux_comm_surprime, cfg_garantie_defaut, cfg_type_com
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.DialogueConfigDefaut_Load(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Load du formulaire
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.p_reinitialiser_Click(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click du bouton p_reinitialiser
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
	<summary>
 Traite une touche de commande.
 </summary>
	<param name="msg">System.Windows.Forms.Message, passé par référence, qui représente le message de fenêtre à traiter.</param>
	<param name="keyData">Une des valeurs System.Windows.Forms.Keys qui représente la touche à traiter. </param>
	<returns>True si le caractère a été traité par cette méthode; sinon False.</returns>
	<remarks>Cette méthode est nécessaire pour contourner un bogue de tabulation dans datawindow .Net 2.0</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.UnloadData(System.Object)">
	<summary>
 Méthode qui gère le déchargement des données
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.SaveSectionInfo">
	<summary>
 Cette méthode permet de sauvegarder les données de configuration en utilisant
 l'objet de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.SaveSectionAssure">
	<summary>
 Cette méthode permet de sauvegarder les données de configuration pour l'assuré en
 utilisant l'objet de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.SaveSectionProtection">
	<summary>
 Cette méthode permet de sauvegarder les données de configuration pour les protections en
 utilisant l'objet de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.SaveSectionOutilComparaison">
	<summary>
 Cette méthode permet de sauvegarder les données de configuration pour outil de comparaison en utilisant l'objet
 de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.SaveSectionResultat">
	<summary>
 Cette méthode permet de sauvegarder les données de configuration pour les résultats en
 utilisant l'objet de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.SaveSectionComp">
	<summary>
 Cette méthode permet de sauvegarder les données de configuration pour les commissions / compensations en
 utilisant l'objet de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.SaveTauxMarginal">
	<summary>
 Cette méthode permet de sauvegarder le taux marginal dans la base de registre. Indispensable si on change
 la province par default parce que GENESIS viendra lire cette clé au démarrage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.Sauvegarde">
	<summary>
 Cette méthode sert à faire la sauvegarde
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.ChargerSectionInfo(System.Boolean)">
	<summary>
 Cette méthode permet de charger les données de configuration en utilisant l'objet
 de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.ChargerSectionProtection(System.Boolean)">
	<summary>
 Cette méthode permet de charger les données de configuration pour les protections en utilisant l'objet
 de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.ChargerSectionOutilComparaison(System.Boolean)">
	<summary>
 Cette méthode permet de charger les données de configuration pour outil de comparaison en utilisant l'objet
 de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.ChargerSectionResultat(System.Boolean)">
	<summary>
 Cette méthode permet de charger les données de configuration pour les résultats en utilisant l'objet
 de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.ChargerSectionAssure(System.Boolean)">
	<summary>
 Cette méthode permet de charger les données de la section assuré en utilisant l'objet
 de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.ChargerSectionComp(System.Boolean)">
	<summary>
 Cette méthode charge les données de la section comissions / compensations grâce au service
 de pilotage
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.InitValeurs(System.Boolean)">
	<summary>
 Initialise les valeurs de la fenêtre de config
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.OuvrirGarantiesDefaut">
	<summary>
 Cette méthode permet d'ouvrir l'écran des garanties par défaut
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut.OuvrirAvenantsDefaut">
	<summary>
 Cette méthode permet d'ouvrir l'écran des avenants par défaut
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.CtrlIU.DialogueConfigDefaut">
	<summary>
 Classe contenant les méthodes et les évènements de DialogueConfigDefaut
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.#ctor(IAFG.IA.IL.AP.IllusVie.Trad.CtrlIU.InfoProtectionsTrad)">
	<summary>
 Constructeur de cette classe. Elle reçoit l'instance de l'objet visuel auquel 
 elle sera associé
 </summary>
	<param name="parent">Instance de l'objet visuel auquel cette classe est associé</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.SetFrequenceDefaut">
	<summary>
 Méthode qui fait l'affectation de la fréquence par défaut
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.AjouterAvenantParDefaut">
	<summary>
 Méthode qui fait l'ajout des avenants par défaut
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.ObtenirCodePlanAvenant(System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeProtectionInfoAdd)">
	<summary>
 Fonction permettant d'obtenir le code de plan de l'avenant passé en paramètre
 pour la protection passée en paramètre.
 </summary>
	<param name="idProt">l'Id de la protection de base (pour avoir son code de plan)</param>
	<param name="typeInfo">Le type de l'avenant</param>
	<returns>Un code de plan</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.ObtenirPremierItemListeProtection">
	<summary>
 Méthode pour obtenir le premier item de la liste de protections à ajouter
 </summary>
	<returns>1 IL.AP.IllusVie.Trad.Utils.ItemListeProtection</returns>
	<remarks>Coder dans les descendant</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.IsRAAjoutEPIC(System.String)">
	<summary>
 Méthode qui vérifie si on ajoute un RA pour ajouter automatiquement un EPIC
 </summary>
	<param name="idProtection">id de la protection que l'on ajoute</param>
	<returns>true on ajout EPIC / FALSE on ajout pas EPIC</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.SetRenouvellementAvenant(System.String,System.String)">
	<summary>
  Méthode qui fait le set au dossier du renouvellement des avenants de la protections sur un item changed
 </summary>
	<remarks>f.c. 2008-02-18</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.GererCodePlanProtAssociees">
	<summary>
 Méthode qui gère les codes de plans des avenant transition lorsque la base change.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.EffectuerVerificationMontantProtectionTransition">
	<summary>
 Méthode qui fait les vérifications sur le montant total de protection Transition
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.GererAlignementEntete">
	<summary>
 Gerer l'alignement des champs dans la DataWindow2
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.InitialiserResize">
	<summary>
 Méthode qui initialiser le resize
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.GererDerniereProtection">
	<summary>
 Méthode qui fait la gestion lors de la suppression de la 
 dernière protection à l'écran
 </summary>
	<remarks>Coder dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.ObtenirPresenceAvenants(System.Int32,System.Collections.Generic.List{IAFG.IA.VI.AF.Proposition.ENUMs.TypeProtectionInfoAdd})">
	<summary>
 Retourne une liste de boolean indiquant si chacun de élément dans la liste typeInfo est présent
 sur la protection passée en paramètre
 </summary>
	<param name="rangee">la row de la protection de base</param>
	<param name="listeTypeInfo">la liste des typeInfo</param>
	<returns>True = l'avenant est présent, False=il n'est pas</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.AfficherComparatif(System.Int32)">
	<summary>
 Méthode pour ouvrir le comparatif d'assurance vie
 </summary>
	<param name="rangee">La rangée de la protection pour laquelle ouvrir le comparatif</param>
	<remarks>Codé dans les descendants</remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.RefreshMontant(System.Int32,System.String)">
	<summary>
 Cette fonction permet gérer le montant pour les avenants
 </summary>
	<param name="rangee">la row qui est été modifiée</param>
	<param name="champs">le champs qui à été modifié</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.RafraichirMontantProtectionTotal">
	<summary>
 Méthode qui fait la gestion de l'affichage des primes totales pour
 les protections ayant des avenants
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.ValiderDeleteProtection(System.Int32)">
	<summary>
 Permet d'effectuer des validations avant la suppression d'une protection
 </summary>
	<param name="rangee"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.IsTransitionT100Present">
	<summary>
 Méthode qui détermine si une protection de type
 Transition T100 est présente
 </summary>
	<returns>True = Il y a déjà une protection de type Transition T100</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.IsProtectionPresentCode(System.String,System.String,System.Boolean)">
	<summary>
 Cette fonction fait le traitement afin de vérifier si une
 garantie de type planIllus est présente dans les protections
 </summary>
	<param name="codePlan">Le code de la protection que l'on cherche</param>
	<param name="idProtection">L'id de la protection à exclure</param>
	<param name="exclus">est-ce qu'on exclus l'id de la protection</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.ObtenirListeDejaSelect(System.Int32)">
	<summary>
 Fonction qui retourne la liste des protections qui sont déjà présente dans
 l'illustration
 </summary>
	<param name="rangee">le numéro de la rangée qui ouvre la fenêtre du comparatif</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.IsProtectionAssociePresente(System.String,IAFG.IA.IL.AP.Illustration.ENUMs.PlanIllustration)">
	<summary>
 Fonction qui retourne si le planIllus passé en paramètre est présent pour la protection passée en paramètre
 </summary>
	<param name="idProtBase">l'id de la protection de base</param>
	<param name="planIllus">le planIllus pour lequel on veut savoir si il est présent</param>
	<returns>Vrai = La protection est présente, False = la protection n'est pas présente</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection.GererAvenants(System.Int32,IAFG.IA.IL.AP.Transition.CtrlIU.DialogueComparatif)">
	<summary>
 Méthode qui fait la gestion des avenants sélectionnés dans le comparatif
 </summary>
	<param name="rangee">la rangee de la prot de base</param>
	<param name="dialog">un pointer sur le dialog du comparatif</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.Utils.GestionInfoProtection">
	<summary>
 Classe qui contient la logigue d'affaire du contrôle visuel des protections de la
 section "Illustration" représenté par la classe "InfoProtectionTrad" de couche
 IllusVie.Trad
 </summary>
	<remarks>Cette classe sert à séparer la logique d'affaire de la classe visuelle 
 auquel elle est associée. Elle hérite de la classe GestionInfoProtectionTrad qui
 contient la logique de base de la gestion des protection. Cette classe est instancié
 au niveau applicatif par la classe "FormulaireAssure".</remarks>
	<history>
		<pre>
 Auteur               Date       Description
 ==============================================================
 Robert Bastien    2007-10-02    Création
 </pre>
	</history>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAccueil.DataWindowPrincipale_Click(System.Object,IAFG.IA.VI.AP.Commun.CtrlIU.DataWindow.ItemClickEventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Click de la DataWindowPrincipale
 Cette méthode gère les évènements Click pour les éléments rp_img_transition, rp_img_transition_evolution
 st_lien_gauche_1, st_lien_gauche_2, st_lien_droit_1, st_lien_droit_2
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAccueil.DataWindowPrincipale_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Cette méthode est utilisée pour la gestion de l'évènement MouseMove de la DataWindowPrincipale.
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAccueil.FormulaireAccueil_Load(System.Object,System.EventArgs)">
	<summary>
 Méthode utilisée pour la gestion de l'évènement Load de FormulaireAccueil
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAccueil.cbx_deactivate_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 Cette méthode est utilisée pour la gestion de l'évènement CheckedChanged de la case à cocher
 cbx_deactivate
 </summary>
	<param name="sender">Objet ayant envoyé l'évènement</param>
	<param name="e">Arguments de l'évènement</param>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAccueil.UnloadData(System.Object)">
	<summary>
 Overrides de la fonction UnloadData de la classe de base
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAccueil.LoadData(System.Object)">
	<summary>
 Overrides de la fonction LoadData de la classe de base
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAccueil.ChangerProduit(IAFG.IA.VI.AF.PDF.ENUMs.FamillesProduits)">
	<summary>
 Méthode utilisée pour la gestion du changement de produit
 </summary>
	<param name="produit">Nom du produit</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.IL.AP.Transition.CtrlIU.FormulaireAccueil">
	<summary>
 Classe contenant les méthodes et les évènements de FormulaireAccueil
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>