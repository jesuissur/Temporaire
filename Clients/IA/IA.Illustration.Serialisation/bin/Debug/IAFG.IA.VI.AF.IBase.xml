<?xml version="1.0"?>
<doc>
<assembly>
<name>
IAFG.IA.VI.AF.IBase
</name>
</assembly>
<members>
<member name="P:IAFG.IA.VI.AF.IBase.My.Resources.Resources.ResourceManager">
	<summary>
  Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
</summary>
</member><member name="P:IAFG.IA.VI.AF.IBase.My.Resources.Resources.Culture">
	<summary>
  Remplace la propriété CurrentUICulture du thread actuel pour toutes
  les recherches de ressources à l'aide de cette classe de ressource fortement typée.
</summary>
</member><member name="T:IAFG.IA.VI.AF.IBase.My.Resources.Resources">
	<summary>
  Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
</summary>
</member><member name="T:IAFG.IA.VI.AF.IBase.IObjetTete">
	<summary>
 Classe à la base de tous les objets de tête
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.IBase.IIndexedDictionary`2.Item(System.Int32)">
	<summary>
 Gets or sets the value associated with the specified index.
 </summary>
	<param name="index">The index of the value to get or set.</param>
	<value></value>
	<returns>The value associated with the specified index. If the specified index is not found, a get operation throws a System.Collections.Generic.KeyNotFoundException.</returns>
</member><member name="M:IAFG.IA.VI.AF.IBase.IIndexedDictionary`2.Remove(System.Int32)">
	<summary>
 Removes the item at the specified index.
 </summary>
	<param name="index">The index.</param>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.IBase.IIndexedDictionary`2">
	<summary>
 Represents a generic collection of key/value pairs. Implements all functionality of a standard <see cref="T:System.Collections.Generic.Dictionary`2">System.Collections.Generic.Dictionary</see> and additionaly allows retrieving a value based on it's index.
 </summary>
	<typeparam name="TKey"></typeparam>
	<typeparam name="TValue"></typeparam>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.IBase.IEchange">
	<summary>
 Cette interface permet les communications spéciales entres les classes qui ne se conaissent pas ou peu.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.IBase.ICollection.Add">
	<summary>
 Ajoute un item du type courant à la collection.
 </summary>
	<returns>L'item ajouté à la collection.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.IBase.ICollection.Add(System.Type)">
	<summary>
 Ajoute un item d'un type précis à la collection.
 </summary>
	<param name="typeAInstancier">Type de l'item à instancier et ajouter à la collection.</param>
	<returns>L'item ajouté à la collection.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.IBase.ICollection.Item(System.String)">
	<summary>
 Accéde à un item par sa clé (correspond normalement à son Id).
 </summary>
	<param name="Cle">Clé de l'item dans la collection.</param>
	<returns>L'item de type "Base" correspondant à la clé.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.IBase.ICollection.Item(System.Int32)">
	<summary>
 Accéde à un item par son index i.e. sa position dans la collection.
 </summary>
	<param name="index">Position de l'item dans la collection.</param>
	<returns>L'item de type "Base" correspondant à l'index.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.IBase.ICollection.Remove(System.String)">
	<summary>
 Supprime un item de la collection en fonction de sa clé.
 </summary>
	<param name="Cle">La clé de l'item à supprimer.</param>
	<returns>TRUE ou FALSE selon le succès de l'opération.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.IBase.ICollection.Existe(System.String)">
	<summary>
 Indique s'il existe un item dans la collection correspondant à la clé passée en paramètre.
 </summary>
	<param name="Cle">La clé de l'item à trouver.</param>
	<returns>TRUE ou FALSE selon si l'item existe ou non.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.IBase.ICollection.ChangeKey(System.String,System.String)">
	<summary>
 Change la clé avec laquelle est indexé un ietm de la collection. Le même item demeure dans la collection mais sa clé d'indexation change.
 </summary>
	<param name="oldkey">La clé sous laquelle l'item est actuellement indexé.</param>
	<param name="newKey">La nouvelle clé sous laquelle l'item doit être indexé.</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.IBase.ICollection.Count">
	<summary>
 Retourne le nombre d'items dans la collection.
 </summary>
	<returns>Le nombre d'items dans la collection.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.IBase.ICollection.IndexOf(System.String)">
	<summary>
 Retourne l'index d'un item dans la collection en fonction de sa clé.
 </summary>
	<param name="cle">La clé de l'item dans la collection pour lequelle on recherche l'index.</param>
	<returns>
 L'index de l'item s'il existe dans la collection. -1, sinon.
 </returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.IBase.ICollection">
	<summary>
 Représente une collection (dictionnaire, liste, etc...) indexée pouvant être sauvegardée/rechargée par l'assembly de Base.
 </summary>
	<remarks>
 Les collections héritant de Collection(Of T) implémentent d'office de cette interface.
 Cependant, le rechargement de ce type de collection se fait en fonction de la tablette que l'on retrouve dans l'assembly de Base.
 Les "fausses" collections (celle qui n'héritent pas de Collection(Of T)) doivent elles-mêmes prendre en charge la création/ajout d'un item en fonction d'un type précis.
 </remarks>
</member><member name="T:IAFG.IA.VI.AF.IBase.IBase">
	<summary>
 Interface possédant des propriétées/fonctions communes à tous les objets de niveau supérieur.
 </summary>
	<remarks> La création de cette interface a pour but de faire un pont entre TA
           et ces propriétées/fonctions sans créer de relation de dépendance avec
           les autres entitées (du genre proposition etc.)</remarks>
</member><member name="T:IAFG.IA.VI.AF.IBase.EnumCategorieValidationMessage">
	<summary>
 Représente la catégorisation des informations diffusées dans la section sommaire des validations
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>