<?xml version="1.0"?>
<doc>
<assembly>
<name>
IAFG.IA.VI.AF.PDFsVie
</name>
</assembly>
<members>
<member name="P:IAFG.IA.VI.My.Resources.Resources.ResourceManager">
	<summary>
  Retourne l'instance ResourceManager mise en cache utilisee par cette classe.
</summary>
</member><member name="P:IAFG.IA.VI.My.Resources.Resources.Culture">
	<summary>
  Remplace la propriete CurrentUICulture du thread actuel pour toutes
  les recherches de ressources � l'aide de cette classe de ressource fortement typee.
</summary>
</member><member name="T:IAFG.IA.VI.My.Resources.Resources">
	<summary>
  Une classe de ressource fortement typee destinee, entre autres, a� la consultation des chaines localisees.
</summary>
</member><member name="M:IAFG.IA.VI.Base.KeyAccessor.ApplyCriteriaMatchEqualOrDefault(IAFG.IA.VI.Base.KeyAccessor)">
	<summary>
  Subfunction use by ApplyCriteria that tries to match criteria value by equality or match the default value define for the criteria.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.Base.KeyAccessor.ApplyCriteriaMatchGreatestValueLessOrEqual(IAFG.IA.VI.Base.KeyAccessor)">
	<summary>
  Subfunction use by ApplyCriteria that trys to select the value whose key matches the greatest value less than or equal to the criterisValue parameter
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.Base.KeyAccessor.ApplyCriteriaMatchEqual(IAFG.IA.VI.Base.KeyAccessor)">
	<summary>
  Subfunction use by ApplyCriteria that tries to match criteria value by equality.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.Base.PDFException.#ctor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.Base.PDFException.#ctor(System.String)">
	<summary>
	</summary>
	<param name="message"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.Base.PDFException.#ctor(System.String,System.Exception)">
	<summary>
	</summary>
	<param name="message"></param>
	<param name="inner"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.Base.PDFException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
	</summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.Base.PDFException">
	<summary>
 Exception qui est levee par les objets du PDF.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.AccesPilotage.Schemas">
	<summary>
 enumeration contenant les differents schemas a charger
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.ENUMs.Pilotage.AccesPilotage.DescriptionTable.NomTable">
	<summary>
 Nom de la table
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.ENUMs.Pilotage.AccesPilotage.DescriptionTable.NomAttache">
	<summary>
 Nom de l'attache (Link Table)
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.AccesPilotage.DescriptionTable.#ctor(System.String,System.String)">
	<summary>
 Constructeur de la structure
 </summary>
	<param name="nomTable">Nom de la table</param>
	<param name="nomAttache">Nom de l'attache (Link Table)</param>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.ENUMs.Pilotage.AccesPilotage.Langue">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.ENUMs.Pilotage.AccesPilotage.Banniere">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.ENUMs.Pilotage.AccesPilotage.ContexteApplicatif">
	<summary>
 Indique le context applicatif qui sera utilise lors de l'excution d'une requete sql.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.AccesPilotage.ObtenirListesChoix">
	<summary>
 Permet d'acceder les listes de choix autres que XML a travers le PDF via l'interface IListesChoix
 </summary>
	<returns>Interface des listes de choix</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.AccesPilotage">
	<summary>
 Classe servant a etablir les connexions aux bases de donnees necessaires au
 fonctionnement d'une application
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.DictionnaireDonnees">
	<summary>
 Dictionnaire de donnees contenant des objets qui implements l'interface IPDFDataTable.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.PDFException.#ctor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.PDFException.#ctor(System.String)">
	<summary>
	</summary>
	<param name="message"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.PDFException.#ctor(System.String,System.Exception)">
	<summary>
	</summary>
	<param name="message"></param>
	<param name="inner"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.PDFException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
	</summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.PDFException">
	<summary>
 Exception qui est levee par les objets du PDF.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.ListesChoix">
	<summary>
 Permet d'instancier les interfaces de listes de choix et sert de point d'entree pour avoir acces a une instance de IListesChoix 
 </summary>
	<remarks>Subterfuge pour pouvoir utiliser des listes de choix generees par le PDF a travers une interface</remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.IPDFDataTable">
	<summary>
 Interface qui permet aux methodes de passer un instance qui implemente cette interface.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.IListesChoix">
	<summary>
 Interface qui permet aux methodes de passer un instance qui implemente cette interface.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.PDFDataRows">
	<summary>
 Represente une collection de lignes de donnees.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.PDFDataRow">
	<summary>
 Represente une ligne de donnees
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine">
	<summary>
 enumeration des racines de la base de registre.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.EstCeClefExiste(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String)">
	<summary>
 Valide l'existance de la clef passee en parametre.
 </summary>
	<param name="registreRacine">La racine ou l'on doit valider l'existance de la clef.</param>
	<param name="clef">La clef dont on veut valider son existance.</param>
	<returns>Retourne la valeur True si la clef existe. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.CreerClef(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String)">
	<summary>
 Cree la clef dans la racine passee en parametre.
 </summary>
	<param name="registreRacine">La racine ou l'on veut creer la clef.</param>
	<param name="clef">La clef a creer.</param>
	<returns>Retourne la valeur True si la clef a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.SupprimerClef(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String)">
	<summary>
 Supprime la clef a partir de la racine passee en parametre
 </summary>
	<param name="registreRacine">La racine a partir de laquelle la clef sera supprimee.</param>
	<param name="clef">La clef que l'on veut supprimer.</param>
	<returns>Retourne la valeur True si la clef a ete supprimee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.SupprimerClef(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String,System.Boolean)">
	<summary>
 Supprime la clef a partir de la racine passee en parametre.. Si la clef contient des sous-clefs, en fonction du parametre recursive, l'ensemble de l'arbre sera supprime.
 </summary>
	<param name="registreRacine">La racine a partir de lqeuelle la clef sera supprimee.</param>
	<param name="clef">La clef que l'on veut supprimer.</param>
	<param name="recursive">Indique s'il faut supprimer les sous-clefs de la clef.</param>
	<returns>Retourne la valeur True si la clef a ete supprimee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.ObtenirValeur(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String,System.String,System.String)">
	<summary>
 Obtenir la valeur de la clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on doit lire la valeur de la clef.</param>
	<param name="clef">La clef d'ou l'on veut lire la valeur.</param>
	<param name="nomValeur">le nom de la valeur.</param>
	<param name="valeurDefaut">Si la valeur n'existe pas, cette valeur sera utilisee.</param>
	<returns>La valeur de type String.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.ObtenirValeur(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String,System.String,System.Byte[])">
	<summary>
 Obtenir la valeur de la clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on doit lire la valeur de la clef.</param>
	<param name="clef">La clef d'ou l'on veut lire la valeur.</param>
	<param name="nomValeur">le nom de la valeur.</param>
	<param name="valeurDefaut">Si la valeur n'existe pas, cette valeur sera utilisee.</param>
	<returns>La valeur de type Byte().</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.ObtenirValeur(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String,System.String,System.Int32)">
	<summary>
 Obtenir la valeur de la clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on doit lire la valeur de la clef.</param>
	<param name="clef">La clef d'ou l'on veut lire la valeur.</param>
	<param name="nomValeur">le nom de la valeur.</param>
	<param name="valeurDefaut">Si la valeur n'existe pas, cette valeur sera utilisee.</param>
	<returns>La valeur de type Integer.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.ObtenirValeurs(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String)">
	<summary>
	</summary>
	<param name="registreRacine"></param>
	<param name="clef"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.CreerValeur(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String,System.String,System.String)">
	<summary>
 Creer une valeur pour une clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on veyt creer une valeur.</param>
	<param name="clef">La clef ou la valeur sera creee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<param name="valeur">La valeur a conserver.</param>
	<returns>Retourne la valeur True si la valeur a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.CreerValeur(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String,System.String,System.Byte[])">
	<summary>
 Creer une valeur pour une clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on veyt creer une valeur.</param>
	<param name="clef">La clef ou la valeur sera creee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<param name="valeur">La valeur a conserver.</param>
	<returns>Retourne la valeur True si la valeur a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.CreerValeur(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String,System.String,System.Int32)">
	<summary>
 Creer une valeur pour une clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on veyt creer une valeur.</param>
	<param name="clef">La clef ou la valeur sera creee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<param name="valeur">La valeur a conserver.</param>
	<returns>Retourne la valeur True si la valeur a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.SupprimerValeur(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine,System.String,System.String)">
	<summary>
 Supprimer une valeur a partir de la clef pour la racine demandee.
 </summary>
	<param name="registreRacine">La racine d'ou l'on veut supprimer une valeur.</param>
	<param name="clef">La clef d'ou la valeur sera supprimee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<returns>Retourne la valeur True si la valeur a ete supprimee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.ObtenirClefRegistre(IAFG.IA.VI.ENUMs.Pilotage.Registre.RegistreRacine)">
	<summary>
 Permet d'obtenir un objet RegistryKey representant la racine demandee par le parametre registreRacine.
 </summary>
	<param name="registreRacine">La racine de la base de regsitre demandee.</param>
	<returns>Une instance de RegistryKey</returns>
	<remarks>Si la valeur de l'enumeration n'existe pas, la valeur nul (Nothing) est retournee.</remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Registre.EffacerRegistryKey(Microsoft.Win32.RegistryKey@)">
	<summary>
 Effacer l'instance a l'objet RegistryKey.
 </summary>
	<param name="registryKey">L'instance de l'objet RegistryKey.</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.Registre">
	<summary>
 Cette classe est une classe de facade pour l'utilisation de la base de registre.
 </summary>
	<remarks>Cette classe est statique(Shared). Cette classe est non heritable(NotInheritable).</remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Requetes.EquivalenceTypeAssurance.Executer(IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance)">
	<summary>
	</summary>
	<param name="TypeAssuranceProposition">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.ENUMs.Pilotage.Requetes.EquivalenceTypeAssurance">
	<summary>
 Classe de requete pour la requête EquivalenceTypeAssurance.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.ENUMs.Pilotage.Donnees.EquivalenceTypeAssurance.#ctor(IAFG.IA.VI.ENUMs.Pilotage.PDFDataRow,IAFG.IA.VI.ENUMs.Pilotage.Requetes.EquivalenceTypeAssurance)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.EquivalenceTypeAssurance à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetEquivalenceTypeAssurance.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.AccesPilotage.Schemas">
	<summary>
 enumeration contenant les differents schemas a charger
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.AccesPilotage.DescriptionTable.NomTable">
	<summary>
 Nom de la table
 </summary>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.AccesPilotage.DescriptionTable.NomAttache">
	<summary>
 Nom de l'attache (Link Table)
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.AccesPilotage.DescriptionTable.#ctor(System.String,System.String)">
	<summary>
 Constructeur de la structure
 </summary>
	<param name="nomTable">Nom de la table</param>
	<param name="nomAttache">Nom de l'attache (Link Table)</param>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.AccesPilotage.Langue">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.AccesPilotage.Banniere">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.AccesPilotage.ContexteApplicatif">
	<summary>
 Indique le context applicatif qui sera utilise lors de l'excution d'une requete sql.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.AccesPilotage.ObtenirListesChoix">
	<summary>
 Permet d'acceder les listes de choix autres que XML a travers le PDF via l'interface IListesChoix
 </summary>
	<returns>Interface des listes de choix</returns>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.AccesPilotage">
	<summary>
 Classe servant a etablir les connexions aux bases de donnees necessaires au
 fonctionnement d'une application
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.DictionnaireDonnees">
	<summary>
 Dictionnaire de donnees contenant des objets qui implements l'interface IPDFDataTable.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.PDFException.#ctor">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.PDFException.#ctor(System.String)">
	<summary>
	</summary>
	<param name="message"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.PDFException.#ctor(System.String,System.Exception)">
	<summary>
	</summary>
	<param name="message"></param>
	<param name="inner"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.PDFException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
	</summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.PDFException">
	<summary>
 Exception qui est levee par les objets du PDF.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.ListesChoix">
	<summary>
 Permet d'instancier les interfaces de listes de choix et sert de point d'entree pour avoir acces a une instance de IListesChoix 
 </summary>
	<remarks>Subterfuge pour pouvoir utiliser des listes de choix generees par le PDF a travers une interface</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.IPDFDataTable">
	<summary>
 Interface qui permet aux methodes de passer un instance qui implemente cette interface.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.IListesChoix">
	<summary>
 Interface qui permet aux methodes de passer un instance qui implemente cette interface.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.PDFDataRows">
	<summary>
 Represente une collection de lignes de donnees.
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.PDFDataRow">
	<summary>
 Represente une ligne de donnees
 </summary>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine">
	<summary>
 enumeration des racines de la base de registre.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.EstCeClefExiste(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String)">
	<summary>
 Valide l'existance de la clef passee en parametre.
 </summary>
	<param name="registreRacine">La racine ou l'on doit valider l'existance de la clef.</param>
	<param name="clef">La clef dont on veut valider son existance.</param>
	<returns>Retourne la valeur True si la clef existe. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.CreerClef(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String)">
	<summary>
 Cree la clef dans la racine passee en parametre.
 </summary>
	<param name="registreRacine">La racine ou l'on veut creer la clef.</param>
	<param name="clef">La clef a creer.</param>
	<returns>Retourne la valeur True si la clef a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.SupprimerClef(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String)">
	<summary>
 Supprime la clef a partir de la racine passee en parametre
 </summary>
	<param name="registreRacine">La racine a partir de laquelle la clef sera supprimee.</param>
	<param name="clef">La clef que l'on veut supprimer.</param>
	<returns>Retourne la valeur True si la clef a ete supprimee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.SupprimerClef(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String,System.Boolean)">
	<summary>
 Supprime la clef a partir de la racine passee en parametre.. Si la clef contient des sous-clefs, en fonction du parametre recursive, l'ensemble de l'arbre sera supprime.
 </summary>
	<param name="registreRacine">La racine a partir de lqeuelle la clef sera supprimee.</param>
	<param name="clef">La clef que l'on veut supprimer.</param>
	<param name="recursive">Indique s'il faut supprimer les sous-clefs de la clef.</param>
	<returns>Retourne la valeur True si la clef a ete supprimee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.ObtenirValeur(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String,System.String,System.String)">
	<summary>
 Obtenir la valeur de la clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on doit lire la valeur de la clef.</param>
	<param name="clef">La clef d'ou l'on veut lire la valeur.</param>
	<param name="nomValeur">le nom de la valeur.</param>
	<param name="valeurDefaut">Si la valeur n'existe pas, cette valeur sera utilisee.</param>
	<returns>La valeur de type String.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.ObtenirValeur(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String,System.String,System.Byte[])">
	<summary>
 Obtenir la valeur de la clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on doit lire la valeur de la clef.</param>
	<param name="clef">La clef d'ou l'on veut lire la valeur.</param>
	<param name="nomValeur">le nom de la valeur.</param>
	<param name="valeurDefaut">Si la valeur n'existe pas, cette valeur sera utilisee.</param>
	<returns>La valeur de type Byte().</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.ObtenirValeur(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String,System.String,System.Int32)">
	<summary>
 Obtenir la valeur de la clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on doit lire la valeur de la clef.</param>
	<param name="clef">La clef d'ou l'on veut lire la valeur.</param>
	<param name="nomValeur">le nom de la valeur.</param>
	<param name="valeurDefaut">Si la valeur n'existe pas, cette valeur sera utilisee.</param>
	<returns>La valeur de type Integer.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.ObtenirValeurs(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String)">
	<summary>
	</summary>
	<param name="registreRacine"></param>
	<param name="clef"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.CreerValeur(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String,System.String,System.String)">
	<summary>
 Creer une valeur pour une clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on veyt creer une valeur.</param>
	<param name="clef">La clef ou la valeur sera creee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<param name="valeur">La valeur a conserver.</param>
	<returns>Retourne la valeur True si la valeur a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.CreerValeur(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String,System.String,System.Byte[])">
	<summary>
 Creer une valeur pour une clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on veyt creer une valeur.</param>
	<param name="clef">La clef ou la valeur sera creee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<param name="valeur">La valeur a conserver.</param>
	<returns>Retourne la valeur True si la valeur a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.CreerValeur(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String,System.String,System.Int32)">
	<summary>
 Creer une valeur pour une clef a partir de la racine demandee.
 </summary>
	<param name="registreRacine">La racine ou l'on veyt creer une valeur.</param>
	<param name="clef">La clef ou la valeur sera creee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<param name="valeur">La valeur a conserver.</param>
	<returns>Retourne la valeur True si la valeur a ete creee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.SupprimerValeur(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine,System.String,System.String)">
	<summary>
 Supprimer une valeur a partir de la clef pour la racine demandee.
 </summary>
	<param name="registreRacine">La racine d'ou l'on veut supprimer une valeur.</param>
	<param name="clef">La clef d'ou la valeur sera supprimee.</param>
	<param name="nomValeur">Le nom de la valeur.</param>
	<returns>Retourne la valeur True si la valeur a ete supprimee avec succes. Dans le cas contraire, la valeur retournee est False.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.ObtenirClefRegistre(IAFG.IA.VI.AF.PDFs.Registre.RegistreRacine)">
	<summary>
 Permet d'obtenir un objet RegistryKey representant la racine demandee par le parametre registreRacine.
 </summary>
	<param name="registreRacine">La racine de la base de regsitre demandee.</param>
	<returns>Une instance de RegistryKey</returns>
	<remarks>Si la valeur de l'enumeration n'existe pas, la valeur nul (Nothing) est retournee.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Registre.EffacerRegistryKey(Microsoft.Win32.RegistryKey@)">
	<summary>
 Effacer l'instance a l'objet RegistryKey.
 </summary>
	<param name="registryKey">L'instance de l'objet RegistryKey.</param>
	<remarks></remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Registre">
	<summary>
 Cette classe est une classe de facade pour l'utilisation de la base de registre.
 </summary>
	<remarks>Cette classe est statique(Shared). Cette classe est non heritable(NotInheritable).</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Description.#ctor(IAFG.IA.VI.AF.PDFs.Protection)">
	<summary>
 Constructeur de la classe
 </summary>
	<param name="parent">Parent</param>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Description.SelonLaLangue">
	<summary>
 Description du plan en fonction de la langue courante
 </summary>
	<value></value>
	<returns></returns>
	<remarks>La description française est retournée par défaut si la langue de la "Proposition" est inconnue.</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Description.SelonLaLangue(System.Boolean)">
	<summary>
 Description du plan en fonction de la langue courante
 </summary>
	<param name="descriptionCourte">Ce paramètre permet de forcer la description courte au besoin. La description longue est retournée par défaut.</param>
	<value></value>
	<returns></returns>
	<remarks>La description française est retournée par défaut si la langue de la "Proposition" est inconnue.</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Description.Francaise">
	<summary>
 Description du plan en version française
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Description.Francaise(System.Boolean)">
	<summary>
 Description du plan en version française
 </summary>
	<param name="descriptionCourte">Ce paramètre permet de forcer la description courte au besoin. La description longue est retournée par défaut.</param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Description.Anglaise">
	<summary>
 Description du plan en version anglaise
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Description.Anglaise(System.Boolean)">
	<summary>
 Description du plan en version anglaise
 </summary>
	<param name="descriptionCourte">Ce paramètre permet de forcer la description courte au besoin. La description longue est retournée par défaut.</param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Description.GetDescriptionAdditionnelle(IAFG.IA.VI.ENUMs.Langue)">
	<summary>
 Permet de récupérer la description reliée au plan en fonction d'une langue en particulier
 </summary>
	<param name="langue">Langue dans laquelle on désire récupérer la description additionnelle.</param>
	<returns></returns>
	<remarks>Si aucune langue n'est spécifiée, on retourne la description selon la langue courante.</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.AssuranceIndividuellePermise">
	<summary>
 Détermine si un plan peut s'appliquer sur une base individuelle 
 </summary>
	<returns>TRUE : le plan en cours peut s'appliquer sur une base individuelle, FALSE : il ne peut pas</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.AssuranceIndividuellePermise(IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance)">
	<summary>
 Détermine si un plan peut s'appliquer sur une base individuelle 
 </summary>
	<returns>TRUE : le plan en cours peut s'appliquer sur une base individuelle, FALSE : il ne peut pas</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.AssuranceConjointePermise">
	<summary>
 Détermine si un plan peut s'appliquer sur une base conjointe
 </summary>
	<returns>TRUE : le plan en cours peut s'appliquer sur une base conjointe, FALSE : il ne peut pas</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.AssuranceConjointePermise(IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance)">
	<summary>
 Détermine si un plan peut s'appliquer sur une base conjointe
 </summary>
	<returns>TRUE : le plan en cours peut s'appliquer sur une base conjointe, FALSE : il ne peut pas</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.SoldeMinPret">
	<summary>
 Règle indiquant la procédure à suivre lors de la validation du montant du prêt (aussi appelé solde) lié à une protection, s'il y a lieu.
 Le montant du prêt à valider est conservé au niveau de "Protection.Solde". 
 Cette validation a lieu principalement au niveau de l'objet "LUoChgVieXX" lors de l'ajout d'une "Protection" donc, durant la validation d'une transaction de type "TrAjoutProtection". 
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Règles 0: Aucune validation
 Règles 1: Le montant du prêt est calculé en fonction du montant minimum ("Protection.PDFProtection.SoldeMinPret") et d'un montant maximum ("PDFProtection.SoldeMaxPret") prédéterminé dans le PDF de la "Protection" à valider.
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.SansVolumeAssurance">
	<summary>
 Indique s'il s'agit d'une protection à laquelle aucun montant ne peut être associé
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.RegleStabilisateurRendement">
	<summary>
 Règle indiquant la procédure à suivre lors de la validation du stabilisateur de rendement pour une protection sur laquel le type de boni "option frais minimums" est choisit. 
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Règles 0: Aucune validation
 Règles 1: La protection offre le choix entre "option frais minimums AVEC stabilisateur de rendement" et "option frais minimums SANS stabilisateur de rendement".
 Règles 2: La protection offre seulement le choix de "option frais minimums SANS stabilisateur de rendement" (le stabilisateur n'est donc pas permis).
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.FacteurMultExigences">
	<summary>
 Propriété qui indique le Facteur de multiplication pour obtenir le montant d'assurance
 pour les exigences médicales
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.MultipleMontant">
	<summary>
 Représente le multiplicateur de montant à utiliser pour ce plan lors du calcul du capital assuré pour fins de tarification.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.RegleMontantPlan">
	<summary>
 Règle indiquant la procédure à suivre lors de la validation du montant associé à une protection.
 Le montant à valider est conservé au niveau de "Protection.Montant".
 Cette validation a lieu principalement au niveau de l'objet "LUoChgVieXX" lors de l'ajout d'une "Protection" donc, durant la validation d'une transaction de type "TrAjoutProtection".
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Règles 0: Aucune validation
 Règles 1: Le montant du plan est calculé en fonction du montant minimum ("Protection.PDFProtection.MontantMin") et d'un montant maximum ("PDFProtection.MontantMax") prédéterminé dans le PDF de la "Protection" à valider. Si aucune valeur min/max n'est retrouvé dans le PDF, la validation se fait en considérant un montant maximum de 10 000$ (ce montant est "hardcodé" dans l'objet "TrAjoutProtection"...).
 Règles 2: Règles 1 + Le montant du plan ne peut excéder un pourcentage prédéterminé dans le PDF ("Protection.PDFProtection.TauxMontantPret") du montant du prêt ("Protection.Solde"). Le montant du prêt doit être différent de 0. Cette règle est entre autre associée à la validation de l'invalidité Multiterme.
 Règles 3: Règles 1 + Le montant du plan doit être égal au total du volume d'assurance demandé en ajout. Cette règle est principalement associée à la validation de l'invalidité Abritation.
 Règles 4: Règles 1 + Le montant du plan doit être un multiple du nombre prédéterminé dans le PDF("Protection.PDFProtection.MultipleMontant"). Cette règle sera utilisée dans le cas des protections d'hospitalisation par exemple. Dans ce cas, le montant de protection doit être un multiple de 50 (50, 100, 150 ou 200). Ainsi, le nombre inscrit dans le champ "MultipleMontant" dans le PDF est de "50".
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.TypeOption">
	<summary>
 Indique le type option si la protection est un APA.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.TypeBeneficiaire">
	<summary>
 Indique les types de bénéficiaires qu'il est possible d'associer à cette protection
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Les types de bénéficiaires sont représentés par un ENUM flagué. 
 Il est donc possible que la variable contienne plus d'un type de bénéficiaire.
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.DureeRevenuAppoint">
	<summary>
 Indique le terme de la garantie de revenu d'appoint lorsque la protection est du revenu d'appoint.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Ne s'applique pas à tous les types de protection.
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.CodeGarantieTexte">
	<summary>
 Retourne une valeur de type chaîne qui correspond à l'abréviation la plus courante de la garantie complémentaire lorsque le PDF courant est rattaché à une protection de type garantie complémentaire. 
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Il n’est pas conseillé de construire de la logique d’affaire autour de cette valeur. Par contre, il peut exister des situations, dans du code existant, où de faire référence à cette valeur peut nous éviter de réécrire ou changer la structure d’un programme. À utiliser avec discernement.
 S'applique uniquement aux "Protection" de type garantie.
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.SeuilTarifPreferentiel">
	<summary>
 Indique le montant minimum pour lequel il est possible d'offrir un tarif préférentiel pour ce plan.
 Un montant à 0 indique que le tarif préférentiel n'est tout simplement permis pour ce plan.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.LienBaseAvenant">
	<summary>
 Détermine si la "Protection" a un lien quelconque avec une "Protection" de base (dans le cas d'un avenant) ou avec un avenant (s'il s'agit d'une "Protection" de base).
 Cette définition permet donc de spécifier de façon précise comment les plans et les avenants peuvent s'associer selon le type de produit.
 Le lien physique entre la base et l'avenant (ou l'option) est déterminé par la propriété "Protection.LienProtectionBase".
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Si la propriété "LienBase" indique "Avenant" ou "OptionAGP", la propriété "LienProtectionBase" de la "Protection" doit contenir un pointeur sur une "Base" valide.
 Si la propriété "LienBase" indique "Base", la propriété "LienProtectionBase" de la "Protection" doit contenir un pointeur sur un "Avenant" ou une "OptionAGP" valide.
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.CodeGarantie">
	<summary>
 Indique le type de garantie lorsque la "Protection" est une garantie.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Ne s'applique pas à tous les types de protection.
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.RegleAppliquerAConjoints">
	<summary>
 Règle indiquant la procédure à suivre lors de la validation du Type d'Assurance permis pour une protection. 
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Règles 0: Non applicable - Aucune validation
 Règles 1: Conjoints et individus - Permis pour Conjoints et individuel
 Règles 2: Individus - Permis seulement en mode individuel
 Règles 3: Conjoints Assuré 1 - Permis seulement pour l'assuré 1 au conjoint
 Règles 4: DernierDeces - Permis tous les modes sauf conjoint Dernier Décès ou Dernier Décès libéré au 1er
 Règles 5: Conjoints - Permis seulement en mode conjoint
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.RegleOptionDecesProtection">
	<summary>
 Règle utilisée pour déterminer l'option de décès de la protection pour le calcul 
 du montant net au risque. Cette règle est utilisée par l'objet 
 IAFG.IA.VI.AF.Proposition.InfosPUProtection pour déterminer la valeur de retour 
 de la propriété OptionDeces.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.RegleCodeProtectionAssPrincipal">
	<summary>
 Retourne la regle qui indique sous quel forme on peut prendre la protection pour l'assuré principal
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.RegleCodeProtectionAssAdditionnel">
	<summary>
 Retourne la regle qui indique sous quel forme on peut prendre la protection pour les assurés additionnels
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.TypeMortalitePermisAjout">
	<summary>
 Retourne les types de mortalités permis pour le plan
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.OptionPermise">
	<summary>
 Retourne une valeur indiquant si une option peut être ajoutée sur la protection
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.DureeMinimisationMin">
	<summary>
 Retourne la valeur minimum pour la duree de minimisation du capital
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.PlanIllustration">
	<summary>
 Propriété qui retourne le plan spécifique pour l'illustration qui est typé en
 IL.AP.Illustration.ENUMs.PlanIllustration
 </summary>
	<returns></returns>
	<remarks>Correspond au champ CleDescription (dont le nom n'a pas rapport) de la table VIT9010_Plans</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.PatternAffichageIllustration">
	<summary>
 Retourne la valeur du champ PatternAffichageIllustration de la requête Plan
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.AgeMaxNivellement">
	<summary>
 Retourne l'âge max où il est possible de nivellé
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.RegleRabaisConjointNonAssurable">
	<summary>
 Retourne la règle pour le rabais en conjointe 2e décès et un assuré non assurable.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.PCRabaisConjointNonAssurable">
	<summary>
 retour le pourcentage de rabais en conjoint 2e deces s'il y a un non-assurable
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.RegleCalculAgeEquivalent">
	<summary>
 Indique si l'on doit utiliser l'Interface et le moteur de calcul pour le calcul de l'age equivalent
 d'une protection conjointe.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.TypeAssure">
	<summary>
 Indique le(s) type(s) d'assuré(s) pouvant être ajouté(s) sur ce plan.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.PourcentageInvalidite">
	<summary>
 Sert à déterminer le poucentage d'invalidité pour les couvertures d'invalidités (sert surtout pour les couvertures d'invalidité d'Abritation et pour le RA). Retourne la valeur du champs EQPourcent_Inval.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.GrpSurprimesPermises">
	<summary>
 Clé de la table VIT9037_SurprimesPermises qui permet d'identifier quels types de surprimes sont disponibles selon le contexte.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.RegleResiliationPermise">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.AgeDebutProjection">
	<summary>
 Return an age based on the joint status of the coverage. For individual coverage, the age returned is the issue age of the 
 covered person. For joint first-to-die coverage, the age returned is the highest issue
	age among the covered lives. For joint last-to-die coverage, the age returned is the lowest issue
	age among the covered lives.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.CalculerDureeMaximumNivellement(IAFG.IA.VI.AF.PDF.Duree.ENUMs.UniteTemps)">
	<summary>
 Calcule la durée maximum à laquelle il est possible de niveler les coûts d'assurance par rapport à la date d'émission de la protection.
 </summary>
	<param name="uniteTemps">Unité de temps (année ou mois) dans laquelle on veut obtenir le résultat.</param>
	<returns>Durée maximum à laquelle il est possible de niveler les coûts d'assurance de la protection en référence.</returns>
	<remarks>
 Si la valeur reçue en paramètre n'est pas valide ou que le contexte de la protection traitée 
 ne premet pas de faire le calcul approprié, la fonction retourne la durée de maturité de la protection.
 </remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.CalculerDureeMinimumNivellement(IAFG.IA.VI.AF.PDF.Duree.ENUMs.UniteTemps,System.Int32)">
	<summary>
 Calcule la durée minimum à partir de laquelle il est possible de niveler les coûts d'assurance par rapport à la date d'émission de la protection.
 </summary>
	<param name="uniteTemps">Unité de temps (année ou mois) dans laquelle on veut obtenir le résultat.</param>
	<param name="dureeMinimisation">Duree de la minimisation VMAX</param>
	<returns>Durée minimum à partir de laquelle il est possible de niveler les coûts d'assurance de la protection en référence.</returns>
	<remarks>
 Si la valeur reçue en paramètre n'est pas valide ou que le contexte de la protection traitée 
 ne premet pas de faire le calcul approprié, la fonction retourne la durée de maturité de la protection.
 </remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.CalculerDateMinimumNivellement(System.Int32)">
	<summary>
 Calcule la date à partir de laquelle il est possible de niveler les coûts d'assurance de la protection. Cette date est calculée à partir de la date d'émission de la protection.
 </summary>
	<returns>Date à partir de laquelle il est possible de niveler les coûts d'assurance de la protection en référence.</returns>
	<remarks>Si le contexte de la protection traitée ne premet pas de faire le calcul approprié, la fonction retourne la valeur maximum du type Date.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.CalculerAgeNivellement(System.DateTime)">
	<summary>
 Calcule l'âge applicable pour déterminer les coûts de mortalité nivelés en fonction d'une date de référence.
 </summary>
	<param name="dateReference">Date de référence par rapport à laquelle l'âge sera calculé.</param>
	<returns>Âge de l'assuré utiliser pour déterminer les coûts nivelés applicable.</returns>
	<remarks>S'il le contexte de la protection fait en sorte qu'il n'est pas possible de calculer l'âge de nivellement, la fonction retournr -1.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.PercConservationRabaisCjtNonAssurable(IAFG.IA.VI.AF.IBase.IBase)">
	<summary>
 Fonction qui retourne le pourcentage de conservation applicable lorsqu'un rabais pour conjont non assurable s'applique. 
 Pour plus de détail, consulter la documentation de la règle RegleRabaisConjointNonAssurable dans la table de PDF VIT9010_Plans. 
 </summary>
	<param name="protection">La protection pour laquelle on veut connaitre le pourcentage de conservation</param>
	<returns>Retourne le pourcentage de conservation (arrondi à 3 décimales) applicable lors du calcul de la prime et des coûts d'assurance de la couverture.</returns>
	<remarks>ATTENTION : Le pourcentage de conservation pour le rabais de conjoint non assurable est combiné au rabais pour coupure de commission lors que les 2 sont applicables.</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProposition.GammeProduit">
	<summary>
 Retourne la gamme de produit de la proposition en cours
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProposition.EstPU">
	<summary>
 Retourne s'il s'agit d'un produit universel pour la proposition en cours
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.IAssures.Item(System.Int32)">
	<summary>
 Accéde à un item par son index i.e. sa position dans la collection.
 </summary>
	<param name="index">Position de l'item dans la collection.</param>
	<returns>L'item de type "Base" correspondant à l'index.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.IAssures.Count">
	<summary>
 Retourne le nombre d'items dans la collection.
 </summary>
	<returns>Le nombre d'items dans la collection.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.IAssures.GetAgePlusJeune(System.Boolean)">
	<summary>
 Récuperer l'âge du plus jeune assuré sur la protection
 </summary>
	<param name="AssNomAssurableInclus">Indique si nous voulons tenir compte des assurés non assurables ou non</param>
	<returns>Age</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.IAssures.GetAgePlusVieux(System.Boolean)">
	<summary>
 Récuperer l'âge du plus viel assuré sur la protection
 </summary>
	<param name="AssNomAssurableInclus">Indique si nous voulons tenir compte des assurés non assurables ou non</param>
	<returns>Age</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IAssure.EstAssurable">
	<summary>
 Indique si l'assuré est assurable ou non
 </summary>
	<value></value>
	<returns>Vrai / Faux</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.Proposition">
	<summary>
 Propriété qui retourne un objet IProposition
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.Age">
	<summary>
 Propriété qui retourne l'âge de la protection
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.Assures">
	<summary>
 Propriété qui retournes la collection d'assurés de la protection
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.TypeAssurance">
	<summary>
 Propriété qui retourne le type d'assurance de la protection
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.TypeMortalite(System.Boolean)">
	<summary>
 Propriété qui retourne le type de Mortalité de la protection
 </summary>
	<param name="ValeurOriginale"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.DateEmission">
	<summary>
 Propriété qui retourne la date d'émission de la protection
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.DateVersionProduit">
	<summary>
 Propriété qui retourne la date de version du produit. Chaque plan peut avoir plusieurs barèmes de primes. C'est à partir de la date de version du produit
 qu'on détermine quel barème doit être utilisé.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.DateMaturiteSysteme">
	<summary>
 Propriété qui retourne la date de maturité calculée par les systèmes d'administration
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.DateLiberationSysteme">
	<summary>
 Propriété qui retourne la date de libération calculée par les systèmes d'administration
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.LienProtectionBase">
	<summary>
 Propriété qui retourne la protection parent de la protection courante
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.EtatProtection">
	<summary>
 Propriété qui retourne l'état de la protection (en vigueur, nouvelle, ajouté, librérée ...)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.Plan">
	<summary>
 Propriété qui retourne le code de plan de la protection
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.CodeProtection">
	<summary>
 Propriété qui retourne le code de la protection
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.OptionDePaiementAcc(System.Boolean)">
	<summary>
 Propriété qui retourne l'option de paiement accéléré.
 </summary>
	<param name="ValeurOriginale"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.OptionAuDecesEmission">
	<summary>
 Propriété qui retourne l'option au décès à l'émission de la protection
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.SousSerie">
	<summary>
 Propriété qui retourne la séries d'un produit permettant de dirriger un plan existant vers de nouvelle règle
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.LienProtectionBaseContrat">
	<summary>
 Propriété qui retourne la protection de base du contrat.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.ProtectionBaseContrat">
	<summary>
 Propriété qui retourne si oui ou non la protection est celle de base du contrat
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.TypeOption">
	<summary>
 Propriété qui retourne le type d'option (10-15-20 ans ou NonApplicable)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.ProtectionOACA">
	<summary>
 Propriété qui retourne la protection d'OACA
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.TypeCapital">
	<summary>
 Propriété qui retourne le type de capital de la protection
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.TauxInteret">
	<summary>
 Propriété qui retourne le taux d'intérêt des indexations ou des décroissances
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.IProtection.Periode">
	<summary>
 Propriété qui retourne la période des décroissances
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.AssuranceInvalidite">
	<summary>
 Nous dit si notre protection est une protection invalidité.
 </summary>
	<returns>True: C'est une invalidité, False: Ce n'est pas une invalidité.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.AssuranceMultitermeInvalidite">
	<summary>
 Nous dit si notre protection est une protection invalidité.
 </summary>
	<returns>True: C'est une invalidité, False: Ce n'est pas une invalidité.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.AvenantPrestationMajoree">
	<summary>
 Nous dit si notre protection est un APM.
 </summary>
	<returns>True: C'est un APM, False: Ce n'est pas un APM.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.AvenantRemboursementPrimes">
	<summary>
 Nous dit si notre protection est un remboursement flexible des primes.
 </summary>
	<returns>True: C'est un un remboursement flexible des primes, False: Ce n'est pas un un remboursement flexible des primes.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.AvenantRemboursementDeces">
	<summary>
 Nous dit si notre protection est un remboursement au décès.
 </summary>
	<returns>True: C'est un un remboursement au décès, False: Ce n'est pas un un remboursement au décès.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.AvenantRemboursementFlexible">
	<summary>
 Nous dit si notre protection est un remboursement flexible
 </summary>
	<returns>True: C'est un un remboursement flexible, False: Ce n'est pas un un remboursement flexible.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.AvenantTransition">
	<summary>
 Nous dit si notre protection est un avenant transition.
 </summary>
	<returns>True: C'est un avenant transition, False: Ce n'est pas un avenant transition.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.Avenant">
	<summary>
 Nous dit si notre protection est un avenant.
 </summary>
	<returns>True: C'est un avenant, False: Ce n'est pas un avenant.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.ProtectionMere">
	<summary>
 Nous dit si notre protection est une Protection Mère (PROT_MERE).
 </summary>
	<returns>True: C'est une Protection Mère, False: Ce n'est pas une Protection Mère.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.Cic">
	<summary>
 Nous dit si notre protection est un avenant CIC.
 </summary>
	<returns>True: C'est un CIC, False: Ce n'est pas un CIC.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.Cdc">
	<summary>
 Nous dit si notre protection est un avenant CDC.
 </summary>
	<returns>True: C'est un CDC, False: Ce n'est pas un CDC.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.Cia">
	<summary>
 Nous dit si notre protection est un avenant CIA.
 </summary>
	<returns>True: C'est un CIA, False: Ce n'est pas un CIA.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.DependantAssVie">
	<summary>
 Nous dit si notre protection est dépendante de protections ayant un capital vie.
 </summary>
	<returns>True: Sa dépend de protections ayant un capital vie, False: Sa ne dépend pas de protections ayant un capital vie.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.DependantMg">
	<summary>
 Nous dit si notre protection est dépendante de protections Maladie grave.
 </summary>
	<returns>True: Sa dépend de protections Maladie grave, False: Sa ne dépend pas de protections Maladie grave.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.Epic">
	<summary>
 Nous dit si notre protection est un EPIC.
 </summary>
	<returns>True: C'est un EPIC, False: Ce n'est pas un EPIC.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.Epia">
	<summary>
 Nous dit si notre protection est un EPIA.
 </summary>
	<returns>True: C'est un EPIA, False: Ce n'est pas un EPIA.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.Epdc">
	<summary>
 Nous dit si notre protection est un EPDC.
 </summary>
	<returns>True: C'est un EPDC, False: Ce n'est pas un EPDC.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.FA">
	<summary>
 Nous dit si notre protection est un FA.
 </summary>
	<returns>True: C'est un FA, False: Ce n'est pas un FA.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.GarantieAssurabilite">
	<summary>
 Nous dit si notre protection est une garantie d'assurabilité.
 </summary>
	<returns>True: C'est une garantie d'assurabilité, False: Ce n'est pas une garantie d'assurabilité.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.GarantieContractantCorpo">
	<summary>
 Nous dit si notre protection est une garantie sur un contractant corporatif.
 </summary>
	<returns>True: C'est une garantie sur un contractant corporatif, False: Ce n'est pas une garantie sur un contractant corporatif.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.GarantieContractant">
	<summary>
 Nous dit si notre protection est une garantie sur un contractant.
 </summary>
	<returns>True: C'est une garantie sur un contractant, False: Ce n'est pas une garantie sur un contractant.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.GarantieDeces">
	<summary>
 Nous dit si notre protection est une garantie décès.
 </summary>
	<returns>True: C'est une garantie décès, False: Ce n'est pas une garantie décès.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.GarantieEnfant">
	<summary>
 Nous dit si notre protection est une garantie sur les enfants.
 </summary>
	<returns>True: C'est une garantie sur les enfants, False: Ce n'est pas une garantie sur les enfants.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.GarantieEnfantPlus">
	<summary>
 Nous dit si notre protection est une garantie sur les enfants.
 </summary>
	<returns>True: C'est une garantie sur les enfants, False: Ce n'est pas une garantie sur les enfants.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.MaladieGrave">
	<summary>
 Nous dit si notre protection est une Maladie grave.
 </summary>
	<returns>True: C'est une Maladie grave, False: Ce n'est pas une Maladie grave.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.DuoVieSante">
	<summary>
 Nous dit si notre protection est une DuoVieSante.
 </summary>
	<returns>True: C'est une DuoVieSante, False: Ce n'est pas une DuoVieSante.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.VieEtSerenite">
	<summary>
 Renvoit une valeur indiquant si notre protection est une Vie et Serenite.
 </summary>
	<returns>
 True si le protection est une Vie et Serenite, sinon False
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.Option">
	<summary>
 Nous dit si notre protection est une option.
 </summary>
	<returns>True: C'est une option, False: Ce n'est pas une option.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.Paramedical">
	<summary>
 Nous dit si notre protection est une paramédicale.
 </summary>
	<returns>True: C'est une paramédicale, False: Ce n'est pas une paramédicale.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.PrimeIncluse(IAFG.IA.IL.AF.Illustration.ENUMs.TypeMortaliteIllustration)">
	<summary>
 Cette fonction indique si la la prime de la protection, auquel cet objet de règles d'affaires est lié,
 est incluse dans la prime minimum
 </summary>
	<param name="typeMortalite">Le type de mortalité de la base</param>
	<returns>True: La prime est incluse, False: La prime n'est pas incluse.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.ProtectionHospitalisation">
	<summary>
 Nous dit si notre protection est une Hospitalisation.
 </summary>
	<returns>True: C'est une Hospitalisation, False: Ce n'est pas une Hospitalisation.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.ProtectionHospitalisationDom">
	<summary>
 Nous dit si notre protection est une Hospitalisation soins à domicile.
 </summary>
	<returns>True: C'est une Hospitalisation soins à domicile, False: Ce n'est pas une Hospitalisation soins à domicile.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.ProtectionMultiterme">
	<summary>
 Nous dit si notre protection est une protection multiter_donneesPlan.
 </summary>
	<returns>True: C'est une multiterme, False: Ce n'est pas une multiter_donneesPlan.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.ProtectionTransition">
	<summary>
 Nous dit si notre protection est une protection transition.
 </summary>
	<returns>True: C'est une transition, False: Ce n'est pas une transition.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.ProtectionTransitionEvolution">
	<summary>
 Nous dit si notre protection est une protection Transition Évolution.
 </summary>
	<returns>True: C'est une transition Évolution, False: Ce n'est pas une transition Évolution.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.ProtectionGenesis">
	<summary>
 Nous dit si notre protection est une protection Genesis.
 </summary>
	<returns>True: C'est une Genesis, False: Ce n'est pas une Genesis.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.ProtectionVie">
	<summary>
 Cette fonction permet de vérifier si la couverture est 
 une couverture vie (T10, T20, Genesis1 etc.) 
 </summary>
	<returns>True: C'est une protection vie, False: Ce n'est pas une protection vie.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.ProtectionVieTemporaire">
	<summary>
 Nous dit si notre protection est une protection Vie Temporaire.
 </summary>
	<returns>True: C'est une Vie Temporaire, False: Ce n'est pas une Vie Temporaire.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.RevenuAppoint">
	<summary>
 Cette fonction permet de vérifier si la protection est un revenu d'appoint
 </summary>
	<returns>True: C'est une protection revenu d'appoint, False: Ce n'est pas une protection revenu d'appoint.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.TransitionT100">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T100
 </summary>
	<returns>True: C'est une protection transition T100, False: Ce n'est pas une protection transition T100.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.TransitionT10">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T10
 </summary>
	<returns>True: C'est une protection transition T10, False: Ce n'est pas une protection transition T10.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.TransitionT75">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T75
 </summary>
	<returns>True: C'est une protection transition T75, False: Ce n'est pas une protection transition T75.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.TransitionT100avecOption">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T100 avec option (10 ou 20 paiements)
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.TransitionT100Opt10">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T100 avec option 10 paiements
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.TransitionT100Opt20">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T100 avec option 20 paiements
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.TypeAssurancePermis(IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance)">
	<summary>
 Valide si la protection est permise selon le type d'assurance passé en paramètre
 </summary>
	<returns>Le type d'assurance que l'on veut valider</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.DA">
	<summary>
 Nous dit si notre protection est un avenant DA.
 </summary>
	<returns>True: C'est un DA, False: Ce n'est pas un DA.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Is.DMA">
	<summary>
 Nous dit si notre protection est un avenant DMA.
 </summary>
	<returns>True: C'est un DMA, False: Ce n'est pas un DMA.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Terme.#ctor(IAFG.IA.VI.AF.PDFs.Protection,IAFG.IA.VI.AF.PDFs.Terme.TypeInterne)">
	<summary>
 Constructeur de classe
 </summary>
	<param name="Protection"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Terme.InitialiserContexteValide">
	<summary>
 Permet d'initialiser la variable _contexteValide en Lazy loading.
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Terme.CreerListeChangementsProtection">
	<summary>
 Permet d'initialiser la variable _changementsProtection en Lazy loading.
 </summary>
	<remarks>Le dernière item de la liste correspond à la maturité.</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Terme.DureeTerme">
	<summary>
 Durée d'un terme pour un plan sélectionné.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Terme.DureeRenouvTerme">
	<summary>
 Durée d'un terme pour un plan sélectionné.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Terme.DateEmission">
	<summary>
 Date d'émission de la protection liée.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Terme.CalculerDateTerme(System.DateTime)">
	<summary>
 Permet d’obtenir la liste des dates de renouvellement qui se situent entre 
 la date de référence et la date de maturité pour les protections à terme renouvelable.
 </summary>
	<param name="DateReference">Date de référence</param>
	<returns>
 Liste de date pour chaque terme.
 Retourne une liste vide, si la protection de référence n’est pas un terme renouvelable.</returns>
	<remarks>
 La dernière date de la liste correspond à la date de maturité. De plus, si la date 
 de référence spécifiée en paramètre correspond à une date de renouvellement, 
 celle-ci fera partie de la liste et correspondra à la première occurrence de celle-ci.
 </remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Terme.CalculerDateTerme">
	<summary>
 Permet d’obtenir la liste des dates de renouvellement suivant la date d’émission
 pour les protections à terme renouvelable. 
 </summary>
	<returns>
 Liste de date pour chaque terme.
 Retourne une liste vide, si la protection de référence n’est pas un terme renouvelable.</returns>
	<remarks>La dernière date de la liste correspond à la date de maturité.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Terme.CalculerAgeTerme(System.DateTime)">
	<summary>
 Permet d’obtenir la liste des âges atteints à la date de chacun des 
 renouvellements qui se situent entre la date de référence et la date 
 de maturité pour des protections à terme renouvelable.
 </summary>
	<param name="DateReference">Date de référence</param>
	<returns>
 Liste d'âges de référence.
 Retourne une liste vide, si la protection de référence n’est pas un terme renouvelable.
 </returns>
	<remarks>
 L’âge de maturité correspond à la dernière occurrence de la liste. De plus, 
 si la date de référence spécifiée en paramètre correspond à une date de 
 renouvellement, l’âge atteint à cette date fera partie de la liste et correspondra 
 à la première occurrence de celle-ci.
 </remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Terme.CalculerAgeTerme">
	<summary>
 Permet d’obtenir la liste des âges atteints à la date de chaque renouvellement 
 suivant la date d’émission pour les protections à terme renouvelable.
 </summary>
	<returns>
 Liste d'âges de référence.
 Retourne une liste vide, si la protection de référence n’est pas un terme renouvelable.
 </returns>
	<remarks>La dernière occurrence de la liste correspond à l’âge de maturité.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Terme.CalculerDureeTerme(System.DateTime)">
	<summary>
 Permet d’obtenir la liste des durées à la date de chacun des 
 renouvellements qui se situent entre la date de référence et la date 
 de maturité pour les protections à terme renouvelable.
 </summary>
	<param name="DateReference">Date de référence</param>
	<returns>
 Liste des durées de référence.
 Retourne une liste vide, si la protection de référence n’est pas un terme renouvelable.
 </returns>
	<remarks>
 La durée de maturité correspond à la dernière occurrence de la liste. De plus, 
 si la date de référence spécifiée en paramètre correspond à une date de 
 renouvellement, la durée à cette date fera partie de la liste et correspondra 
 à la première occurrence de celle-ci.
 </remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Terme.CalculerDureeTerme">
	<summary>
 Permet d’obtenir la liste des durées à la date de chaque renouvellement 
 suivant la date d’émission pour les protections à terme renouvelable.
 </summary>
	<returns>
 Liste des durées de référence.
 Retourne une liste vide, si la protection de référence n’est pas un terme renouvelable.
 </returns>
	<remarks>La dernière occurrence de la liste correspond à la durée de maturité.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Liberation.#ctor(IAFG.IA.VI.AF.PDFs.Protection)">
	<summary>
 Constructeur de classe
 </summary>
	<param name="Protection"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Liberation.CalculerAgeRefEmission(IAFG.IA.VI.AF.PDF.ENUMs.AgeRefConjoint)">
	<summary>
 Calculer l'age de référence pour une libération de protection
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Liberation.CalculerAgeRefEmission">
	<summary>
 Calculer l'age de référence pour une libération de protection
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Liberation.CalculerAgeLiberation">
	<summary>
 Calculer l'âge de libération en additionnant la durée et l'âge de référence
 </summary>
	<returns>Âge de libération</returns>
	<remarks>
 Le calcule de l'âge de libération dépend directement de la méthode
 de calcule de la durée de la libération.
 </remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Liberation.CalculerDureeLiberation">
	<summary>
 Calculer la durée de libération a l'aide de la date d'émission du contrat
 </summary>
	<returns>Durée de libération</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Liberation.CalculerDureeLiberation(System.DateTime)">
	<summary>
 Calculer la durée de libération à l'aide d'une date de référence.
 </summary>
	<param name="dateReference">Date à laquel nous voulons effectuté le calcul</param>
	<returns>Durée de libération</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Liberation.CalculerDateLiberation">
	<summary>
 Obtenir la Date de libération d'une protection
 </summary>
	<returns>Date de libération</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Liberation.CalculerDureeLiberationEnvigueur(System.DateTime,System.DateTime)">
	<summary>
 Obtenir la durée de libération pour une protection existante
 </summary>
	<param name="dateReference">date de référence</param>
	<param name="dateLiberation">date de libération</param>
	<returns>Durée de libération</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Liberation.CalculerDureeLiberationNouveau(IAFG.IA.VI.AF.PDFs.Protection)">
	<summary>
 Obtenir la durée de libération pour une nouvelle protection
 </summary>
	<param name="protection">Objet Protection</param>
	<returns>Durée de libération</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.#ctor(IAFG.IA.VI.AF.PDFs.Protection)">
	<summary>
 Constructeur de classe
 </summary>
	<param name="Protection"></param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerDureeMaturite(System.Boolean)">
	<summary>
 Calculer la durée de maturité a l'aide de la date d'émission du contrat.
 </summary>
	<param name="reglesPlanNormal">
 Valeur boolean indiquant si nous devons forcer une regle normal pour le
 calcul d'une durée de maturité.
 </param>
	<returns></returns>
	<remarks>
 Utilisé dans le cas ou nous avons une garantie avec une Regle3_EnFonctionDeLiberation
 </remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerDureeMaturite">
	<summary>
 Calculer la durée de maturité a l'aide de la date d'émission du contrat
 </summary>
	<returns>Durée de la maturité</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerDureeMaturite(System.DateTime)">
	<summary>
 Calculer la durée de maturité à l'aide d'une date de référence.
 </summary>
	<param name="dateReference">Date à laquel nous voulons effectuté le calcul</param>
	<returns>Durée de la maturité</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerAgeRefEmission(IAFG.IA.VI.AF.PDF.ENUMs.AgeRefConjoint)">
	<summary>
 Calculer l'age de référence utiliser pour déterminer la maturité d'une protection
 </summary>
	<returns>Age de référence</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerAgeRefEmission">
	<summary>
 Calculer l'age de référence utiliser pour déterminer la maturité d'une protection
 </summary>
	<returns>Age de référence</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerAgeRefMinimumEmission">
	<summary>
 Calculer l'age de référence utiliser pour déterminer la maturité d'une protection
 </summary>
	<returns>Age de référence</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerAgeRefAtteint(System.DateTime)">
	<summary>
 Calculer l'age de référence atteint à une date donnée en référence à l'âge de référence de maturité
 </summary>
	<param name="dateReference">Date à laquel nous voulons effectuté le calcul</param>
	<returns>Age de référence atteint à la date de référence.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerAgeMaturite">
	<summary>
 Calculer l'âge de maturité en additionnant la durée et l'âge de référence
 </summary>
	<returns>Âge de maturité</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerDateMaturite">
	<summary>
 Obtenir la Date de maturité d'une protection
 </summary>
	<returns>Date de maturité</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerDateMaturiteNouveau">
	<summary>
 Obtenir la Date de maturité d'une protection
 </summary>
	<returns>Date de maturité</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Maturite.CalculerDureeMaturiteNouveau">
	<summary>
 Obtenir la durée de maturité pour une nouvelle protection
 </summary>
	<returns>Durée de maturité</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Protection.ReglesPDA">
	<summary>
 Propriété qui retourne les règles de la requête PU_ReglePDA.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Protection.TypeMortaliteBase(System.Boolean)">
	<summary>
 Propriété qui convertit le type de mortalité de la protection en référence à un des trois types de mortalité de base.
 </summary>
	<value></value>
	<returns>Un des trois types de mortalité de base, connus des systèmes administratifs.</returns>
	<remarks>Retourne le résultats de la fonction ConvertirTypeMortaliteBase de VI.AF.PDFs.Fonctions</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Protection.TypeProtection">
	<summary>
 Indique le(s) type(s) de protection correspondant à la protection courante
 </summary>
	<value></value>
	<returns></returns>
	<remarks>
 Les types de protections sont représentés par un ENUM flagué. 
 Il est donc possible que la variable contienne plus d'un type de protection à la fois.
 Cette propriété peut être initialisée à l'interne lorsqu'il s'agit d'un plan bidon.
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Protection.TypeProtectionInfoAdd">
	<summary>
 Extension de la propriété "TypeProtection".
 Contient de l'information additionnelle sur le type de protection lorsque "TypeProtection" contient le flag "InfosAdditionnelles".
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Protection.CoupureCommissionPermis">
	<summary>
 Si GrpConservationCommission du PDF retourne une Coupure Non Disponible ou Non Défini
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Protection.ChangementPlan">
	<summary>
 Cette méthode est appelée quand le code de plan de référence utilisé par IAccesPlan change.
 </summary>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Protection.CalculerAgeAtteint(System.DateTime,System.Boolean)">
	<summary>
 Permet de calculer l'âge atteint de l'assuré rattaché à la protection par rapport à une date de référence.
 </summary>
	<param name="dateReference">Date de référence par rapport à laquelle l'âge sera calculé.</param>
	<param name="Regle6Mois">Indique si le calcul doit tenir compte ou non de la règle du 6 mois. Cette règle consiste à déterminer l'âge de l'assuré 6 mois plus tard par rapport à la date de référence.</param>
	<returns>L'âge atteint à la date de référence.</returns>
	<remarks>ATTENTION : Il n'est pas possible de calculer l'âge atteint d'un protection conjointe en tenant compte de la règle du 6 mois. Parce qu'il faudrait recalculer un âge équivalent et il n'y a pas de traitement qui néceesité de faire ce calcul en cours de vie d'un protection.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.ObtenirPlanMultiterme(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCapital,System.Int32,IAFG.IA.VI.AF.PDF.ENUMs.Produits)">
	<summary>
 Permet d'obtenir un code de plan Multiterme à partir d'un type de capital et d'une durée.
 </summary>
	<param name="typeCapital">Type de capital</param>
	<param name="duree">Durée de la protection</param>
	<returns>Code de plan Multiterme valide. Une chaîne vide est retournée si aucune correspondance valide n'est touvée.</returns>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.ObtenirTermeMaxMultiterme(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCapital,System.Int32)">
	<summary>
 Fonction qui retourne le terme maximal selon le type de capital et l'âge passé en paramètre
 </summary>
	<param name="typeCapital">Le type de capital</param>
	<param name="age">l'âge</param>
	<returns>le terme maximal selon les paramètres</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.ObtenirTermeMinMultiterme(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCapital,System.Int32)">
	<summary>
 Fonction qui retourne le terme minimal selon le type de capital et l'âge passé en paramètre
 </summary>
	<param name="typeCapital">Le type de capital</param>
	<param name="age">l'âge</param>
	<returns>le terme minimal selon les paramètres</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.CalculerPctConservationPrime(System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeMortalite,System.DateTime,System.Double)">
	<summary>
 Fonction qui permet d'obtenir du PDF (à l'aide d'un léger calcul) le pourcentage de conservation de la prime d'une protection
 </summary>
	<param name="codePlan">Le code de plan de la protection (Protection.Plan)</param>
	<param name="typeMortalite">Le type de mortalité de la protection (Protection.TypeMortalite)</param>
	<param name="DateEffective">La date d'émission de la protection (Protection.DateEmission)</param>
	<param name="tauxComm">Le taux de commission de l'agent</param>
	<returns>Retourne le taux du PDF si on trouve le taux de commission exact dans la table, 
 sinon, on extrapole le taux en fonction du recordset précédant et le suivant.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.ObtenirPlanOptionVsBase(System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeOption,System.Boolean)">
	<summary>
 fonction qui permet d'obtenir le bon code de plan de l'option dépendant des paramètres
 </summary>
	<param name="CodePlanBase">Le code de plan de la base de l'option.</param>
	<param name="typeOptionID">La durée de l'option 1=10 ans, 2=15 ans et 3 = 20 ans</param>
	<param name="emission">true = on est en contexte d'émission, False= nous sommes en mode projection</param>
	<returns>Le code de plan de l'option ou string.empty si on ne trouve rien dans la requête.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.ObtenirCodePlanGarantieVsCodePlanCouv(System.String,IAFG.IA.VI.AF.PDF.ENUMs.CodeGarantie,System.String)">
	<summary>
 Fonction qui permet d'obtenir le plan d'une garantie complémentaire à partir du code de plan de la couverture à laquelle elle se rattache et du type et sous-type ALIS de la garantie.
 </summary>
	<param name="CodePlanCouverture">Le code de plan de la protection à laquelle est rattachée la garantie complémentaire.</param>
	<param name="codeGarantie">Code de la garantie complémentaire selon l'ENUM IAFG.IA.VI.AF.PDF.ENUMs.CodeGarantie.</param>
	<param name="sousTypeGarantie ">true = Sous-type ALIS de la garantie. Il n'y a pas d'ENUM pour définir les sous-types car il n'y a pas de cohérence sur la signification des ceux-ci par rapport à chacune des garanties disponibles.</param>
	<returns>Le code de plan le garantie complémentaire ou string.empty si on ne trouve rien dans la requête.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.ConvertirCodeBanniereVLn(System.String)">
	<summary>
 Fonction qui permet d'obtenir le plan d'une garantie complémentaire à partir du code de plan de la couverture à laquelle elle se rattache et du type et sous-type ALIS de la garantie.
 </summary>
	<param name="BanniereVLn">Code de bannière utilisé dans le système VLn (champ DVAKPDA-PRIVATE-LABEL du PDF).</param>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.TraduireCodePlanGarantie(IAFG.IA.VI.AF.PDF.ENUMs.Produits,System.String)">
	<summary>
 Méthode qui sert de "patch" pour convertir le code de plan des garanties qui sont dans la ficcli.
 En effet, dans la table COUVERTURE, le champ CODE_PLAN contient des trucs comme "CIC", "FA" au lieu
 des vrais code de plan. Cette méthode retourne le VRAI code de plan de ces garanties.
 </summary>
	<param name="gamme">La gamme de produit de la protection</param>
	<param name="codePlan">Le code de plan de la ficcli</param>
	<returns>Le vrai code de plan de la protection</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.DifferenceDateAnnee(System.DateTime,System.DateTime)">
	<summary>
 Calculer la différence en année entre deux dates.
 </summary>
	<param name="date1">Date1</param>
	<param name="date2">Date2</param>
	<returns>Différence en année</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.AjouterDureeDate(System.DateTime,System.Double)">
	<summary>
 Ajouter une durée en année à une date
 </summary>
	<param name="date1">Date auquel la durée sera ajouté</param>
	<param name="duree">Durée en année à ajouter</param>
	<returns>Date avec la durée</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.JourJulien(System.DateTime)">
	<summary>
 Récuperer le jour julien sur une base de 365 jours.
 </summary>
	<param name="dateRef">date de référence</param>
	<returns>jour julien</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.ObtenirAgeDuPlusJeune(IAFG.IA.VI.AF.PDFs.IAssures,System.Boolean)">
	<summary>
 Obtenir l'âge du plus jeune assuré du contrat
 </summary>
	<param name="iAssures">Collection assurés reliés à une protection</param>
	<returns>Age</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.ObtenirAgeDuPlusVieux(IAFG.IA.VI.AF.PDFs.IAssures,System.Boolean)">
	<summary>
 Obtenir l'âge du viel jeune assuré du contrat
 </summary>
	<param name="iAssures">Collection assurés reliés à une protection</param>
	<returns>Age</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.ConvertirTypeMortaliteBase(IAFG.IA.VI.AF.Proposition.ENUMs.TypeMortalite)">
	<summary>
 Fonction qui convertit le type de mortalité de la protection en référence à un des trois types de mortalité de base.
 </summary>
	<returns>Un des trois types de mortalité de base, connus des systèmes administratifs.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.ExtraireEnumValeurChamp``1">
	<summary>
 Extrait toutes les valeurs définies par les attributs de type ValeurChampAttribute liées à l'Enum spécifié par le type générique (Of T).
 </summary>
	<typeparam name="T"></typeparam>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Fonctions.RoundGood(System.Double,System.Int16)">
	<summary>
  Arrondit une valeur en fonction d'un nombre de décimal.
 </summary>
	<param name="Valeur">Le nombre à arrondir.</param>
	<param name="nbdigits">Le nombre de décimal.</param>
	<returns>Le nombre arrondit.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.CompteInfo_Base.Executer">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.CompteInfo_Base">
	<summary>
 Classe de requete pour la requête CompteInfo_Base.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.CompteInfo_Base.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.CompteInfo_Base)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.CompteInfo_Base à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetCompteInfo_Base.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.DonneesLecture.ReglesPDA_Base.IncludeInTaxAccumulationFundCalculationMeth">
	<summary>
 Cette propriété permet de rendre l'accèes plus facile aux règles IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPDA.IncludeInTaxAccumulationFundCalculation et IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesTablePDA.IncludeInTaxAccumulationFundCalculation qui sont dépendantes l'un de l'autre. Ceci permettra d'éviter les erreurs d'interprétation.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.DonneesLecture.ReglesPDA_Base.NCPICalculationMethod">
	<summary>
 Permet de rendre l'acces à la méthode NCPICalculationMethod plus facile en incluant une regle PDB ACBPremiumAffectationMethod dedans.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.DonneesLecture.ReglesPDA_Base.PretsEtAvancesDisponibles">
	<summary>
 Retourne les types de prêt et avance permis sur le plan sélectionné.
 </summary>
</member><member name="M:IAFG.IA.VI.AF.PDFs.RequetesLecture.ReglesPDA_Base.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="ClePDA">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.RequetesLecture.ReglesPDA_Base">
	<summary>
 Classe de requete pour la requête ReglesPDA_Base.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.DonneesLecture.ReglesPDA_Base.#ctor(System.Data.OleDb.OleDbDataReader,IAFG.IA.VI.AF.PDFs.RequetesLecture.ReglesPDA_Base)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ReglesPDA_Base à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="reader">Contient les informations relatives à un objetReglesPDA_Base.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.DonneesLecture.ReglesPDA_Base.ClePDA">
	<summary>
On réduit la protee de ce champ, car il sera utilisé pour établir le lien avec d'autres règles que l'on retrouve dans des tables telles que PT9, PTA, PTB, etc. En mettant le champ friend, ceci force les utilisateurs à passer par le lien dans la classe ReglesPDA pour accéder les règles supplémentaires.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.DonneesLecture.ReglesPDA_Base.BanniereClePDA">
	<summary>
Contient la bannière contenu dans la clé d'accès retournée par la requête. Il est possible de créer des clés d'accès aux règles de produit en utilisant une valeur par défaut pour la bannière. S'il y a quelque chose de particulier pour une bannière donnée, on crée une clé avec la bannière spécifique ayant des particularités. Autrement, on utilise la clé avec la bannière par défaut. Donc, même si on travaille avec dans le contexte d'une bannière donnée la bannière retournée dans la clé peut différer.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.DonneesLecture.ReglesPDA_Base.IncludeInTaxAccumulationFundCalculation">
	<summary>
On va redéfinir une propriété public "IncludeInTaxAccumulationFundCalculationMeth" qui combinera l'information de la règle [DVAKPDA-TAX-ACC-FUND-CALC] et [DVAKPTH-TAX-ACC-FUND].
 </summary>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.DonneesLecture.ReglesPDA_Base">
	<summary>
Classe contenant les règles de PDA extraite du système VLN sur le central. Ces règles sont principalement utilisées par le moteur.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.RequetesLecture.ReferencesTblTauxCommission.Executer">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.RequetesLecture.ReferencesTblTauxCommission">
	<summary>
 Classe de requete pour la requête ReferencesTblTauxCommission.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.DonneesLecture.ReferencesTblTauxCommission.#ctor(System.Data.OleDb.OleDbDataReader,IAFG.IA.VI.AF.PDFs.RequetesLecture.ReferencesTblTauxCommission)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ReferencesTblTauxCommission à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="reader">Contient les informations relatives à un objetReferencesTblTauxCommission.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.DonneesLecture.ReferencesTblTauxCommission">
	<summary>
Permet de lire tout contenu de la table VIT9092_RefTblTauxCommission pour en permettre l'accès via un dictionaire de clés.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.RequetesLecture.ComptesDisponibles.ReglesPDA">
	<summary>
 Retoure le lien vers le parent de type PU_ReglesPDA.
 </summary>
</member><member name="M:IAFG.IA.VI.AF.PDFs.RequetesLecture.ComptesDisponibles.RechercheCompte(System.String)">
	<summary>
 Permet de rechercher parmi les résultats de la dernière exécution de la requête l'item dont la propriété AccountID correspond à la valeur demandée.
 </summary>
	<param name="accountID">Correspond au code du compte recherché.</param>
	<returns>Retoune un liste générique d'item de type IAFG.IA.VI.AF.PDFs.DonneesLecture.ComptesDisponibles correspondant au compte recherché.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.RequetesLecture.ComptesDisponibles.RechercheCompteVLn(System.String)">
	<summary>
 Permet de rechercher parmi les résultats de la dernière exécution de la requête l'item dont la propriété VLnSeparateAccountPortFolio correspond à la valeur demandée.
 </summary>
	<param name="vlnSeparateAccountPortFolio">Correspond au code VLn (6 positions) du compte recherché.</param>
	<returns>Retoune un liste générique d'item de type IAFG.IA.VI.AF.PDFs.DonneesLecture.ComptesDisponibles correspondant au compte VLn recherché.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.RequetesLecture.ComptesDisponibles.FiltrerCompte(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCompte)">
	<summary>
 Permet de rechercher parmi les résultats de la dernière exécution de la requête l'item dont la propriété AccountType correspond à la valeur demandée.
 </summary>
	<param name="accountType">Correspond au type de compte à sélectionner.</param>
	<returns>Retoune un liste générique d'item de type IAFG.IA.VI.AF.PDFs.DonneesLecture.ComptesDisponibles correspondant au type de compte recherché.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.RequetesLecture.ComptesDisponibles.FiltrerCompte(IAFG.IA.VI.AF.PDF.ReglesPDB.ENUMs.UseForLoanCalculation)">
	<summary>
 Permet de rechercher parmi les résultats de la dernière exécution de la requête l'item dont la propriété AccountType correspond à la valeur demandée.
 </summary>
	<param name="UseForLoanCalculation">Correspond à la règle UseForLoanCalculation de compte à sélectionner.</param>
	<returns>Retoune un liste générique d'item de type IAFG.IA.VI.AF.PDFs.DonneesLecture.ComptesDisponibles correspondant au type de compte recherché.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.RequetesLecture.ComptesDisponibles.Executer(System.Int32,IAFG.IA.VI.AF.Proposition.ENUMs.TypeFonds)">
	<summary>
	</summary>
	<param name="ClePDB">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="TypeFonds">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeFonds</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.RequetesLecture.ComptesDisponibles">
	<summary>
 Classe de requete pour la requête ComptesDisponibles.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.DonneesLecture.ComptesDisponibles.#ctor(System.Data.OleDb.OleDbDataReader,IAFG.IA.VI.AF.PDFs.RequetesLecture.ComptesDisponibles)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ComptesDisponibles à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="reader">Contient les informations relatives à un objetComptesDisponibles.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.RequetesLecture.CompteInfo.Executer">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.RequetesLecture.CompteInfo">
	<summary>
 Classe de requete pour la requête CompteInfo.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.DonneesLecture.CompteInfo.#ctor(System.Data.OleDb.OleDbDataReader,IAFG.IA.VI.AF.PDFs.RequetesLecture.CompteInfo)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.CompteInfo à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="reader">Contient les informations relatives à un objetCompteInfo.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.RequetesLecture.ClesPDA.Executer">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.RequetesLecture.ClesPDA">
	<summary>
 Classe de requete pour la requête ClesPDA.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.DonneesLecture.ClesPDA.#ctor(System.Data.OleDb.OleDbDataReader,IAFG.IA.VI.AF.PDFs.RequetesLecture.ClesPDA)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ClesPDA à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="reader">Contient les informations relatives à un objetClesPDA.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.DonneesLecture.ClesPDA">
	<summary>
Permet de lire toutes les clés de la table VIT9020_ReglesPDA pour créer un dictionnaire d'accès plus rapide.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.TypePretApplicable.Executer(System.Int32,IAFG.IA.VI.AF.PDF.ReglesPDB.ENUMs.UseForLoanCalculation)">
	<summary>
	</summary>
	<param name="ClePDA">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="UseForLoanCalculation">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ReglesPDB.ENUMs.UseForLoanCalculation</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.TypePretApplicable">
	<summary>
 Classe de requete pour la requête TypePretApplicable.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.TypePretApplicable.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.TypePretApplicable)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.TypePretApplicable à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetTypePretApplicable.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.TypePretApplicable">
	<summary>
Cette classe est utilisée dans la classe partielle de la classe PU_ComptesDisponibles pour nous permettre de savoir quel compte "back" les prêts et les avances.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.TraduireCodePlanGarantie.Executer(IAFG.IA.VI.AF.PDF.ENUMs.Produits,System.String)">
	<summary>
	</summary>
	<param name="GammePlanBase">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.Produits</code>.</param>
	<param name="CodeGarantie">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.TraduireCodePlanGarantie">
	<summary>
 Classe de requete pour la requête TraduireCodePlanGarantie.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.TraduireCodePlanGarantie.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.TraduireCodePlanGarantie)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.TraduireCodePlanGarantie à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetTraduireCodePlanGarantie.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.TraduireCodePlanGarantie">
	<summary>
Cette classe fait office de patch puisqu'elle permet de traduire les code de garanties poussés par les anciennes applications VB6 à l'objet Proposition. La traduction permet alors à l'objet Proposition d'initialiser le PDFProtection de cette garantie normalement.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.TermeMaxMultiterme.Executer(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCapital,System.Int32)">
	<summary>
	</summary>
	<param name="TypeCapital">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeCapital</code>.</param>
	<param name="Age">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.TermeMaxMultiterme">
	<summary>
 Classe de requete pour la requête TermeMaxMultiterme.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.TermeMaxMultiterme.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.TermeMaxMultiterme)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.TermeMaxMultiterme à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetTermeMaxMultiterme.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.SurprimesPermises.Executer(IAFG.IA.VI.AF.PDF.ENUMs.GrpSurprimesPermises,IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance,IAFG.IA.VI.AF.Proposition.ENUMs.TypeSurprimeValide)">
	<summary>
	</summary>
	<param name="GrpSurprime">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.GrpSurprimesPermises</code>.</param>
	<param name="TypeAssurance">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance</code>.</param>
	<param name="TypeSurprime">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeSurprimeValide</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.SurprimesPermises">
	<summary>
 Classe de requete pour la requête SurprimesPermises.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.SurprimesPermises.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.SurprimesPermises)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.SurprimesPermises à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetSurprimesPermises.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_TauxBoni.Executer(System.Int32,IAFG.IA.VI.AF.PDF.ReglesTablePDB.ENUMs.TypeBoni)">
	<summary>
	</summary>
	<param name="CleBoni">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="TypeBoni">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ReglesTablePDB.ENUMs.TypeBoni</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_TauxBoni">
	<summary>
 Classe de requete pour la requête PU_TauxBoni.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_TauxBoni.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_TauxBoni)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_TauxBoni à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_TauxBoni.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesTablePDB.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="ClePDB">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesTablePDB">
	<summary>
 Classe de requete pour la requête PU_ReglesTablePDB.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesTablePDB.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesTablePDB)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_ReglesTablePDB à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_ReglesTablePDB.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesTablePDA.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="ClePDA">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesTablePDA">
	<summary>
 Classe de requete pour la requête PU_ReglesTablePDA.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesTablePDA.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesTablePDA)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_ReglesTablePDA à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_ReglesTablePDA.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPret_Variables.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="ClePTA">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPret_Variables">
	<summary>
 Classe de requete pour la requête PU_ReglesPret_Variables.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPret_Variables.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPret_Variables)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_ReglesPret_Variables à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_ReglesPret_Variables.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPret_FacteurReduction.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="ClePTA">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPret_FacteurReduction">
	<summary>
 Classe de requete pour la requête PU_ReglesPret_FacteurReduction.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPret_FacteurReduction.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPret_FacteurReduction)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_ReglesPret_FacteurReduction à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_ReglesPret_FacteurReduction.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPret.ReductionFactor(System.Int32,IAFG.IA.VI.AF.PDF.ENUMs.TypeMortalitePret)">
	<summary> 
 Cette fonction retourne le facteur de réduction applicable lors du calcul de la valeur disponible de certaines règles de prêt.
 </summary>
	<param name="duree">Correspond à la durée courante de la police + 1</param>
	<param name="typeMortalite">Type de coût de mortalité de la couveture de base. Doit correspondre aux valeurs permises de l'ENUM IAFG.IA.VI.AF.PDF.ENUMs.TypeMortalitePret.</param>
	<returns>Retoune la facteur de réduction qui est supérieur ou égale à 1 pour la plupart des règles. Si la valeur retournée est -1, c'est que les paramètres reçus ne sont pas valides.</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPret.LoanInvestmentAccount">
	<summary>
 Fournit la liste des comptes disponibles pour investir des montants supplémentaires pour garantir le prêt ou l'avance.
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Si la liste est vide, c'est qu'il n'y a aucun compte identifié pour les investissements supplémentaires. ATTENTION : Cette situation est anormale.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPret.Executer(System.Int32,IAFG.IA.VI.AF.Proposition.ENUMs.TypePret)">
	<summary>
	</summary>
	<param name="ClePDA">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="TypePret">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypePret</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPret">
	<summary>
 Classe de requete pour la requête PU_ReglesPret.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPret.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPret)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_ReglesPret à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_ReglesPret.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPDB.Executer(System.String,IAFG.IA.VI.AF.PDF.ENUMs.OptionDeces,IAFG.IA.VI.AF.PDF.ENUMs.SousSerie,IAFG.IA.VI.AF.PDF.ENUMs.CodeProtection)">
	<summary>
	</summary>
	<param name="CodePlan">Ce paramètre est de type <code>String</code>.</param>
	<param name="OptionDeces">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.OptionDeces</code>.</param>
	<param name="SousSerie">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.SousSerie</code>.</param>
	<param name="CodeProtection">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.CodeProtection</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPDB">
	<summary>
 Classe de requete pour la requête PU_ReglesPDB.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPDB.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesPDB)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_ReglesPDB à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_ReglesPDB.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPDB.ClePDB">
	<summary>
On réduit la protee de ce champ, car il sera utilisé pour établir le lien avec d'autres règles que l'on retrouve dans des tables telles que PTE, PTF, PTG, etc. En mettant le champ friend, ceci force les utilisateurs à passer par le lien ReglesTablePDB dans la classe ReglesPDB pour accéder les règles supplémentaires.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPDB.OptionDeces">
	<summary>
On donne une portée privée à cette propriété, car la valeur peut différer de la valeur équivalente fournie en paramètre à la méthode exécuter.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPDB.CodeProtection">
	<summary>
On donne une portée privée à cette propriété, car la valeur peut différer de la valeur équivalente fournie en paramètre à la méthode exécuter.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesPDB.Banniere">
	<summary>
On donne une portée privée à cette propriété, car la valeur peut différer de la valeur équivalente fournie en paramètre à la méthode exécuter.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesAvanceAutomatique.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="ClePDA">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesAvanceAutomatique">
	<summary>
 Classe de requete pour la requête PU_ReglesAvanceAutomatique.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReglesAvanceAutomatique.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_ReglesAvanceAutomatique)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_ReglesAvanceAutomatique à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_ReglesAvanceAutomatique.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTauxPTZ.ObtenirTableInfo(IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.CodeTableCouverture)">
	<summary>
 Obtient les informations complètes d'une table de taux en fonction du code de table passé en paramètre.
 </summary>
	<param name="CodeTable">Valeur permise de l'ENUM IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.CodeTable.</param>
	<returns>Retourne une liste générique d'un seul item de type IAFG.IA.VI.AF.PDFs.Donnees.ReferencesTablesTaux. Si la recherche est infructueuse, la fonction retourne une liste vide.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTauxPTZ.ObtenirNomTable(IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.CodeTableCouverture)">
	<summary>
 Obtient le nom de la table correspondant au code de table passé en paramètre.
 </summary>
	<param name="CodeTable">Valeur permise de l'ENUM IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.CodeTable</param>
	<returns>Retourne de nom de la table s'il en trouve une. Sinon, retourne une chaîne vide.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTauxPTZ.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="CleZZ">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTauxPTZ">
	<summary>
 Classe de requete pour la requête PU_ReferencesTablesTauxPTZ.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReferencesTablesTauxPTZ.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTauxPTZ)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_ReferencesTablesTauxPTZ à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_ReferencesTablesTauxPTZ.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReferencesTablesTauxPTZ">
	<summary>
Permet d'obtenir la liste des tables de taux utilisés pour l'ensemble des calculs impliqués lors du nivellement des coûts d'assurance selon le barème courant.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTauxGar.Executer(System.Int32,System.Int32,System.String,IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.TypeTable,System.Int32)">
	<summary>
	</summary>
	<param name="ClePDA">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="GammeId">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="CodePlanGarantie">Ce paramètre est de type <code>String</code>.</param>
	<param name="TypeTable">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.TypeTable</code>.</param>
	<param name="RateScaleDate">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTauxGar">
	<summary>
 Classe de requete pour la requête PU_ReferencesTablesTauxGar.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReferencesTablesTauxGar.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTauxGar)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_ReferencesTablesTauxGar à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_ReferencesTablesTauxGar.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReferencesTablesTauxGar">
	<summary>
Permet d'obtenir la liste des tables de taux utilisés pour l'ensemble des calculs impliqués dans le traitement d'une garantie complémentaire.
 </summary>
	<remarks>
Cette requête est composée de l'union des requêtes PU_ReferencesTablesTauxGar_01 et PU_ReferencesTablesTauxGar_02 qui de sont pas visibles publiques. PU_ReferencesTablesTauxGar_01 permet de rechercher les tables d'une garantie en fonction des informations de la table VIT9091_RefTblTauxISCM contenant des pointeurs pour le moteur de l'actuariat pour les garanties dont la prime est calculé dans ISCM. PU_ReferencesTablesTauxGar_02 permet de rechercher les tables d'une garantie en fonction des informations de la table VIT9024_ReferencesTblTaux contenant des pointeurs de table de VLn. Quand les pointeurs sont disponibles dans VLn, il est possible de fournir un pointeur commun au moteur de l'actuariat et à VLn.
 </remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTaux.ObtenirTableInfo(IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.CodeTableCouverture)">
	<summary>
 Obtient les informations complètes d'une table de taux en fonction du code de table passé en paramètre.
 </summary>
	<param name="CodeTable">Valeur permise de l'ENUM IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.CodeTable.</param>
	<returns>Retourne une liste générique d'un seul item de type IAFG.IA.VI.AF.PDFs.Donnees.ReferencesTablesTaux. Si la recherche est infructueuse, la fonction retourne une liste vide.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTaux.ObtenirNomTable(IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.CodeTableCouverture)">
	<summary>
 Obtient le nom de la table correspondant au code de table passé en paramètre.
 </summary>
	<param name="CodeTable">Valeur permise de l'ENUM IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.CodeTable</param>
	<returns>Retourne de nom de la table s'il en trouve une. Sinon, retourne une chaîne vide.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTaux.Executer(System.Int32,System.Int32)">
	<summary>
	</summary>
	<param name="ClePDA">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="RateScaleDate">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTaux">
	<summary>
 Classe de requete pour la requête PU_ReferencesTablesTaux.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReferencesTablesTaux.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_ReferencesTablesTaux)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_ReferencesTablesTaux à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_ReferencesTablesTaux.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.PU_ReferencesTablesTaux">
	<summary>
Permet d'obtenir la liste des tables de taux utilisés pour l'ensemble des calculs impliqués dans le traitement d'une police.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_NivellementCouts.Executer(System.Int32,System.Int32)">
	<summary>
	</summary>
	<param name="ClePDB">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="DateEffective">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_NivellementCouts">
	<summary>
 Classe de requete pour la requête PU_NivellementCouts.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_NivellementCouts.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_NivellementCouts)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_NivellementCouts à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_NivellementCouts.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_BandesPTZ.ObtenirCodeBande(System.Int32)">
	<summary> 
 Permet d'obtenir le code de bande associé au montant d'assurance fourni en paramètre en fonction des résultats obtenus lors de la dernière exécution de la requête. 
 </summary>
	<param name="Montant">Montant de référence pour déterminer le code de bande qui lui est correspondant.</param>
	<returns>Code de bande selon l'ENUM : IAFG.IA.VI.AF.PDF.ENUMs.CodeBande.</returns>
	<remarks>IMPORTANT : Il faut exécuter la requête avant d'appeler cette méthode. Sinon, elle retournera "IAFG.IA.VI.AF.PDF.ENUMs.CodeBande.PasDeBande".</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_BandesPTZ.MontantMinClsPreferentielle">
	<summary>
 Cette fonction permet d'obtenir le montant à partir duquel s'applique la classe préférentielle si celle-ci est disponible pour le plan sélectionné.
 </summary>
	<returns>Si la valeur retournée est négative, c'est qu'il n'y a pas de classe préférentielle pour ce plan. La valeur -1 indique qu'il n'y a pas de classe préférentielle pour le plan sélectionné. La valeur -2 indique que le plan sélectionné n'a de classe préférentielle et en plus il n'y a pas de définition de bandes pour celui-ci. Tout autre montant supérieur ou égal à zéro, indique le montant fixant le seuil à partir duquel la classe préférentille s'applique.</returns>
	<remarks>La valeur retournée est toujours en fonction des données sélectionnées lors de la dernière exécution de la méthode "Executer".</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_BandesPTZ.ObtenirClsPreferentielleDisponible(System.Int32)">
	<summary> 
 Permet d'obtenir les classes préférentielles disponibles en fonction du montant d'assurance fourni en paramètre. Le résultat retourné est déterminé par rapport aux items sélectionnés lors de la dernière exécution de la requête (méthode : "Executer").
 </summary>
	<param name="Montant">Montant de référence pour déterminer les classes préférentielles disponibles.</param>
	<returns>Classes préférentielles disponibles selon l'ENUM "flagué" : IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.ClassePreferentielle.</returns>
	<remarks>IMPORTANT : Il faut exécuter la requête avant d'appeler cette méthode. Sinon, elle retournera "IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.ClassePreferentielle.NonApplicable".</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_BandesPTZ.ObtenirBandeInfo(IAFG.IA.VI.AF.PDF.ENUMs.CodeBande)">
	<summary> 
 Permet d'obtenir les informations reliées à un code de bande spécifique.
 </summary>
	<param name="CodeBande">Code de bande dont on veut obtenir l'information.</param>
	<returns>Retourne une liste d'un seul item correspondant au code de bande demandé.</returns>
	<remarks>Dans le cas ou aucun item n'est trouvé ou que la requête n'est pas exécutée avant l'appel à la fonction, une liste vide est retournée.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_BandesPTZ.ObtenirBandeInfo(System.Int32)">
	<summary> 
 Permet d'obtenir les informations sur la bande correspondant au montant d'assurance spécifié.
 </summary>
	<param name="Montant">Montant de référence à partir duquel on veut obtenir l'information.</param>
	<returns>Retourne une liste d'un seul item correspondant au montant spécifié.</returns>
	<remarks>Dans le cas ou aucun item n'est trouvé ou que la requête n'est pas exécutée avant l'appel à la fonction, une liste vide est retournée.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_BandesPTZ.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="CleZZ">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_BandesPTZ">
	<summary>
 Classe de requete pour la requête PU_BandesPTZ.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_BandesPTZ.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_BandesPTZ)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_BandesPTZ à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_BandesPTZ.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_Bandes.ObtenirCodeBande(System.Int32)">
	<summary> 
 Permet d'obtenir le code de bande associé au montant d'assurance fourni en paramètre en fonction des résultats obtenus lors de la dernière exécution de la requête. 
 </summary>
	<param name="Montant">Montant de référence pour déterminer le code de bande qui lui est correspondant.</param>
	<returns>Code de bande selon l'ENUM : IAFG.IA.VI.AF.PDF.ENUMs.CodeBande.</returns>
	<remarks>IMPORTANT : Il faut exécuter la requête avant d'appeler cette méthode. Sinon, elle retournera "IAFG.IA.VI.AF.PDF.ENUMs.CodeBande.PasDeBande".</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_Bandes.MontantMinClsPreferentielle">
	<summary>
 Cette fonction permet d'obtenir le montant à partir duquel s'applique la classe préférentielle si celle-ci est disponible pour le plan sélectionné.
 </summary>
	<returns>Si la valeur retournée est négative, c'est qu'il n'y a pas de classe préférentielle pour ce plan. La valeur -1 indique qu'il n'y a pas de classe préférentielle pour le plan sélectionné. La valeur -2 indique que le plan sélectionné n'a de classe préférentielle et en plus il n'y a pas de définition de bandes pour celui-ci. Tout autre montant supérieur ou égal à zéro, indique le montant fixant le seuil à partir duquel la classe préférentille s'applique.</returns>
	<remarks>La valeur retournée est toujours en fonction des données sélectionnées lors de la dernière exécution de la méthode "Executer".</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_Bandes.ObtenirClsPreferentielleDisponible(System.Int32)">
	<summary> 
 Permet d'obtenir les classes préférentielles disponibles en fonction du montant d'assurance fourni en paramètre. Le résultat retourné est déterminé par rapport aux items sélectionnés lors de la dernière exécution de la requête (méthode : "Executer").
 </summary>
	<param name="Montant">Montant de référence pour déterminer les classes préférentielles disponibles.</param>
	<returns>Classes préférentielles disponibles selon l'ENUM "flagué" : IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.ClassePreferentielle.</returns>
	<remarks>IMPORTANT : Il faut exécuter la requête avant d'appeler cette méthode. Sinon, elle retournera "IAFG.IA.VI.AF.PDF.ReglesPDA.ENUMs.ClassePreferentielle.NonApplicable".</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_Bandes.ObtenirBandeInfo(IAFG.IA.VI.AF.PDF.ENUMs.CodeBande)">
	<summary> 
 Permet d'obtenir les informations reliées à un code de bande spécifique.
 </summary>
	<param name="CodeBande">Code de bande dont on veut obtenir l'information.</param>
	<returns>Retourne une liste d'un seul item correspondant au code de bande demandé.</returns>
	<remarks>Dans le cas ou aucun item n'est trouvé ou que la requête n'est pas exécutée avant l'appel à la fonction, une liste vide est retournée.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_Bandes.ObtenirBandeInfo(System.Int32)">
	<summary> 
 Permet d'obtenir les informations sur la bande correspondant au montant d'assurance spécifié.
 </summary>
	<param name="Montant">Montant de référence à partir duquel on veut obtenir l'information.</param>
	<returns>Retourne une liste d'un seul item correspondant au montant spécifié.</returns>
	<remarks>Dans le cas ou aucun item n'est trouvé ou que la requête n'est pas exécutée avant l'appel à la fonction, une liste vide est retournée.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PU_Bandes.Executer(System.Int32,System.Int32)">
	<summary>
	</summary>
	<param name="ClePDA">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="RateScaleDate">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PU_Bandes">
	<summary>
 Classe de requete pour la requête PU_Bandes.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PU_Bandes.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PU_Bandes)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PU_Bandes à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPU_Bandes.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.Produit.Executer(IAFG.IA.VI.AF.PDF.ENUMs.Produits,System.String)">
	<summary>
	</summary>
	<param name="GammeId">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.Produits</code>.</param>
	<param name="Plan">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.Produit">
	<summary>
 Classe de requete pour la requête Produit.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Produit.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.Produit)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.Produit à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetProduit.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.Produit">
	<summary>
Contient les règles du produit sélectionné lors de l'appel de la méthode de création d'un instance de la classe. Cette classe est mise en relation avec la classe plan à travers la propriété Produit.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PretsEtAvancesDisponibles.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="ClePDA">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PretsEtAvancesDisponibles">
	<summary>
 Classe de requete pour la requête PretsEtAvancesDisponibles.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PretsEtAvancesDisponibles.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PretsEtAvancesDisponibles)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PretsEtAvancesDisponibles à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPretsEtAvancesDisponibles.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.PretsEtAvancesDisponibles">
	<summary>
Cette requête permet d'obtenir les types de prêt qu'il est possible d'avoir sur un plan donnné. L'information retournée par la requête sera disponible via la propriété PretsEtAvancesDisponibles de la classe PU_ReglePDA.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PlanMultitermeSansCriteres.Executer">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PlanMultitermeSansCriteres">
	<summary>
 Classe de requete pour la requête PlanMultitermeSansCriteres.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PlanMultitermeSansCriteres.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PlanMultitermeSansCriteres)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PlanMultitermeSansCriteres à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPlanMultitermeSansCriteres.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.PlanMultiterme.Executer(IAFG.IA.VI.AF.Proposition.ENUMs.TypeCapital,System.Int32,IAFG.IA.VI.AF.PDF.ENUMs.Produits)">
	<summary>
	</summary>
	<param name="TypeCapital">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeCapital</code>.</param>
	<param name="DureeProtection">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="GammeId">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.Produits</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.PlanMultiterme">
	<summary>
 Classe de requete pour la requête PlanMultiterme.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.PlanMultiterme.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.PlanMultiterme)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.PlanMultiterme à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPlanMultiterme.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.Plan_Concept.Executer(IAFG.IA.IL.AF.Illustration.ENUMs.TypeConcept)">
	<summary>
	</summary>
	<param name="Concept">Ce paramètre est de type <code>IAFG.IA.IL.AF.Illustration.ENUMs.TypeConcept</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.Plan_Concept">
	<summary>
 Classe de requete pour la requête Plan_Concept.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan_Concept.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.Plan_Concept)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.Plan_Concept à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPlan_Concept.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan_Concept.GammeId">
	<summary>
La proprité GammeId est une propriété "Friend", car elle ne sert qu'à faire le lien avec la classe Produit, laquelle est liée par la propriété du même nom.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan_Concept.GrpCoutsAjoutFlag">
	<summary>
Cette propriété sera exposée publique dans la classe IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan sous le nom TypeMortalitePermisAjout.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan_Concept.OptionPermise">
	<summary>
Cette propriété permet de savoir s'il est permis d'ajouter une option sur ce plan. Elle est exposée publique dans la classe IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan_Concept.DateMinEmission">
	<summary>
Retourne la date minimum à partir de la quelle il est possible d'émettre une protection correspondant au plan sélectionné.
 </summary>
	<remarks>
Le format de la date est un entier de 32 bit dont le format correspond à une date (AAAAMMJJ).
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan_Concept.RegleMontantMinimum">
	<summary>
Cette règle sert dans le traitement qui sert à déterminer le montant minimum permis sur une couverture. Le traitement est programmé dans la propriété MontantMinEmission de la classe IAFG.IA.VI.AF.PDFs.Donnees.LimitesAgeMontant.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan.ObtenirRegleAgeRefConjoint(IAFG.IA.VI.AF.PDF.ENUMs.ContexteAgeRefCjt,IAFG.IA.VI.AF.PDFs.IProtection)">
	<summary>
 Sert à déterminer la règle de calcul applicable pour calculer l'âge de référence applicable pour déterminer la date de maturité ou la date de libération.
 </summary>
	<param name="ContexteAgeRefCjt">Indique si l'on veut obtenir la règle en référence avec la date de maturité ou la date de libération.</param>
	<param name="IProtection">La protection</param>
	<returns>Retourne la valeur de la règle applicable en fonction des paramètres fournis à l'exécution.</returns>
	<remarks></remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan.PlanCourantIllustration">
	<summary></summary>
	<returns>Indique si le plan correspond à un plan courant actuellement disponible pour illustration.</returns>
	<remarks>Les plans courants disponibles pour illustration change d'une version de produit à l'autre. La propriété StatutPlan est utilisée pour déterminer s'il s'agit d'un plan actif ou non.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.AssurConjointePermis(IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance)">
	<summary>
 Détermine si un plan peut s'appliquer sur une base conjointe
 </summary>
	<param name="typeAssurance">Le type d'assurance (individuelle, conjointe ...)</param>
	<returns>TRUE : le plan en cours peut s'appliquer sur une base conjointe, FALSE : il ne peut pas</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.AssurIndividPermise(IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance)">
	<summary>
 Détermine si un plan peut s'appliquer sur une base individuelle 
 </summary>
	<param name="typeAssurance">Le type d'assurance (individuelle, conjointe ...)</param>
	<returns>TRUE : le plan en cours peut s'appliquer sur une base individuelle, FALSE : il ne peut pas</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsAssuranceInvalidite">
	<summary>
 Nous dit si notre protection est une protection invalidité.
 </summary>
	<returns>True: C'est une invalidité, False: Ce n'est pas une invalidité.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsAssuranceMultitermeInvalidite">
	<summary>
 Nous dit si notre protection est une protection invalidité.
 </summary>
	<returns>True: C'est une invalidité, False: Ce n'est pas une invalidité.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsAvenantPrestationMajoree">
	<summary>
 Nous dit si notre protection est un APM.
 </summary>
	<returns>True: C'est un APM, False: Ce n'est pas un APM.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsAvenantRemboursementPrimes">
	<summary>
 Nous dit si notre protection est un remboursement flexible des primes.
 </summary>
	<returns>True: C'est un un remboursement flexible des primes, False: Ce n'est pas un un remboursement flexible des primes.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsAvenantRemboursementDeces">
	<summary>
 Nous dit si notre protection est un remboursement au décès.
 </summary>
	<returns>True: C'est un un remboursement au décès, False: Ce n'est pas un un remboursement au décès.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsAvenantRemboursementFlexible">
	<summary>
 Nous dit si notre protection est un remboursement flexible
 </summary>
	<returns>True: C'est un un remboursement flexible, False: Ce n'est pas un un remboursement flexible.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsAvenantTransition">
	<summary>
 Nous dit si notre protection est un avenant transition.
 </summary>
	<returns>True: C'est un avenant transition, False: Ce n'est pas un avenant transition.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsAvenant">
	<summary>
 Nous dit si notre protection est un avenant.
 </summary>
	<returns>True: C'est un avenant, False: Ce n'est pas un avenant.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsProtectionMere">
	<summary>
 Nous dit si notre protection est une Protection Mère (PROT_MERE).
 </summary>
	<returns>True: C'est une Protection Mère, False: Ce n'est pas une Protection Mère.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsCic">
	<summary>
 Nous dit si notre protection est un avenant CIC.
 </summary>
	<returns>True: C'est un CIC, False: Ce n'est pas un CIC.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsCdc">
	<summary>
 Nous dit si notre protection est un avenant CDC.
 </summary>
	<returns>True: C'est un CDC, False: Ce n'est pas un CDC.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsCia">
	<summary>
 Nous dit si notre protection est un avenant CIA.
 </summary>
	<returns>True: C'est un CIA, False: Ce n'est pas un CIA.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsDependantAssVie">
	<summary>
 Nous dit si notre protection est dépendante de protections ayant un capital vie.
 </summary>
	<returns>True: Sa dépend de protections ayant un capital vie, False: Sa ne dépend pas de protections ayant un capital vie.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsDependantMg">
	<summary>
 Nous dit si notre protection est dépendante de protections Maladie grave.
 </summary>
	<returns>True: Sa dépend de protections Maladie grave, False: Sa ne dépend pas de protections Maladie grave.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsEpic">
	<summary>
 Nous dit si notre protection est un EPIC.
 </summary>
	<returns>True: C'est un EPIC, False: Ce n'est pas un EPIC.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsEpia">
	<summary>
 Nous dit si notre protection est un EPIA.
 </summary>
	<returns>True: C'est un EPIA, False: Ce n'est pas un EPIA.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsEpdc">
	<summary>
 Nous dit si notre protection est un EPDC.
 </summary>
	<returns>True: C'est un EPDC, False: Ce n'est pas un EPDC.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsFA">
	<summary>
 Nous dit si notre protection est un FA.
 </summary>
	<returns>True: C'est un FA, False: Ce n'est pas un FA.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsGarantieAssurabilite">
	<summary>
 Nous dit si notre protection est une garantie d'assurabilité.
 </summary>
	<returns>True: C'est une garantie d'assurabilité, False: Ce n'est pas une garantie d'assurabilité.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsGarantieContractantCorpo">
	<summary>
 Nous dit si notre protection est une garantie sur un contractant corporatif.
 </summary>
	<returns>True: C'est une garantie sur un contractant corporatif, False: Ce n'est pas une garantie sur un contractant corporatif.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsGarantieContractant">
	<summary>
 Nous dit si notre protection est une garantie sur un contractant.
 </summary>
	<returns>True: C'est une garantie sur un contractant, False: Ce n'est pas une garantie sur un contractant.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsGarantieDeces">
	<summary>
 Nous dit si notre protection est une garantie décès.
 </summary>
	<returns>True: C'est une garantie décès, False: Ce n'est pas une garantie décès.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsGarantieEnfant">
	<summary>
 Nous dit si notre protection est une garantie sur les enfants.
 </summary>
	<returns>True: C'est une garantie sur les enfants, False: Ce n'est pas une garantie sur les enfants.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsGarantieEnfantPlus">
	<summary>
 Nous dit si notre protection est une garantie sur les enfants.
 </summary>
	<returns>True: C'est une garantie sur les enfants, False: Ce n'est pas une garantie sur les enfants.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsMaladieGrave">
	<summary>
 Nous dit si notre protection est une Maladie grave.
 </summary>
	<returns>True: C'est une Maladie grave, False: Ce n'est pas une Maladie grave.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsDuoVieSante">
	<summary>
 Nous dit si notre protection est une DuoVieSante.
 </summary>
	<returns>True: C'est une DuoVieSante, False: Ce n'est pas une DuoVieSante.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsVieEtSerenite">
	<summary>
 Renvoit une valeur indiquant si notre protection est une Vie et Serenite.
 </summary>
	<returns>
 True si le protection est une Vie et Serenite, sinon False
 </returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsOption">
	<summary>
 Nous dit si notre protection est une option.
 </summary>
	<returns>True: C'est une option, False: Ce n'est pas une option.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsParamedical">
	<summary>
 Nous dit si notre protection est une paramédicale.
 </summary>
	<returns>True: C'est une paramédicale, False: Ce n'est pas une paramédicale.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsPrimeIncluse(IAFG.IA.IL.AF.Illustration.ENUMs.TypeMortaliteIllustration)">
	<summary>
 Cette fonction indique si la la prime de la protection, auquel cet objet de règles d'affaires est lié,
 est incluse dans la prime minimum
 </summary>
	<param name="typeMortalite">Le type de mortalité de la base</param>
	<returns>True: La prime est incluse, False: La prime n'est pas incluse.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsProtectionHospitalisation">
	<summary>
 Nous dit si notre protection est une Hospitalisation.
 </summary>
	<returns>True: C'est une Hospitalisation, False: Ce n'est pas une Hospitalisation.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsProtectionHospitalisationDom">
	<summary>
 Nous dit si notre protection est une Hospitalisation soins à domicile.
 </summary>
	<returns>True: C'est une Hospitalisation soins à domicile, False: Ce n'est pas une Hospitalisation soins à domicile.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsProtectionMultiterme">
	<summary>
 Nous dit si notre protection est une protection multiterme.
 </summary>
	<returns>True: C'est une multiterme, False: Ce n'est pas une multiterme.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsProtectionTransition">
	<summary>
 Nous dit si notre protection est une protection transition.
 </summary>
	<returns>True: C'est une transition, False: Ce n'est pas une transition.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsProtectionTransitionEvolution">
	<summary>
 Nous dit si notre protection est une protection Transition Évolution.
 </summary>
	<returns>True: C'est une transition Évolution, False: Ce n'est pas une transition Évolution.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsProtectionGenesis">
	<summary>
 Nous dit si notre protection est une protection Genesis.
 </summary>
	<returns>True: C'est une Genesis, False: Ce n'est pas une Genesis.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsProtectionVie">
	<summary>
 Cette fonction permet de vérifier si la couverture est 
 une couverture vie (T10, T20, Genesis1 etc.) 
 </summary>
	<returns>True: C'est une protection vie, False: Ce n'est pas une protection vie.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsProtectionVieTemporaire">
	<summary>
 Nous dit si notre protection est une protection Vie Temporaire.
 </summary>
	<returns>True: C'est une Vie Temporaire, False: Ce n'est pas une Vie Temporaire.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsRevenuAppoint">
	<summary>
 Cette fonction permet de vérifier si la protection est un revenu d'appoint
 </summary>
	<returns>True: C'est une protection revenu d'appoint, False: Ce n'est pas une protection revenu d'appoint.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsTransitionT100">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T100
 </summary>
	<returns>True: C'est une protection transition T100, False: Ce n'est pas une protection transition T100.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsTransitionT10">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T10
 </summary>
	<returns>True: C'est une protection transition T10, False: Ce n'est pas une protection transition T10.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsTransitionT75">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T75
 </summary>
	<returns>True: C'est une protection transition T75, False: Ce n'est pas une protection transition T75.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsTransitionT100avecOption">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T100 avec option (10 ou 20 paiements)
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsTransitionT100Opt10">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T100 avec option 10 paiements
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsTransitionT100Opt20">
	<summary>
 Cette fonction permet de vérifier si la protection est une transition T100 avec option 20 paiements
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsTypeAssurancePermis(IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance)">
	<summary>
 Valide si la protection est permise selon le type d'assurance passé en paramètre
 </summary>
	<returns>Le type d'assurance que l'on veut valider</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsDA">
	<summary>
 Nous dit si notre protection est un avenant DA.
 </summary>
	<returns>True: C'est un DA, False: Ce n'est pas un DA.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsDMA">
	<summary>
 Nous dit si notre protection est un avenant DMA.
 </summary>
	<returns>True: C'est un DMA, False: Ce n'est pas un DMA.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.IsCouvertureIndivConj">
	<summary>
 Cette fonction indique si on peut avoir une protection individuelle et conjointe
 </summary>
	<returns>True si on peut avoir une protection individuelle et conjointe</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.ObtenirMontantsMinMax(IAFG.IA.VI.AF.IBase.IBase)">
	<summary>
 Récupère les montants min et max d'une protection selon un âge donné
 </summary>
	<returns>Une occurence de LimitesAgeMontant qui contient les limites de montants</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.Plan.Executer(System.String)">
	<summary>
	</summary>
	<param name="CodePlan">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.Plan">
	<summary>
 Classe de requete pour la requête Plan.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.Plan.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.Plan)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.Plan à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetPlan.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan.GammeId">
	<summary>
La proprité GammeId est une propriété "Friend", car elle ne sert qu'à faire le lien avec la classe Produit, laquelle est liée par la propriété du même nom.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan.GrpCoutsAjoutFlag">
	<summary>
Cette propriété sera exposée publique dans la classe IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan sous le nom TypeMortalitePermisAjout.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan.OptionPermise">
	<summary>
Cette propriété permet de savoir s'il est permis d'ajouter une option sur ce plan. Elle est exposée publique dans la classe IAFG.IA.VI.AF.PDFs.Donnees.ReglesPlan.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan.DateMinEmission">
	<summary>
Retourne la date minimum à partir de la quelle il est possible d'émettre une protection correspondant au plan sélectionné.
 </summary>
	<remarks>
Le format de la date est un entier de 32 bit dont le format correspond à une date (AAAAMMJJ).
 </remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.Plan.RegleMontantMinimum">
	<summary>
Cette règle sert dans le traitement qui sert à déterminer le montant minimum permis sur une couverture. Le traitement est programmé dans la propriété MontantMinEmission de la classe IAFG.IA.VI.AF.PDFs.Donnees.LimitesAgeMontant.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.OptionsIRIS.Executer(System.String)">
	<summary>
	</summary>
	<param name="CodePlan">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.OptionsIRIS">
	<summary>
 Classe de requete pour la requête OptionsIRIS.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.OptionsIRIS.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.OptionsIRIS)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.OptionsIRIS à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetOptionsIRIS.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirTransactionsEnCascade.Executer(IAFG.IA.VI.AF.PDF.ENUMs.GrpTransactionsPermises,IAFG.IA.VI.AF.PDF.ENUMs.TypeTransaction)">
	<summary>
	</summary>
	<param name="GrpTrsPermises">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.GrpTransactionsPermises</code>.</param>
	<param name="trExecutees">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.TypeTransaction</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirTransactionsEnCascade">
	<summary>
 Classe de requete pour la requête ObtenirTransactionsEnCascade.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirTransactionsEnCascade.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.ObtenirTransactionsEnCascade)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirTransactionsEnCascade à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirTransactionsEnCascade.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirTransactionsEnCascade.Sequence">
	<summary>
L'ordre dans lequel les instructions doivent s'effectuer
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirTransactionsEnCascade.TestValidation">
	<summary>
Nous indique quel est le test à faire pour valider avant de créer la transaction
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirTransactionsEnCascade.SuccesValidation">
	<summary>
Indique les instructions à suivre si le TestValidation est un succès
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirTransactionsEnCascade.EchecValidation">
	<summary>
Âge maximum permis à l'émission d'une protection selon le type d'assurance de celle-ci. L'âge équivalent peut différer de l'âge des assurés conjoints. Cette propriété permet de faire une validation indépandente sur les assurés et les protections.
 </summary>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirTransactionsEnCascade">
	<summary>
Requête qui permet d'obtenir les transactions en cascade
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirTauxConservation.Executer(System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeMortalite,System.Int32,System.Boolean)">
	<summary>
	</summary>
	<param name="CodePlan">Ce paramètre est de type <code>String</code>.</param>
	<param name="TypeMortaliteId">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeMortalite</code>.</param>
	<param name="DateEffective">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="AvecOption">Ce paramètre est de type <code>Boolean</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirTauxConservation">
	<summary>
 Classe de requete pour la requête ObtenirTauxConservation.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirTauxConservation.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.ObtenirTauxConservation)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirTauxConservation à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirTauxConservation.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirPrioriteAssGarantie.Executer(System.String)">
	<summary>
	</summary>
	<param name="CodePlan">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirPrioriteAssGarantie">
	<summary>
 Classe de requete pour la requête ObtenirPrioriteAssGarantie.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirPrioriteAssGarantie.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.ObtenirPrioriteAssGarantie)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirPrioriteAssGarantie à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirPrioriteAssGarantie.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirPlanOptionBaseVsBase.Executer(System.String,IAFG.IA.VI.AF.Proposition.ENUMs.TypeOption,System.Boolean)">
	<summary>
	</summary>
	<param name="CodePlan">Ce paramètre est de type <code>String</code>.</param>
	<param name="TypeOptionID">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeOption</code>.</param>
	<param name="Emission">Ce paramètre est de type <code>Boolean</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirPlanOptionBaseVsBase">
	<summary>
 Classe de requete pour la requête ObtenirPlanOptionBaseVsBase.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirPlanOptionBaseVsBase.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.ObtenirPlanOptionBaseVsBase)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirPlanOptionBaseVsBase à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirPlanOptionBaseVsBase.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirPlanBaseGamme.Executer(IAFG.IA.VI.AF.PDF.ENUMs.Produits)">
	<summary>
	</summary>
	<param name="Gamme">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.Produits</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirPlanBaseGamme">
	<summary>
 Classe de requete pour la requête ObtenirPlanBaseGamme.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirPlanBaseGamme.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.ObtenirPlanBaseGamme)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirPlanBaseGamme à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirPlanBaseGamme.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirPlanBaseGamme">
	<summary>
Permet d'obtenir le code de plan de base de la gamme reçu en paramètre
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirGroupeBannierePlan.Executer(System.String)">
	<summary>
	</summary>
	<param name="CodePlan">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.ObtenirGroupeBannierePlan">
	<summary>
 Classe de requete pour la requête ObtenirGroupeBannierePlan.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirGroupeBannierePlan.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.ObtenirGroupeBannierePlan)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ObtenirGroupeBannierePlan à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetObtenirGroupeBannierePlan.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.ObtenirGroupeBannierePlan">
	<summary>
Cette requête permet d'obtenir la(les) bannière(s) sous laquelle un plan peut-être vendu.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.LimitesAgeMontant.MontantMinEmission">
	<summary>
 Propriété qui retourne le montant minimum permis à l'émission. 
 On fait l'éguillage selon la règle RegleMontantMinimum défini sur chaque plan.
 </summary>
	<value></value>
	<returns>Le montant minimum permis</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.LimitesAgeMontant.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="GrpAgeMontant">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.LimitesAgeMontant">
	<summary>
 Classe de requete pour la requête LimitesAgeMontant.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.LimitesAgeMontant.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.LimitesAgeMontant)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.LimitesAgeMontant à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetLimitesAgeMontant.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.LimitesAgeMontant.AgeDebutEmission">
	<summary>
Cette propriété fixe la limite minimale pour l'âge à l'émission dans le but de déterminer le montant d'assurance permis. Elle a une portée "Friend" pour éviter de confondre cette valeur avec le champ "AgeMinEmission" de la requête Plan.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.LimitesAgeMontant.AgeFinEmission">
	<summary>
Cette propriété fixe la limite maximale pour l'âge à l'émission dans le but de déterminer le montant d'assurance permis. Elle a une portée "Friend" pour éviter de confondre cette valeur avec le champ "AgeMaxEmission" de la requête Plan.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.LimitesAgeMontant.MontantMinResiliation">
	<summary>
Cette propriété retourne le montant minimum qu'il est permis de réduire le capital décès d'une protection d'assurance. Si le montant retourné est négatif, ça signifie qu'il n'est pas permis de réduire le capital assuré de la protection.
 </summary>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.LimitesAgeMontant">
	<summary>
Contient les limites minimales et maximales des montants applicables à une protection par tranche d'âge
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.LienBaseAvenant.AgeEtDureeRembFlexiblePrimes(System.Int16)">
	<summary>
 Retourne l'âge ou la durée à partir de laquelle l'avenant de remboursement flexible des primes atteindra 100% de sa valeur.
 </summary>
	<param name="Age">Correspond à l'âge à l'émission de l'avanant.</param>
	<value></value>
	<returns>Retourne Nothing pour les plan qui ne sont pas de plans de remboursement flexible des primes.</returns>
	<remarks></remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.LienBaseAvenant.SelectionnerTypeAvenant(IAFG.IA.VI.AF.Proposition.ENUMs.TypeAvenant)">
	<summary>
 Cette fonction permet de sélectionner seulement les items dont la propriété TypeAvenant correspond à la valeur spécifiée en paramètre.
 </summary>
	<param name="TypeAvenant">Permet d'indiquer le type d'avenant désiré en choisisant parmis les valeur de l'ENUM IAFG.IA.VI.AF.Proposition.ENUMs.TypeAvenant.</param>
	<returns>Retourne une liste des items correspondant au type demandé.</returns>
	<remarks>Dans le cas ou aucun item n'est trouvé ou que la requête n'est pas exécutée avant l'appel à la fonction, une liste vide est retournée.</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.LienBaseAvenant.Executer(System.Int32)">
	<summary>
	</summary>
	<param name="CodePlanNum">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.LienBaseAvenant">
	<summary>
 Classe de requete pour la requête LienBaseAvenant.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.LienBaseAvenant.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.LienBaseAvenant)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.LienBaseAvenant à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetLienBaseAvenant.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.GrpAgeRefConjoint.Executer(IAFG.IA.VI.AF.PDF.ENUMs.GrpAgeRefConjoint)">
	<summary>
	</summary>
	<param name="NoGrpAgeConjoint">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.GrpAgeRefConjoint</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.GrpAgeRefConjoint">
	<summary>
 Classe de requete pour la requête GrpAgeRefConjoint.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.GrpAgeRefConjoint.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.GrpAgeRefConjoint)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.GrpAgeRefConjoint à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetGrpAgeRefConjoint.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.GrpAgeRefConjoint">
	<summary>
Cette requête permet d'obtenir la règle à utiliser pour calculer l'âge de référence en fonction des paramètres qui lui sont fournis. Les paramètres sont fournis en tenant compte du contexte de donnée d'affaire lors de l'exécution.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.GetDescriptionAdditionnelleSousProtection.Executer(IAFG.IA.VI.AF.PDF.ENUMs.CodeProtection,IAFG.IA.VI.AF.Proposition.ENUMs.TypeCapital)">
	<summary>
	</summary>
	<param name="CodeProtection">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.CodeProtection</code>.</param>
	<param name="TypeCapital">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeCapital</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.GetDescriptionAdditionnelleSousProtection">
	<summary>
 Classe de requete pour la requête GetDescriptionAdditionnelleSousProtection.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.GetDescriptionAdditionnelleSousProtection.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.GetDescriptionAdditionnelleSousProtection)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.GetDescriptionAdditionnelleSousProtection à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetGetDescriptionAdditionnelleSousProtection.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.GetDescriptionAdditionnelleSousProtection">
	<summary>
Permet d'obtenir la description additionnelle d'une sous-protection par rapport à son codeProtection et le type de capital de sa base
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.GetDescriptionAdditionnelleProtection.Executer(IAFG.IA.VI.AF.PDF.ENUMs.CodeProtection,IAFG.IA.VI.AF.Proposition.ENUMs.TypeOption,IAFG.IA.VI.AF.PDF.ENUMs.TypeMortaliteBase)">
	<summary>
	</summary>
	<param name="CodeProtection">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.CodeProtection</code>.</param>
	<param name="TypeOption">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeOption</code>.</param>
	<param name="TypeMortalite">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.TypeMortaliteBase</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.GetDescriptionAdditionnelleProtection">
	<summary>
 Classe de requete pour la requête GetDescriptionAdditionnelleProtection.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.GetDescriptionAdditionnelleProtection.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.GetDescriptionAdditionnelleProtection)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.GetDescriptionAdditionnelleProtection à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetGetDescriptionAdditionnelleProtection.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.GetDescriptionAdditionnelleProtection">
	<summary>
Permet d'obtenir la description additionnelle d'une protection par rapport à son codeProtection, TypeOption et son TypeMortalite
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.DisponibleIllustration.Executer(IAFG.IA.VI.AF.PDF.ENUMs.StatutPlan)">
	<summary>
	</summary>
	<param name="StatutPlan">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.StatutPlan</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.DisponibleIllustration">
	<summary>
 Classe de requete pour la requête DisponibleIllustration.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.DisponibleIllustration.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.DisponibleIllustration)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.DisponibleIllustration à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetDisponibleIllustration.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.DisponibleIllustration">
	<summary>
Cette classe permet de déterminer si le statut d'un plan le rend disponible pour l'Illustration.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.ConversionTypeMortalite.Executer(IAFG.IA.VI.AF.Proposition.ENUMs.TypeMortalite)">
	<summary>
	</summary>
	<param name="TypeMortalite">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeMortalite</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.ConversionTypeMortalite">
	<summary>
 Classe de requete pour la requête ConversionTypeMortalite.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ConversionTypeMortalite.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.ConversionTypeMortalite)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ConversionTypeMortalite à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetConversionTypeMortalite.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.ConversionTypeMortalite.TypeMortaliteBase">
	<summary>
Correspond à la valeur du type de mortalité qui est utilisé dans les systèmes administratifs.
 </summary>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.ConversionTypeMortalite">
	<summary>
Cette classe permet de convertir le type de mortalité choisi dans une illustration en un type de base du système d'administration.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.ConversionBanniereVLn.Executer(System.String)">
	<summary>
	</summary>
	<param name="CodeVLn">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.ConversionBanniereVLn">
	<summary>
 Classe de requete pour la requête ConversionBanniereVLn.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ConversionBanniereVLn.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.ConversionBanniereVLn)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ConversionBanniereVLn à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetConversionBanniereVLn.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.ConversionBanniereVLn">
	<summary>
Requête qui permet de convertir le code de bannière utilisé dans le système VLn en fonction de l'ENUM IAFG.IA.VI.ENUMs.Banniere.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.CodePlanGarantieVsCodePlanCouv.Executer(System.String,System.String,System.String)">
	<summary>
	</summary>
	<param name="CodePlanProtection">Ce paramètre est de type <code>String</code>.</param>
	<param name="TypeALIS">Ce paramètre est de type <code>String</code>.</param>
	<param name="SousTypeAlis">Ce paramètre est de type <code>String</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.CodePlanGarantieVsCodePlanCouv">
	<summary>
 Classe de requete pour la requête CodePlanGarantieVsCodePlanCouv.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.CodePlanGarantieVsCodePlanCouv.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.CodePlanGarantieVsCodePlanCouv)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.CodePlanGarantieVsCodePlanCouv à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetCodePlanGarantieVsCodePlanCouv.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.CodePlanGarantieVsCodePlanCouv">
	<summary>
Requête qui permet d'obtenir le plan d'une garantie complémentaire à partir du code de plan de la couverture à laquelle elle se rattache et du type et sous-type ALIS de la garantie.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.ReglesChargesAuRachatCouverturesAdditionnelles.Executer(System.Int32,System.Int32)">
	<summary>
	</summary>
	<param name="GammeIdBase">Ce paramètre est de type <code>Int32</code>.</param>
	<param name="DateEffective">Ce paramètre est de type <code>Int32</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.ReglesChargesAuRachatCouverturesAdditionnelles">
	<summary>
 Classe de requete pour la requête ReglesChargesAuRachatCouverturesAdditionnelles.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.ReglesChargesAuRachatCouverturesAdditionnelles.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.ReglesChargesAuRachatCouverturesAdditionnelles)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.ReglesChargesAuRachatCouverturesAdditionnelles à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetReglesChargesAuRachatCouverturesAdditionnelles.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.ReglesChargesAuRachatCouverturesAdditionnelles">
	<summary>
Cette requête retourne un regroupement de toutes les règles de charges au rachat (SurrenderChargeCalculationMethod) provenant de la table  VIT9020_ReglesPDA pour le concept reçu en paramètre.
 </summary>
	<remarks>
Cette requête a été créée parce qu'il faut s'assurer, dans certains traitements du moteur de calcul (MoteurVU), qu'il n'y a aucune protection avec charges au rachat possible sur le contrat en traitement.
 </remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.AgeMinMaxEmissionSansCriteres.Executer">
	<summary>
	</summary>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.AgeMinMaxEmissionSansCriteres">
	<summary>
 Classe de requete pour la requête AgeMinMaxEmissionSansCriteres.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmissionSansCriteres.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.AgeMinMaxEmissionSansCriteres)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.AgeMinMaxEmissionSansCriteres à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetAgeMinMaxEmissionSansCriteres.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmissionSansCriteres.AgeMinAssure">
	<summary>
Âge minimum permis à l'émission pour un assuré selon le type d'assurance de la protection.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmissionSansCriteres.AgeMaxAssure">
	<summary>
Âge maximum permis à l'émission pour un assuré selon le type d'assurance de la protection.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmissionSansCriteres.AgeMinProtection">
	<summary>
Âge minimum permis à l'émission d'une protection selon le type d'assurance de celle-ci. L'âge équivalent peut différer de l'âge des assurés conjoints. Cette propriété permet de faire une validation indépandente sur les assurés et les protections.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmissionSansCriteres.AgeMaxProtection">
	<summary>
Âge maximum permis à l'émission d'une protection selon le type d'assurance de celle-ci. L'âge équivalent peut différer de l'âge des assurés conjoints. Cette propriété permet de faire une validation indépandente sur les assurés et les protections.
 </summary>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmissionSansCriteres">
	<summary>
Requête qui permet d'obtenir les âges minimums et maximums selon le type d'assurance.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.AgeMinMaxEmission.Executer(IAFG.IA.VI.AF.PDF.ENUMs.GroupeAgeMinMaxEmission,IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance)">
	<summary>
	</summary>
	<param name="GrpAge">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.GroupeAgeMinMaxEmission</code>.</param>
	<param name="TypeAssurance">Ce paramètre est de type <code>IAFG.IA.VI.AF.Proposition.ENUMs.TypeAssurance</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.AgeMinMaxEmission">
	<summary>
 Classe de requete pour la requête AgeMinMaxEmission.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmission.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.AgeMinMaxEmission)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.AgeMinMaxEmission à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetAgeMinMaxEmission.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmission.AgeMinAssure">
	<summary>
Âge minimum permis à l'émission pour un assuré selon le type d'assurance de la protection.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmission.AgeMaxAssure">
	<summary>
Âge maximum permis à l'émission pour un assuré selon le type d'assurance de la protection.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmission.AgeMinProtection">
	<summary>
Âge minimum permis à l'émission d'une protection selon le type d'assurance de celle-ci. L'âge équivalent peut différer de l'âge des assurés conjoints. Cette propriété permet de faire une validation indépandente sur les assurés et les protections.
 </summary>
	<remarks>
	</remarks>
</member><member name="P:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmission.AgeMaxProtection">
	<summary>
Âge maximum permis à l'émission d'une protection selon le type d'assurance de celle-ci. L'âge équivalent peut différer de l'âge des assurés conjoints. Cette propriété permet de faire une validation indépandente sur les assurés et les protections.
 </summary>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.AgeMinMaxEmission">
	<summary>
Requête qui permet d'obtenir les âges minimums et maximums selon le type d'assurance.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Requetes.AgeEtDureeRembFlexiblePrimes.Executer(IAFG.IA.VI.AF.PDF.ENUMs.GroupeAgeEtDuree,System.Int16)">
	<summary>
	</summary>
	<param name="GrpAgeEtDuree">Ce paramètre est de type <code>IAFG.IA.VI.AF.PDF.ENUMs.GroupeAgeEtDuree</code>.</param>
	<param name="Age">Ce paramètre est de type <code>Int16</code>.</param>
	<remarks>
	</remarks>
	<returns></returns>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Requetes.AgeEtDureeRembFlexiblePrimes">
	<summary>
 Classe de requete pour la requête AgeEtDureeRembFlexiblePrimes.
 </summary>
	<remarks>
	</remarks>
</member><member name="M:IAFG.IA.VI.AF.PDFs.Donnees.AgeEtDureeRembFlexiblePrimes.#ctor(IAFG.IA.VI.AF.PDFs.PDFDataRow,IAFG.IA.VI.AF.PDFs.Requetes.AgeEtDureeRembFlexiblePrimes)">
	<summary>
 Initialise une nouvelle instance de la classe Donnees.AgeEtDureeRembFlexiblePrimes à l'aide des paramètres dataRow et accesPilotage.
 </summary>
	<param name="dataRow">Contient les informations relatives à un objetAgeEtDureeRembFlexiblePrimes.</param>
	<param name="parent">Représente l'objet requête</param>
	<remarks>
	</remarks>
</member><member name="T:IAFG.IA.VI.AF.PDFs.Donnees.AgeEtDureeRembFlexiblePrimes">
	<summary>
Permet d'obtenir les informations qui servent à déterminer à quel moment le remboursement flexible des primes atteindra 100%
 </summary>
	<remarks>
	</remarks>
</member>
</members>
</doc>